<?xml version="1.0" encoding="utf-8"?>
<rdf:RDF xmlns="http://www.reuters.com/RSTM/Core/" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:alert="http://www.reuters.com/RSTM/Status/alert/" xmlns:antiredef="http://www.reuters.com/RSTM/Helper/Redefinition/" xmlns:conf="http://www.reuters.com/RSTM/Configuration/" xmlns:core="http://www.reuters.com/RSTM/Core/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:default="http://www.reuters.com/RSTM/DefaultRuntime/" xmlns:fail="http://www.reuters.com/RSTM/Status/fail/" xmlns:pass="http://www.reuters.com/RSTM/Status/pass/" xmlns:redef="http://www.reuters.com/RSTM/Redefinition/" xmlns:rfs="http://www.reuters.com/RSTM/Metadata/" xmlns:run="http://www.reuters.com/RSTM/Runtime/" xmlns:script="http://www.reuters.com/RSTM/Implementation/Scripting/" xmlns:stdimpl="http://www.reuters.com/RSTM/Implementation/" xmlns:javascript="http://www.reuters.com/RSTM/JavaScript/" xml:base="http://www.reuters.com/RSTM/Core/">
  <Version>
    <Date>151028</Date>
    <Revision>9654</Revision>
  </Version>
  <Error rdf:about="#error.script">
    <dc:title xml:lang="en">Script error.</dc:title>
    <dc:description xml:lang="en">This is the default error sent by scripts.</dc:description>
    <redef:isInheritedBy rdf:resource="#error.script.syntax" />
    <redef:isInheritedBy rdf:resource="#error.script.cannotopenurl" />
    <outcome>
      <TestOutcome rdf:about="#to.script">
        <run:description xml:lang="en">Script failed.</run:description>
      </TestOutcome>
    </outcome>
  </Error>
  <Error rdf:about="#error.script.syntax">
    <dc:title xml:lang="en">Syntax error.</dc:title>
    <dc:description xml:lang="en">This type of error is sent when a syntax error is detected in the script</dc:description>
  </Error>
  <Error rdf:about="#error.script.cannotopenurl">
    <dc:title xml:lang="en">URL is not reachable.</dc:title>
    <dc:description xml:lang="en">This usually happens when the network is down.</dc:description>
    <valid>fail</valid>
    <outcome>
      <TestOutcome rdf:about="#to.script.cannotopenurl">
        <run:description xml:lang="en">Unable to open the service URL. Use 'Contact Us' from within the product for support.</run:description>
      </TestOutcome>
    </outcome>
  </Error>
  <Error rdf:about="#error.system">
    <dc:title xml:lang="en">System error.</dc:title>
    <dc:description xml:lang="en">All unexpected internal errors should transitively derive from this. The level of nuisance of this type of error to the user should be kept at a minimum.</dc:description>
    <valid>alert</valid>
    <outcome>
      <TestOutcome rdf:about="#to.system">
        <run:description xml:lang="en">Internal error: %(runPropertyURI='errorParameter1')</run:description>
      </TestOutcome>
    </outcome>
    <redef:isInheritedBy rdf:resource="#error.system.file.path_too_long" />
    <redef:isInheritedBy rdf:resource="#error.system.registry.invalid_key" />
    <redef:isInheritedBy rdf:resource="#error.system.registry.unsupported_datatype" />
    <redef:isInheritedBy rdf:resource="#error.script" />
    <redef:isInheritedBy rdf:resource="#error.system.wmi.not_available" />
    <redef:isInheritedBy rdf:resource="#error.system.plugin.not_implemented" />
    <redef:isInheritedBy rdf:resource="#error.system.plugin.not_found" />
    <redef:isInheritedBy rdf:resource="#error.system.plugin.required_version" />
    <redef:isInheritedBy rdf:resource="#error.system.plugin.initfailed" />
    <redef:isInheritedBy rdf:resource="#error.system.plugin.realtimefailure" />
    <redef:isInheritedBy rdf:resource="#error.system.wmi.empty-value" />
    <redef:isInheritedBy rdf:resource="#error.system.unknown_host" />
    <redef:isInheritedBy rdf:resource="#error.system.exception" />
  </Error>
  <Error rdf:about="#error.business">
    <dc:title xml:lang="en">Business error.</dc:title>
    <dc:description xml:lang="en">All identified errors should transitively derive from this.</dc:description>
    <valid>fail</valid>
    <outcome>
      <TestOutcome rdf:about="#to.business">
        <run:description xml:lang="en">Unknown error.</run:description>
      </TestOutcome>
    </outcome>
    <redef:isInheritedBy rdf:resource="#error.business.registry.unreadable_key" />
    <redef:isInheritedBy rdf:resource="#error.business.registry.unopenable_key" />
    <redef:isInheritedBy rdf:resource="#error.business.no_registered_progid" />
    <redef:isInheritedBy rdf:resource="#error.business.no_exact_version" />
    <redef:isInheritedBy rdf:resource="#error.business.resource_not_retrievable" />
    <redef:isInheritedBy rdf:resource="#error.business.service.error" />
    <redef:isInheritedBy rdf:resource="#error.business.service.unreachable" />
    <redef:isInheritedBy rdf:resource="#error.business.file.no_version" />
    <redef:isInheritedBy rdf:resource="#error.business.initfailed" />
  </Error>
  <Error rdf:about="#error.system.wmi.not_available">
    <dc:title xml:lang="en">WMI service is not available.</dc:title>
    <dc:description xml:lang="en">This error is returned when the WMI server is not accessible.</dc:description>
  </Error>
  <Error rdf:about="#error.system.wmi.empty-value">
    <dc:title xml:lang="en">WMI returned an empty value.</dc:title>
    <dc:description xml:lang="en">WMI returned an empty string</dc:description>
    <outcome>
      <TestOutcome rdf:about="#to.system.wmi.empty-value">
        <run:description xml:lang="en">WMI returned an empty string.</run:description>
      </TestOutcome>
    </outcome>
  </Error>
  <Error rdf:about="#error.system.unknown_host">
    <dc:title xml:lang="en">Unknown system error.</dc:title>
    <dc:description xml:lang="en">Unknown host</dc:description>
    <outcome>
      <TestOutcome rdf:about="#to.system.unknown_host">
        <run:description xml:lang="en">Unknown host.</run:description>
      </TestOutcome>
    </outcome>
  </Error>
  <Error rdf:about="#error.business.no_test_result">
    <dc:title xml:lang="en">No test result available.</dc:title>
    <dc:description xml:lang="en">Tests with no test result generate this type of error. Errors of this type are not considered errors. They help to categorize tests as being purely informative.</dc:description>
    <valid>info</valid>
  </Error>
  <Error rdf:about="#error.business.no_exact_version">
    <dc:title xml:lang="en">Unable to determine the exact version.</dc:title>
    <dc:description xml:lang="en">No version was found although the versioned target does exist.</dc:description>
  </Error>
  <Error rdf:about="#error.business.resource_not_retrievable">
    <dc:title xml:lang="en">Unable to determine version.</dc:title>
    <dc:description xml:lang="en">A resource, such as a file or a URL, could not be retrieved.</dc:description>
    <valid>warning</valid>
    <outcome>
      <TestOutcome rdf:about="#to.business.resource_not_retrievable">
        <run:description xml:lang="en">Unable to determine version.</run:description>
      </TestOutcome>
    </outcome>
  </Error>
  <Error rdf:about="#error.business.service.unreachable">
    <dc:title xml:lang="en">Not reachable.</dc:title>
    <dc:description xml:lang="en">A service was unreachable in a network request.</dc:description>
    <valid>fail</valid>
    <outcome>
      <TestOutcome rdf:about="#to.business.service.unreachable">
        <run:description xml:lang="en">The requested service is not available.</run:description>
      </TestOutcome>
    </outcome>
    <redef:isInheritedBy rdf:resource="#tr.service.error.business.service.unreachable" />
  </Error>
  <Error rdf:about="#error.business.service.error">
    <dc:title xml:lang="en">Service error.</dc:title>
    <dc:description xml:lang="en">A service request failed.</dc:description>
    <valid>fail</valid>
    <outcome>
      <TestOutcome rdf:about="#to.business.service.error">
        <run:description xml:lang="en">Error: %(runPropertyURI='errorParameter1'). Use 'Contact Us' from within the product for support.</run:description>
      </TestOutcome>
    </outcome>
    <redef:isInheritedBy rdf:resource="#tr.service.error.business.service.error" />
  </Error>
  <Error rdf:about="#error.system.file.path_too_long">
    <dc:title xml:lang="en">File path is too long.</dc:title>
    <run:description xml:lang="en">The following (expanded) file path is too long: %(runPropertyURI='errorParameter1')</run:description>
    <outcome>
      <TestOutcome rdf:about="#to.system.file.path_too_long">
        <run:description xml:lang="en">This file path is too long: %(runPropertyURI='errorParameter1')</run:description>
      </TestOutcome>
    </outcome>
  </Error>
  <Error rdf:about="#error.system.registry.invalid_key">
    <dc:title xml:lang="en">Invalid registry key.</dc:title>
    <dc:description xml:lang="en">An invalid registry key specified in the test database.</dc:description>
    <outcome>
      <TestOutcome rdf:about="#to.system.registry.invalid_key">
        <run:description xml:lang="en">This registry key is invalid: %(runPropertyURI='errorParameter1')</run:description>
      </TestOutcome>
    </outcome>
  </Error>
  <Error rdf:about="#error.business.registry.unreadable_key">
    <dc:title xml:lang="en">Unable to read registry key.</dc:title>
    <dc:description xml:lang="en">An unreadable registry key is specified in the test database.</dc:description>
    <outcome>
      <TestOutcome rdf:about="#to.business.registry.unreadable_key">
        <run:description xml:lang="en">Unable to read this registry key: %(runPropertyURI='errorParameter1')</run:description>
      </TestOutcome>
    </outcome>
  </Error>
  <Error rdf:about="#error.business.registry.unopenable_key">
    <dc:title xml:lang="en">Unable to access registry key.</dc:title>
    <dc:description xml:lang="en">An unopenable registry key is specified in the test database.</dc:description>
    <outcome>
      <TestOutcome rdf:about="#to.business.registry.unopenable_key">
        <run:description xml:lang="en">Unable to access this registry key: %(runPropertyURI='errorParameter1')</run:description>
      </TestOutcome>
    </outcome>
  </Error>
  <Error rdf:about="#error.system.registry.unsupported_datatype">
    <dc:title xml:lang="en">Registry key is not supported.</dc:title>
    <dc:description xml:lang="en">An unsupported registry value was found.</dc:description>
    <outcome>
      <TestOutcome rdf:about="#to.system.registry.unsupported_datatype">
        <run:description xml:lang="en">This registry key data type is not supported: %(runPropertyURI='errorParameter1')</run:description>
      </TestOutcome>
    </outcome>
  </Error>
  <Error rdf:about="#error.business.file.no_version">
    <dc:title xml:lang="en">File version is not available.</dc:title>
    <dc:description xml:lang="en">No file version was found on an existing file.</dc:description>
    <outcome>
      <TestOutcome rdf:about="#to.business.file.no_version">
        <run:description xml:lang="en">File version is not available for %(runPropertyURI='errorParameter1')</run:description>
      </TestOutcome>
    </outcome>
  </Error>
  <Error rdf:about="#error.business.no_registered_progid">
    <dc:title xml:lang="en">Unable to detect application.</dc:title>
    <dc:description xml:lang="en">A required COM prog ID was not registered when needed.</dc:description>
    <valid>alert</valid>
    <!-- ### FIXME -->
    <outcome>
      <TestOutcome rdf:about="#to.business.no_registered_progid">
        <!-- ### FIXME <run:description xml:lang="en">A required COM prog ID was not registered when needed.</run:description> -->
        <run:description xml:lang="en">Microsoft Excel is not installed.</run:description>
      </TestOutcome>
    </outcome>
  </Error>
  <Error rdf:about="#error.business.providers.key_error">
    <dc:title xml:lang="en">Configuration provider error.</dc:title>
    <dc:description xml:lang="en">Could not read setting from config provider.</dc:description>
    <valid>warning</valid>
    <outcome>
      <TestOutcome rdf:about="#to.business.providers.key_error">
        <run:description xml:lang="en">Unable to read configuration provider setting.</run:description>
      </TestOutcome>
    </outcome>
  </Error>
  <Error rdf:about="#error.business.cpurl.cannot_translate">
    <dc:title xml:lang="en">Unable to translate CPURL.</dc:title>
    <dc:description xml:lang="en">Could not translate cpurl to http.</dc:description>
    <valid>warning</valid>
    <outcome>
      <TestOutcome rdf:about="#to.business.cpurl.cannot_translate">
        <run:description xml:lang="en">Unable to translate CPURL to HTTP.</run:description>
      </TestOutcome>
    </outcome>
  </Error>
  <Error rdf:about="#error.system.plugin.not_implemented">
    <dc:title xml:lang="en">Plug-in is not implemented.</dc:title>
    <dc:description xml:lang="en">Plugin not implemented.</dc:description>
    <outcome>
      <TestOutcome rdf:about="#to.system.plugin.not_implemented">
        <run:description xml:lang="en">No test available for this component.</run:description>
      </TestOutcome>
    </outcome>
  </Error>
  <Error rdf:about="#error.system.plugin.not_found">
    <dc:title xml:lang="en">Plug-in is not found.</dc:title>
    <dc:description xml:lang="en">The plugin is not found.</dc:description>
    <outcome>
      <TestOutcome rdf:about="#to.system.plugin.not_found">
        <run:description xml:lang="en">The required plug-in is missing or corrupted: %(runPropertyURI='errorParameter1')</run:description>
      </TestOutcome>
    </outcome>
  </Error>
  <Error rdf:about="#error.system.plugin.initfailed">
    <dc:title xml:lang="en">The required plug-in is not initialized. </dc:title>
    <dc:description xml:lang="en">The plugin is not initialized.</dc:description>
    <outcome>
      <TestOutcome rdf:about="#to.system.plugin.initfailed">
        <run:description xml:lang="en">The required plug-in is not initialized. </run:description>
      </TestOutcome>
    </outcome>
  </Error>
  <Error rdf:about="#error.system.plugin.realtimefailure">
    <dc:title xml:lang="en">Failed to initialize real-time service.</dc:title>
    <dc:description xml:lang="en">Failed to initialize realtime.</dc:description>
    <outcome>
      <TestOutcome rdf:about="#to.system.plugin.realtimefailure">
        <run:description xml:lang="en">Failed to initialize real-time service.</run:description>
      </TestOutcome>
    </outcome>
  </Error>
  <Error rdf:about="#error.system.plugin.required_version">
    <dc:title xml:lang="en">Plug-in version does not meet the requirements.</dc:title>
    <dc:description xml:lang="en">The plugin version required for the test being executed is not installed.</dc:description>
    <outcome>
      <TestOutcome rdf:about="#to.system.plugin.required_version">
        <run:description xml:lang="en">The required version of the plug-in is not installed. Required: %(runPropertyURI='errorParameter1')</run:description>
      </TestOutcome>
    </outcome>
  </Error>
  <Error rdf:about="#error.system.activex.cannot_create">
    <dc:title xml:lang="en">Unable to create ActiveX control.</dc:title>
    <dc:description xml:lang="en">ActiveX cannot be instanciated.</dc:description>
    <valid>fail</valid>
    <outcome>
      <TestOutcome rdf:about="#to.system.activex.cannot_create">
        <run:description xml:lang="en">Unable to create ActiveX control.</run:description>
      </TestOutcome>
    </outcome>
  </Error>
  <Error rdf:about="#error.business.test.timeout">
    <dc:title xml:lang="en">Timeout occurred.</dc:title>
    <dc:description xml:lang="en">Timeout occured</dc:description>
    <valid>fail</valid>
    <outcome>
      <TestOutcome rdf:about="#to.business.test.timeout">
        <run:description xml:lang="en">Timeout occurred.</run:description>
      </TestOutcome>
    </outcome>
  </Error>
  <Error rdf:about="#error.business.initfailed">
    <dc:title xml:lang="en">Initialization failed.</dc:title>
    <dc:description xml:lang="en">This type of error is sent when initialisation of COM objects failed</dc:description>
    <outcome>
      <TestOutcome rdf:about="#to.error.business.initfailed">
        <run:description xml:lang="en">Initialization failed.</run:description>
      </TestOutcome>
    </outcome>
  </Error>
  <Error rdf:about="#error.system.exception">
    <dc:title xml:lang="en">Fatal error.</dc:title>
    <dc:description xml:lang="en">Exception error</dc:description>
    <outcome>
      <TestOutcome rdf:about="#to.system.exception">
        <run:description xml:lang="en">Fatal error. If the problem persists contact Thomson Reuters Customer support.</run:description>
      </TestOutcome>
    </outcome>
  </Error>
  <Error rdf:about="#client.older.than.testsuite">
    <dc:title xml:lang="en">TESTMSG_DC_TITLE_ERROR_BUSINESS_NO_TEST_RESULT_ERROR</dc:title>
    <dc:description xml:lang="en">Message to display when clients are older than test suite on server.</dc:description>
    <outcome>
      <TestOutcome rdf:about="#to.client.older.than.testsuite">
        <run:description xml:lang="en">Unable to process this test. Your local version of the test suite is out-of-date.</run:description>
      </TestOutcome>
    </outcome>
  </Error>
  <TestResult rdf:about="http://www.reuters.com/RSTM/Core/#tr.unknown-reference-value">
    <value>!!%(rfsPropertyURI='referenceValue')</value>
    <valid>info</valid>
    <outcome>
      <TestOutcome rdf:about="http://www.reuters.com/RSTM/Core/#to.unknown-reference-value">
        <run:description xml:lang="en">No minimum requirement defined.</run:description>
      </TestOutcome>
    </outcome>
  </TestResult>
  <TestOutcome rdf:about="#to.rst.test.pass">
    <run:description xml:lang="en">Pass.</run:description>
  </TestOutcome>
  <TestOutcome rdf:about="#to.rst.test.fail">
    <run:description xml:lang="en">Fail.</run:description>
  </TestOutcome>
  <TestOutcome rdf:about="#to.rst.test.pass.wric">
    <run:description xml:lang="en">Pass with RIC %(rfsPropertyURI='RIC')</run:description>
  </TestOutcome>
  <TestOutcome rdf:about="#to.rst.test.fail.wric">
    <run:description xml:lang="en">Fail with RIC %(rfsPropertyURI='RIC')</run:description>
  </TestOutcome>
  <TestOutcome rdf:about="#to.rst.test.fail.wric.wcause">
    <run:description xml:lang="en">Fail with RIC %(rfsPropertyURI='RIC'). Cause: %(runPropertyURI='ErrorCause')</run:description>
  </TestOutcome>
  <Plugin rdf:about="#rstplugin.webservices">
    <dc:description>WebServices Test Plugin</dc:description>
    <conf:dll>RstPluginWebServices.dll</conf:dll>
    <conf:classID>2968B069-8A6A-4b7a-B223-A0A99D0A27E2</conf:classID>
  </Plugin>
  <Test rdf:about="#test.16">
    <!-- Header -->
    <requiresPlugin rdf:resource="#rstplugin.webservices.6" />
    <!--<rfs:isRerunAllowed>true</rfs:isRerunAllowed>-->
    <object>reuters_rsttest.name='WStestFileStorage'.status</object>
    <isContainedBy rdf:resource="#group.serviceAvailability" />
    <priority>0.2002</priority>
    <dc:title xml:lang="en">Thomson Reuters Drive Service:</dc:title>
    <dc:description xml:lang="en">
      Tests the Datastore, i.e. the underlying technology/server for
      the remote Reuters Drive. Performs a low level write/read. It is more a test of the remote
      server rather than a test of a Kobra component itself
    </dc:description>
    <!-- Display -->
    <default:description xml:lang="en">%(runPropertyURI='status')</default:description>
    <!-- Validation Logic -->
    <testResult>
      <TestResult rdf:about="#tr.16.1">
        <value>1</value>
        <valid>pass</valid>
        <outcome>
          <TestOutcome rdf:about="#to.16.1">
            <run:description xml:lang="en">Accessible.</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.16.2">
        <value>-1</value>
        <valid>fail</valid>
        <outcome>
          <TestOutcome rdf:about="#to.16.2">
            <run:description xml:lang="en">Not accessible.</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
  </Test>
  <Test rdf:about="#test.18">
    <!-- Header -->
    <requiresPlugin rdf:resource="#rstplugin.webservices.6" />
    <!--<rfs:isRerunAllowed>true</rfs:isRerunAllowed>-->
    <object>reuters_rsttest.name='WStestHttp1_1'.status</object>
    <isContainedBy rdf:resource="#group.webservices" />
    <priority>0.2002</priority>
    <dc:title xml:lang="en">HTTP 1.1 Service Availability:</dc:title>
    <dc:description xml:lang="en">
      Tests the HTTP 1.1, i.e. the capability of network that using http 1.1 protocol
    </dc:description>
    <!-- Display -->
    <default:description xml:lang="en">%(runPropertyURI='status')</default:description>
    <!-- Validation Logic -->
    <testResult>
      <TestResult rdf:about="#tr.18.1">
        <value>1</value>
        <valid>pass</valid>
        <outcome>
          <TestOutcome rdf:about="#to.18.1">
            <run:description xml:lang="en">Available.</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.18.2">
        <value>-1</value>
        <valid>warning</valid>
        <outcome>
          <TestOutcome rdf:about="#to.18.2">
            <run:description xml:lang="en">Not available.</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
  </Test>
  <Plugin rdf:about="#rstplugin.information.dotnet">
    <dc:description>.Net Framework Information Plugin</dc:description>
    <conf:dll>RstPluginInformation.dll</conf:dll>
    <conf:classID>19E20EED-81B4-4382-B404-0AE9C154ABC7</conf:classID>
  </Plugin>
  <Test rdf:about="#test.17">
    <requiresPlugin rdf:resource="#rstplugin.information.dotnet.6" />
    <!-- Header -->
    <object>reuters_rsttest.name='.Net Framework All'.value</object>
    <isContainedBy rdf:resource="#group.prerequisites.software" />
    <priority>11</priority>
    <dc:title xml:lang="en">.NET Framework Version:</dc:title>
    <dc:description xml:lang="en">Lists the version(s) of .Net framework installed on the machine.</dc:description>
    <!-- Display -->
    <default:description xml:lang="en"> %(runPropertyURI='value') </default:description>
    <!--stdimpl:javascript>
			//Logger.Error("DotNet: set 2.0");
			testResult.setRawResult(-1);
			//testResult.setRawResult("2.0 SP2");
			//testResult.setRawResult("2.0 SP2 , 3.0 SP2 , 3.5 SP1");
			//testResult.setRawResult("2.0 SP2 , 3.0 SP2 , 3.5 SP1 , 4.0 Full");
			//testResult.setRawResult("2.0 SP2 , 3.0 SP2 , 3.5 SP1 , 4.5 Full");
			
			//var fso = new ActiveXObject("Scripting.FileSystemObject");
			//var tempFile = fso.OpenTextFile("c:\\temp\\dotnet.txt", 1);
			//var line = tempFile.ReadLine();
			//Logger.Error("*** dotnet: [" + line + "]");
			//var dotnet = line;
			//testResult.setRawResult(dotnet);

		</stdimpl:javascript-->
    <!-- Validation Logic -->
    <testResult>
      <TestResult rdf:about="#tr.17.nodotnet.excel">
        <javascript:valid xmlns:javascript="http://www.reuters.com/RSTM/Javascript/">

          // Only for Eikon 3.0 or more
          var configProvider = RDMC.KobraProviderManager.FindProvider("Configuration");
          var version = "";
          var product = "";
          try
          {
          version = configProvider.GetPropertyValue("RDMC.Version");
          product = configProvider.GetPropertyValue("RDMC.Product");
          }
          catch(e) {}
          if(version=="") return false;
          if(product != "excel") return false;

          // no .net
          return (testResult == "-1");

        </javascript:valid>
        <valid>info</valid>
        <outcome>
          <TestOutcome rdf:about="#to.17.nodotnet.excel">
            <run:description xml:lang="en">.NET Framework is not installed.</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.17.dotnet.excel">
        <javascript:valid xmlns:javascript="http://www.reuters.com/RSTM/Javascript/">

          // Only for Eikon 3.0 or more
          var configProvider = RDMC.KobraProviderManager.FindProvider("Configuration");
          var version = "";
          var product = "";
          try
          {
          version = configProvider.GetPropertyValue("RDMC.Version");
          product = configProvider.GetPropertyValue("RDMC.Product");
          }
          catch(e) {}
          if(version=="") return false;
          if(product != "excel") return false;

          // no .net
          return (testResult != "-1");

        </javascript:valid>
        <valid>info</valid>
        <outcome>
          <TestOutcome rdf:about="#to.17.dotnet.excel">
            <run:description xml:lang="en">.NET Framework %(runPropertyURI='value')</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.17.nodotnet">
        <javascript:valid xmlns:javascript="http://www.reuters.com/RSTM/Javascript/">

          // Only for Eikon 3.0 or more
          var configProvider = RDMC.KobraProviderManager.FindProvider("Configuration");
          var version = "";
          var product = "";
          try
          {
          version = configProvider.GetPropertyValue("RDMC.Version");
          product = configProvider.GetPropertyValue("RDMC.Product");
          }
          catch(e) {}
          if(version=="") return false;
          if(product == "excel") return false;

          // no .net
          return (testResult == "-1");

        </javascript:valid>
        <valid>fail</valid>
        <outcome>
          <TestOutcome rdf:about="#to.17.nodotnet">
            <run:description xml:lang="en">.NET Framework is not installed.</run:description>
            <run:recommendation xml:lang="en">.NET Framework 4 Client Profile or above is required. You can download from &lt;a target='_blank' href='http://www.microsoft.com/en-us/download/details.aspx?id=17113'&gt;here&lt;/a&gt;. Please contact your system administrator if you do not have administrative rights.</run:recommendation>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.17.dotnet4">
        <javascript:valid xmlns:javascript="http://www.reuters.com/RSTM/Javascript/">

          // Only for Eikon 3.0 or more
          var configProvider = RDMC.KobraProviderManager.FindProvider("Configuration");
          var version = "";
          var product = "";
          try
          {
          version = configProvider.GetPropertyValue("RDMC.Version");
          product = configProvider.GetPropertyValue("RDMC.Product");
          }
          catch(e) {}
          if(version=="") return false;
          if(product == "excel") return false;

          // .net 4.x
          var pos4 = testResult.search("4.");
          return (pos4 != -1);

        </javascript:valid>
        <valid>pass</valid>
        <outcome>
          <TestOutcome rdf:about="#to.17.dotnet4">
            <run:description xml:lang="en">.NET Framework %(runPropertyURI='value')</run:description>
            <run:recommendation xml:lang="en">Required: .NET Framework 4.0 or above</run:recommendation>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.17.dotnet">
        <javascript:valid xmlns:javascript="http://www.reuters.com/RSTM/Javascript/">

          // Only for Eikon 3.0 or more
          var configProvider = RDMC.KobraProviderManager.FindProvider("Configuration");
          var version = "";
          var product = "";
          try
          {
          version = configProvider.GetPropertyValue("RDMC.Version");
          product = configProvider.GetPropertyValue("RDMC.Product");
          }
          catch(e) {}
          if(version=="") return false;
          if(product == "excel") return false;

          // .net something but not 4.x
          if (testResult == "-1") return false;
          var pos4 = testResult.search("4.");
          return (pos4 == -1);

        </javascript:valid>
        <valid>fail</valid>
        <outcome>
          <TestOutcome rdf:about="#to.17.dotnet">
            <run:description xml:lang="en">.NET Framework %(runPropertyURI='value')</run:description>
            <run:recommendation xml:lang="en">.NET Framework 4 Client Profile or above is required. You can download from &lt;a target='_blank' href='http://www.microsoft.com/en-us/download/details.aspx?id=17113'&gt;here&lt;/a&gt;. Please contact your system administrator if you do not have administrative rights.</run:recommendation>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.17.1">
        <javascript:valid xmlns:javascript="http://www.reuters.com/RSTM/Javascript/">

          // Only for previous versions
          var configProvider = RDMC.KobraProviderManager.FindProvider("Configuration");
          var version = "";
          var product = "";
          try
          {
          version = configProvider.GetPropertyValue("RDMC.Version");
          product = configProvider.GetPropertyValue("RDMC.Product");
          }
          catch(e) {}
          if(version!="") return false;
          if(product == "excel") return false;

          // no .net
          return (testResult == "-1");

        </javascript:valid>
        <valid>warning</valid>
        <outcome>
          <TestOutcome rdf:about="#to.17.1">
            <run:description xml:lang="en">.NET Framework is not installed.</run:description>
            <run:recommendation xml:lang="en">.NET Framework version 4.0 is not installed on your workstation: certain product features will not be available. To take advantage of these features contact your system administrator for assistance with installing .NET Framework 4.0</run:recommendation>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.17.2.pass">
        <javascript:valid xmlns:javascript="http://www.reuters.com/RSTM/Javascript/">

          // Only for previous versions
          var configProvider = RDMC.KobraProviderManager.FindProvider("Configuration");
          var version = "";
          var product = "";
          try
          {
          version = configProvider.GetPropertyValue("RDMC.Version");
          product = configProvider.GetPropertyValue("RDMC.Product");
          }
          catch(e) {}
          if(version!="") return false;
          if(product == "excel") return false;

          // .net 3.5 SPx or 4.x
          var pos35 = testResult.search("3.5 SP");
          var pos40 = testResult.search("4.0");
          return (pos35 != -1 || pos40 != -1);

        </javascript:valid>
        <valid>pass</valid>
        <outcome>
          <TestOutcome rdf:about="#to.17.2">
            <run:description xml:lang="en">.NET Framework %(runPropertyURI='value')</run:description>
            <run:recommendation xml:lang="en">Required version: .NET Framework 3.5 SP1 or .NET Framework 4.0 Client Profile </run:recommendation>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.17.3.warning">
        <javascript:valid xmlns:javascript="http://www.reuters.com/RSTM/Javascript/">

          // Only for previous versions
          var configProvider = RDMC.KobraProviderManager.FindProvider("Configuration");
          var version = "";
          var product = "";
          try
          {
          version = configProvider.GetPropertyValue("RDMC.Version");
          product = configProvider.GetPropertyValue("RDMC.Product");
          }
          catch(e) {}
          if(version!="") return false;
          if(product == "excel") return false;

          // .net something but not 3.5 SPx or 4.0
          var pos35 = testResult.search("3.5 SP");
          var pos40 = testResult.search("4.0");
          return (pos35 == -1 &amp;&amp; pos40 == -1);

        </javascript:valid>
        <valid>warning</valid>
        <outcome>
          <TestOutcome rdf:about="#to.17.3">
            <run:description xml:lang="en">.NET Framework %(runPropertyURI='value')</run:description>
            <run:recommendation xml:lang="en">.NET Framework version 4.0 is not installed on your workstation: certain product features will not be available. To take advantage of these features contact your system administrator for assistance with installing .NET Framework 4.0</run:recommendation>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
  </Test>
  <Plugin rdf:about="#rstplugin.information.misc">
    <dc:description>Miscellancelous Information Plugin</dc:description>
    <conf:dll>RstPluginInformation.dll</conf:dll>
    <conf:classID>9A3021E0-7F39-459d-9D3A-F6744E69B815</conf:classID>
  </Plugin>
  <Test rdf:about="#test.22">
    <!-- Header -->
    <requiresPlugin rdf:resource="#rstplugin.information.misc.6" />
    <object>reuters_rsttest.name='getUserName'.value</object>
    <isContainedBy rdf:resource="#group.information.system" />
    <priority>3</priority>
    <dc:title xml:lang="en">Windows User Account Name:</dc:title>
    <dc:description xml:lang="en">Displays user name that is running the current process, often the logged user.</dc:description>
    <!-- Display -->
    <default:description xml:lang="en">%(runPropertyURI='value')</default:description>
    <!-- Validation Logic -->
  </Test>
  <Test rdf:about="#test.23">
    <!-- Header -->
    <requiresPlugin rdf:resource="#rstplugin.information.misc.6" />
    <object>reuters_rsttest.name='getUserLocale'.value</object>
    <isContainedBy rdf:resource="#group.information.system" />
    <priority>8</priority>
    <dc:description xml:lang="en">
      Displays the user locale of the user (associated with the profile, not the windows
      language) on the computer
    </dc:description>
    <dc:title xml:lang="en">User Locale:</dc:title>
    <!-- Display -->
    <default:description xml:lang="en">%(runPropertyURI='value')</default:description>
    <!-- Validation Logic -->
  </Test>
  <Plugin rdf:about="#rstplugin.prerequisites.vba">
    <dc:description>VBA plugin</dc:description>
    <conf:dll>RstPluginPrerequisites.dll</conf:dll>
    <conf:classID>22CF0741-F7E6-47b8-A415-77111C6CB646</conf:classID>
  </Plugin>
  <Error rdf:about="#error.business.rstplugin.prerequisites.vba.cannot_determine_vba_version">
    <outcome>
      <TestOutcome rdf:about="#to.error.business.rstplugin.prerequisites.vba.cannot_determine_vba_version">
        <run:description xml:lang="en">Unable to determine your VBA version.</run:description>
      </TestOutcome>
    </outcome>
    <valid>alert</valid>
  </Error>
  <Error rdf:about="#error.business.rstplugin.prerequisites.vba.cannot_find_vba_version">
    <outcome>
      <TestOutcome rdf:about="#to.error.business.rstplugin.prerequisites.vba.cannot_find_vba_version">
        <run:description xml:lang="en">Unable to retrieve VBA version.</run:description>
      </TestOutcome>
    </outcome>
    <valid>alert</valid>
  </Error>
  <Test rdf:about="#test.110">
    <!-- Header -->
    <requiresPlugin rdf:resource="#rstplugin.prerequisites.vba.6" />
    <object>Reuters_RstTest.name='testVBAPresence'.value</object>
    <isContainedBy rdf:resource="#group.prerequisites.software" />
    <priority>0.10003</priority>
    <dc:title xml:lang="en">Visual Basic for Applications:</dc:title>
    <!-- Display -->
    <default:recommendation xml:lang="en">Supported VBA versions are 6.4, 6.5, 7.0 (32-bit) and 7.1 (32-bit)</default:recommendation>
    <testResult>
      <TestResult rdf:about="#tr.error.business.rstplugin.prerequisites.vba.cannot_find_vba_fail">
        <javascript:valid xmlns:javascript="http://www.reuters.com/RSTM/Javascript/">
          var isInstalled = false;
          // Using Try Catch as far as RDMC.isProductInstalled() was implemented in L19 then older version test
          // Suite compatibility is broken.
          try
          {
          isInstalled = RDMC.isProductInstalled();
          }
          catch(e)
          {
          return false;
          }
          if (testResult == "NOT_INSTALLED" || testResult == "")
          {
          if (isInstalled == true)
          return true;
          else
          return false;
          }
          else
          {
          return false;
          }
        </javascript:valid>
        <valid>fail</valid>
        <outcome rdf:resource="#to.error.business.rstplugin.prerequisites.vba.cannot_find_vba" />
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.error.business.rstplugin.prerequisites.vba.cannot_find_vba">
        <javascript:valid xmlns:javascript="http://www.reuters.com/RSTM/Javascript/">
          var isInstalled = false;
          // Using Try Catch as far as RDMC.isProductInstalled() was implemented in L19 then older version test
          // Suite compatibility is broken.
          try
          {
          isInstalled = RDMC.isProductInstalled();
          }
          catch(e)
          {
          return false;
          }
          if (testResult == "NOT_INSTALLED" || testResult == "")
          {
          if (isInstalled == true)
          return false;
          else
          return true;
          }
          else
          {
          return false;
          }
        </javascript:valid>
        <valid>alert</valid>
        <outcome rdf:resource="#to.error.business.rstplugin.prerequisites.vba.cannot_find_vba" />
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.error.business.rstplugin.prerequisites.vba.vba_version_too_low_fail">
        <javascript:valid xmlns:javascript="http://www.reuters.com/RSTM/Javascript/">

          var isInstalled = false;
          // Using Try Catch as far as RDMC.isProductInstalled() was implemented in L19 then older version test
          // Suite compatibility is broken.
          try
          {
          isInstalled = RDMC.isProductInstalled();
          }
          catch(e)
          {
          return false;
          }
          var LOWEST_VERSION = 6.4;
          if (testResult &lt; LOWEST_VERSION)
          {
          if (isInstalled == true)
          return true;
          else
          return false;
          }
          else
          {
          return false;
          }
        </javascript:valid>
        <valid>fail</valid>
        <outcome rdf:resource="#to.error.business.rstplugin.prerequisites.vba.cannot_find_vba" />
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.error.business.rstplugin.prerequisites.vba.vba_version_too_low_alert">
        <javascript:valid xmlns:javascript="http://www.reuters.com/RSTM/Javascript/">
          var isInstalled = false;
          // Using Try Catch as far as RDMC.isProductInstalled() was implemented in L19 then older version test
          // Suite compatibility is broken.
          try
          {
          isInstalled = RDMC.isProductInstalled();
          }
          catch(e)
          {
          return false;
          }
          var LOWEST_VERSION = 6.4;
          if (testResult &lt; LOWEST_VERSION)
          {
          if (isInstalled == true)
          return false;
          else
          return true;
          }
          else
          {
          return false;
          }
        </javascript:valid>
        <valid>alert</valid>
        <outcome rdf:resource="#to.error.business.rstplugin.prerequisites.vba.cannot_find_vba" />
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.error.business.rstplugin.prerequisites.vba.vba_version_too_high">
        <value>&gt;7.1</value>
        <valid>warning</valid>
        <outcome rdf:resource="#to.error.business.rstplugin.prerequisites.vba.cannot_find_vba" />
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.rstplugin.prerequisites.vba.desktop.too.old">
        <javascript:valid xmlns:javascript="http://www.reuters.com/RSTM/Javascript/">
          var isInstalled = false;
          // Using Try Catch as far as RDMC.isProductInstalled() was implemented in L19 then older version test
          // Suite compatibility is broken.
          try
          {
          isInstalled = RDMC.isProductInstalled();
          return false;
          }
          catch(e)
          {
          return true;
          }
        </javascript:valid>
        <valid>info</valid>
        <outcome rdf:resource="#to.client.older.than.testsuite" />
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.rstplugin.prerequisites.vba.valid.110.1">
        <value>*</value>
        <valid>pass</valid>
        <outcome>
          <TestOutcome rdf:about="#to.rstplugin.prerequisites.vba.valid.110.1">
            <run:description xml:lang="en">Version: %(runPropertyURI='VBAVersion')</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
  </Test>
  <TestOutcome rdf:about="#to.error.business.rstplugin.prerequisites.vba.vba_version_too_low">
    <run:description xml:lang="en">Version: %(runPropertyURI='VBAVersion'). VBA versions lower than 6.4 are no longer supported. You may experience problems with your version.</run:description>
  </TestOutcome>
  <TestOutcome rdf:about="#to.error.business.rstplugin.prerequisites.vba.cannot_find_vba">
    <run:description xml:lang="en">A supported VBA version is not found.</run:description>
  </TestOutcome>
  <TestOutcome rdf:about="#to.error.business.rstplugin.prerequisites.vba.vba_version_too_high">
    <run:description xml:lang="en">Version: %(runPropertyURI='VBAVersion'). Your VBA version is newer than the officially supported versions.</run:description>
  </TestOutcome>
  <Test rdf:about="#test.21">
    <!-- Header -->
    <object>Win32_OperatingSystem.OSLanguage</object>
    <isContainedBy rdf:resource="#group.prerequisites.software" />
    <priority>0.10002</priority>
    <dc:title xml:lang="en">Operating System Language:</dc:title>
    <dc:description xml:lang="en">Displays the language of the operating system.</dc:description>
    <!-- Display -->
    <default:description xml:lang="en">%(runPropertyURI='languageString') (%(runPropertyURI='value')) </default:description>
    <stdimpl:javascript>
      try
      {
      var services = GetObject("winmgmts:{impersonationLevel=impersonate}!\\\\.\\root\\cimv2");
      } catch(e)
      {
      throw new RSTM_ScriptException("error.business.service.unreachable");
      }

      var q = services.ExecQuery("SELECT OSLanguage FROM Win32_OperatingSystem")
      if (!q)
      {
      throw new RSTM_ScriptException("error.business.service.unreachable");
      }

      var OSLanguage;
      for ( var enumItems = new Enumerator(q); !enumItems.atEnd(); enumItems.moveNext() )

      {

      var objItem          = enumItems.item();
      OSLanguage            = objItem.OSLanguage;

      }
      // debugger;
      testResult.setRawResult(OSLanguage);
      var langString=RDMC.RDMCLib.Tools.GetLangStringFromLangId(OSLanguage);
      testResult.setProperty("languageString",langString,"");
      return;
    </stdimpl:javascript>
    <!-- Validation Logic -->
  </Test>
  <Test rdf:about="#test.24">
    <!-- Header -->
    <object>Reuters_RstTest.name='getComputerName'.value</object>
    <isContainedBy rdf:resource="#group.information.system" />
    <requiresPlugin rdf:resource="#rstplugin.information.misc.6" />
    <priority>1</priority>
    <dc:title xml:lang="en">Computer Name:</dc:title>
    <dc:description xml:lang="en">Displays the name of this computer</dc:description>
    <default:description xml:lang="en">%(runPropertyURI='value')</default:description>
  </Test>
  <Test rdf:about="#test.25">
    <!-- Header -->
    <object>Win32_ComputerSystem.Domain</object>
    <isContainedBy rdf:resource="#group.information.system" />
    <priority>2</priority>
    <dc:title xml:lang="en">Computer Domain:</dc:title>
    <dc:description xml:lang="en">Displays the domain name of this computer</dc:description>
    <!-- Display -->
    <default:description xml:lang="en">%(runPropertyURI='value')</default:description>
    <!-- Validation Logic -->
  </Test>
  <Test rdf:about="#test.26">
    <!-- Header -->
    <requiresPlugin rdf:resource="#rstplugin.information.misc.6" />
    <object>reuters_rsttest.name='isUserAdmin'.status</object>
    <isContainedBy rdf:resource="#group.information.system" />
    <priority>4</priority>
    <dc:title xml:lang="en">User Rights:</dc:title>
    <dc:description xml:lang="en">Tells if the user running RDMC has administrator rights.</dc:description>
    <!-- Display -->
    <default:description xml:lang="en">%(runPropertyURI='status')</default:description>
    <!-- Validation Logic -->
    <testResult>
      <TestResult rdf:about="#tr.26.1">
        <value>xp-limited</value>
        <valid>info</valid>
        <outcome>
          <TestOutcome rdf:about="#to.26.1">
            <run:description xml:lang="en">Standard account.</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.26.2">
        <value>xp-admin</value>
        <valid>info</valid>
        <outcome>
          <TestOutcome rdf:about="#to.26.2">
            <run:description xml:lang="en">Administrator account.</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.26.3">
        <value>vista-admin-elevated</value>
        <valid>info</valid>
        <outcome>
          <TestOutcome rdf:about="#to.26.3">
            <run:description xml:lang="en">Administrator account (elevated privileges).</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.26.4">
        <value>vista-limited</value>
        <valid>info</valid>
        <outcome>
          <TestOutcome rdf:about="#to.26.4">
            <run:description xml:lang="en">Standard Account</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.26.5">
        <value>vista-admin</value>
        <valid>info</valid>
        <outcome>
          <TestOutcome rdf:about="#to.26.5">
            <run:description xml:lang="en">Administrator account (restricted).</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
  </Test>
  <Test rdf:about="#test.27">
    <requiresPlugin rdf:resource="#rstplugin.information.misc.6" />
    <object>reuters_rsttest.name='getUserTimeZone'.value</object>
    <isContainedBy rdf:resource="#group.information.system" />
    <priority>6</priority>
    <dc:title xml:lang="en">User Time Zone:</dc:title>
    <dc:description xml:lang="en">Displays the user timezone (formatted as offset+cities/regions)</dc:description>
    <!-- Display -->
    <testResult>
      <TestResult rdf:about="#tr.27.not_determined">
        <value>not_determined</value>
        <valid>warning</valid>
        <outcome>
          <TestOutcome rdf:about="#to.27.not_determined">
            <run:description xml:lang="en">User Time Zone could not be determined</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.27.info">
        <value>*</value>
        <valid>info</valid>
        <outcome>
          <TestOutcome rdf:about="#to.27.info">
            <run:description xml:lang="en">%(runPropertyURI='value')</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
  </Test>
  <Test rdf:about="#test.28">
    <!-- Header -->
    <requiresPlugin rdf:resource="#rstplugin.information.misc.6" />
    <object>Reuters_RstTest.name='getCitrixMode'.value</object>
    <isContainedBy rdf:resource="#group.information.system" />
    <priority>10</priority>
    <dc:title xml:lang="en">Thin Client Run Mode:</dc:title>
    <dc:description xml:lang="en">Tells whether the RDMC is running from a citrix/RDP session.</dc:description>
    <!-- Display -->
    <default:description xml:lang="en">%(runPropertyURI='value')</default:description>
    <!-- Validation Logic -->
    <testResult>
      <TestResult rdf:about="#tr.28.1">
        <value>0</value>
        <valid>info</valid>
        <outcome>
          <TestOutcome rdf:about="#to.28.1">
            <run:description xml:lang="en">Running locally.</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.28.2">
        <value>*</value>
        <valid>info</valid>
        <outcome>
          <TestOutcome rdf:about="#to.28.2">
            <run:description xml:lang="en">Running remotely.</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
  </Test>
  <Test rdf:about="#test.29">
    <!-- Header -->
    <object>Reuters_RstTest.name='ExcelLanguage'.value</object>
    <isContainedBy rdf:resource="#group.information.system" />
    <priority>9</priority>
    <dc:title xml:lang="en">Excel Language:</dc:title>
    <!-- Display -->
    <!--<default:description xml:lang="en">TESTMSG_DEFAULT_DESCRIPTION_TEST_29</default:description>-->
    <rfs:excelVersion>not_installed</rfs:excelVersion>
    <!-- Validation Logic -->
    <stdimpl:javascript>

      var excelVersion = testResult.getTest().getProperty("http://www.reuters.com/RSTM/Metadata/excelVersion", "");
      Logger.debug("Detected Excel version = '" + excelVersion + "'");

      if( excelVersion == "not_installed" )
      {	// Not installed
      Logger.debug("Excel is not installed");
      testResult.setRawResult("not_installed");
      }
      else if( excelVersion == "sxs" )
      {	// SxS installation
      Logger.debug("Side by side Excel installations detected");
      testResult.setRawResult("sxs");
      }
      else if( excelVersion == "unknown"  )
      {	// Unknown version
      Logger.debug("Unknown excel version");
      testResult.setRawResult("unknown");
      }
      else
      {
      try
      {
      var excelVersionNum = parseInt(excelVersion);
      var WshShell = new ActiveXObject("WScript.Shell");
      var langCode = 0;
      if( excelVersionNum &lt;= 11 )
      {	// Until Office 2003, the key to check is HKCU\Software\Microsoft\Office\xx.0\Common\\LanguageResources\InstallLanguage
      langCode = WshShell.RegRead("HKEY_CURRENT_USER\\Software\\Microsoft\\Office\\" + excelVersion + ".0\\Common\\LanguageResources\\InstallLanguage");
      }
      else
      {	// Since Office 2007, the key to check is HKCU\Software\Microsoft\Office\xx.0\Common\\LanguageResources\UILanguage
      langCode = WshShell.RegRead("HKEY_CURRENT_USER\\Software\\Microsoft\\Office\\" + excelVersion + ".0\\Common\\LanguageResources\\UILanguage");
      }
      Logger.debug("Detected Excel language code = ' " + langCode  + "'");
      var langString=RDMC.RDMCLib.Tools.GetLangStringFromLangId(langCode);
      Logger.debug("Detected Excel language string = ' " + langString  + "'");
      testResult.setRawResult(langCode);
      testResult.setProperty("languageString", langString, "");
      }
      catch( e )
      {
      Logger.debug("An exception occured while determining Excel language");
      testResult.setRawResult("error");
      }
      }

      <!-- this implementation should have been used if it wasn't so risky to launch Excel...
			if Excel is a little bit broken, it might popup, or not work....
			var objXL = new ActiveXObject( "Excel.Application" );
			var langCode = objXL.LanguageSettings.LanguageID(2);
			testResult.setRawResult(langCode);
			var langString=RDMC.RDMCLib.Tools.GetLangStringFromLangId(langCode);
			testResult.setProperty("languageString",langString,"");
			return;-->
    </stdimpl:javascript>
    <testResult>
      <TestResult rdf:about="#tr.29.not_installed">
        <value>not_installed</value>
        <valid>info</valid>
        <outcome>
          <TestOutcome rdf:about="#to.29.not_installed">
            <run:description xml:lang="en">Microsoft Excel is not installed.</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.29.error">
        <value>error</value>
        <valid>info</valid>
        <outcome>
          <TestOutcome rdf:about="#to.29.error">
            <run:description xml:lang="en">Unable to determine Microsoft Excel language.</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.29.sxs">
        <value>sxs</value>
        <valid>info</valid>
        <outcome>
          <TestOutcome rdf:about="#to.29.sxs">
            <run:description xml:lang="en">Multiple versions of Microsoft Excel are installed. Thomson Reuters provides only limited support for this setup.</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.29.unknown">
        <value>unknown</value>
        <valid>info</valid>
        <outcome>
          <TestOutcome rdf:about="#to.29.unknown">
            <run:description xml:lang="en">Unable to determine Microsoft Excel language.</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.29.valid">
        <value>*</value>
        <valid>info</valid>
        <outcome>
          <TestOutcome rdf:about="#to.29.valid">
            <run:description xml:lang="en">%(runPropertyURI='languageString') (%(runPropertyURI='value')) </run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
  </Test>
  <NaturalRedefinition rdf:about="#redef.excelversion.unknown">
    <redef:overrides rdf:resource="#test.29" />
    <rfs:excelVersion>unknown</rfs:excelVersion>
  </NaturalRedefinition>
  <NaturalRedefinition rdf:about="#redef.excelversion.sxs">
    <redef:overrides rdf:resource="#test.29" />
    <rfs:excelVersion>sxs</rfs:excelVersion>
  </NaturalRedefinition>
  <NaturalRedefinition rdf:about="#redef.excelversion.2000">
    <redef:overrides rdf:resource="#test.29" />
    <rfs:excelVersion>9</rfs:excelVersion>
  </NaturalRedefinition>
  <NaturalRedefinition rdf:about="#redef.excelversion.XP">
    <redef:overrides rdf:resource="#test.29" />
    <rfs:excelVersion>10</rfs:excelVersion>
  </NaturalRedefinition>
  <NaturalRedefinition rdf:about="#redef.excelversion.2003">
    <redef:overrides rdf:resource="#test.29" />
    <rfs:excelVersion>11</rfs:excelVersion>
  </NaturalRedefinition>
  <NaturalRedefinition rdf:about="#redef.excelversion.2007">
    <redef:overrides rdf:resource="#test.29" />
    <rfs:excelVersion>12</rfs:excelVersion>
  </NaturalRedefinition>
  <NaturalRedefinition rdf:about="#redef.excelversion.2010">
    <redef:overrides rdf:resource="#test.29" />
    <rfs:excelVersion>14</rfs:excelVersion>
  </NaturalRedefinition>
  <NaturalRedefinition rdf:about="#redef.excelversion.2013">
    <redef:overrides rdf:resource="#test.29" />
    <rfs:excelVersion>15</rfs:excelVersion>
  </NaturalRedefinition>
  <Test rdf:about="#test.73">
    <!-- Header -->
    <object>Reuters_RstTest.name='LocalTime'.value</object>
    <isContainedBy rdf:resource="#group.information.system" />
    <priority>7</priority>
    <dc:title xml:lang="en">Local Time:</dc:title>
    <dc:description xml:lang="en">Just print the current local time</dc:description>
    <!-- Display -->
    <default:description xml:lang="en">%(runPropertyURI='value')</default:description>
    <stdimpl:javascript>
      <![CDATA[
 		var thetime=new Date();
        var nhours=thetime.getHours();
        var nmins=thetime.getMinutes(); 
        if (nmins == 0)
            nmins="00"
        else
            if (nmins < 10)
                nmins = "0"+nmins;
        testResult.setRawResult(nhours+":"+nmins);]]>
    </stdimpl:javascript>
    <!-- Validation Logic -->
    <!--DO NOT USE WMI to get Win32_Timezone.Description since this value is EMPTY on WinXP JAPANESE -->
  </Test>
  <Test rdf:about="#test.90">
    <object>Reuters_RstTest.name='FlashPlugin'.value</object>
    <priority>0.993</priority>
    <isContainedBy rdf:resource="#group.prerequisites.software" />
    <dc:title xml:lang="en">Flash Plug-In Version:</dc:title>
    <dc:description xml:lang="en">Flash Player detection</dc:description>
    <default:recommendation xml:lang="en">Required version: Adobe Flash Player 9.0.115 or higher + Adobe Connect Add-In, or Adobe Flash Player 10.1 or higher.</default:recommendation>
    <!-- Display -->
    <stdimpl:javascript>

      //////
      // Class to manage version style value
      function VersionObj()
      {
      this.m_Majx;
      this.m_Majy;
      this.m_Minx;
      this.m_Miny;

      /////////////////////////
      // InitVersionObj
      // Initialise object with the version sVersion
      // sVersion should be in windows standard format : "9.0.115.0" or "1,2,1,0"
      // return true if ok, false otherwise
      this.InitVersionObj = function (sVersion)
      {
      try
      {
      var reg=/([0-9]+)[,|.]([0-9]+)[,|.]([0-9]+)[,|.]([0-9]+)/g;
      var val = reg.exec(sVersion);
      this.m_Majx = parseInt(val[1]);
      this.m_Majy = parseInt(val[2]);
      this.m_Minx = parseInt(val[3]);
      this.m_Miny = parseInt(val[4]);
      return true;
      }
      catch (e)
      {
      Logger.debug("Wrong parsing");
      Logger.debug(e.description);
      return false;
      }
      }

      //////////////////////
      // compare
      // compare current obj version with a version string formatted like  "1.2.0.3"
      // Return Value
      // 0 if the compared characters sequences are equal
      // otherwise a number different from 0 is returned,
      // with its sign indicating whether the object is considered greater than the comparing string passed as parameter (positive sign), or smaller (negative sign).
      this.compare = function (sVersion)
      {
      var reg=/([0-9]+)[,|.]([0-9]+)[,|.]([0-9]+)[,|.]([0-9]+)/g;
      var val = reg.exec(sVersion);
      // make it recursivly
      if (this.m_Majx &gt;= parseInt(val[1]))
      if (this.m_Majx == parseInt(val[1]))
      if (this.m_Majy &gt;= parseInt(val[2]))
      if (this.m_Majy == parseInt(val[2]))
      if (this.m_Minx &gt;= parseInt(val[3]))
      if (this.m_Minx == parseInt(val[3]))
      if (this.m_Miny &gt;= parseInt(val[4]))
      if (this.m_Miny == parseInt(val[4]))
      return 0; // equals
      else
      return 1; // greater
      else
      return -1; // less
      else
      return 1; // greater
      else
      return -1; // less
      else
      return 1; // greater
      else
      return -1; // less
      else
      return 1; // greater
      else
      return -1; // less
      }
      }
      //////////////////////////////////////////////////////////////
      var version;
      var connectAddin;
      var axo;
      var e;
      var WshShell = new ActiveXObject( "WScript.Shell" );

      // read registry Nunit key
      try
      {
      // read the path for flash ocx
      FlashOcxFile = WshShell.RegRead("HKEY_CLASSES_ROOT\\CLSID\\{D27CDB6E-AE6D-11cf-96B8-444553540000}\\InprocServer32\\");

      // Get file version
      axo = new ActiveXObject("Scripting.FileSystemObject");
      Logger.debug("File path for testing flash version: " + FlashOcxFile);
      version = axo.GetFileVersion(FlashOcxFile);
      }
      catch (e)
      {
      Logger.debug("reading key/creating ActiveX error");
      Logger.debug(e.description);
      version = "Flash Plugin is not installed.";
      testResult.setRawResult(version);
      return;
      }

      try
      {
      WshShell.RegRead("HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\Adobe Connect Add-in\\DisplayName");
      // if no exception --&gt; key exist
      connectAddin = true;
      Logger.debug("Adobe Connect Add-in key exist");
      }
      catch (e)
      {
      connectAddin = false; // no connect Add-in
      Logger.debug("Adobe Connect Add-in key does not exist");
      }

      Logger.debug("ShockwaveFlash Inner Version: " + version);
      var obj = new VersionObj();
      if ( obj.InitVersionObj(version) == false ) // use windows format version (9.0.115.0)
      {
      Logger.debug("Flash version (" + version + ") is not correctly parsed");
      testResult.setRawResult("old");
      }

      // Req DCD91:
      // Adobe Flash Player 10.1 (or above)
      // OR
      // Adobe Flash Player 9.0.115 (or above) with Adobe Connect Add-in
      // Status: Passed
      // Other cases when Adobe Flash is present:
      // Status : Warning
      // Message : Flash Player is too old
      var ALLOWED_VERS_WITHOUT_CONNEC_ADDIN = "10.1.0.0";
      var ALLOWED_VERS_WITH_CONNEC_ADDIN = "9.0.115.0";
      var ret;
      // Allowed version without needing test connect add-in
      try
      {
      ret = obj.compare(ALLOWED_VERS_WITHOUT_CONNEC_ADDIN);
      if (ret == 0 || ret &gt; 0)
      {
      // ok
      Logger.debug("VALID VERSION: Current version &gt;= " + ALLOWED_VERS_WITHOUT_CONNEC_ADDIN);
      testResult.setProperty("FlashVersion",version,"");
      testResult.setRawResult("valid");
      return;
      }
      // with Add-in Addon
      ret = obj.compare(ALLOWED_VERS_WITH_CONNEC_ADDIN);
      if (ret == 0 || ret &gt; 0)
      {
      Logger.debug("Current version &gt;= " + ALLOWED_VERS_WITH_CONNEC_ADDIN);
      // test if connect Add-in is installed
      if (connectAddin == true)
      {
      Logger.debug("VALID VERSION: ConnectAddin present");
      // ok
      testResult.setProperty("FlashVersion",version + " + Adobe Connect Add-in","");
      testResult.setRawResult("valid");
      return;
      }
      else
      {
      // need Add-in
      Logger.debug("Flash version (" + version + ") needs Adobe Connect Add-in to be validated");
      }
      }
      // old version
      testResult.setRawResult("old");
      return;
      }
      catch (e)
      {
      Logger.debug("comparison error !!");
      Logger.debug(e.description);
      testResult.setRawResult("old");
      return;
      }
    </stdimpl:javascript>
    <testResult>
      <TestResult rdf:about="#tr.90.NotInstalled">
        <value>Flash Plugin is not installed.</value>
        <valid>warning</valid>
        <outcome>
          <TestOutcome rdf:about="#tr.90.0">
            <run:description xml:lang="en">Flash plug-in is not installed.</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.90.Valid">
        <value>valid</value>
        <valid>pass</valid>
        <outcome>
          <TestOutcome rdf:about="#tr.90.2">
            <run:description xml:lang="en">%(runPropertyURI='FlashVersion')</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.90.Warning">
        <value>old</value>
        <valid>warning</valid>
        <outcome>
          <TestOutcome rdf:about="#tr.90.1">
            <run:description xml:lang="en">You must update your version of Flash Player.</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
  </Test>
  <Test rdf:about="#test.99">
    <object>Reuters_RstTest.name='SilverlightPlugin'.value</object>
    <priority>0.994</priority>
    <isContainedBy rdf:resource="#group.prerequisites.software" />
    <dc:title xml:lang="en">Silverlight Plugin Version:</dc:title>
    <dc:description xml:lang="en">Silverlight plugin detection</dc:description>
    <stdimpl:javascript>
      var WshShell = new ActiveXObject( "WScript.Shell" );
      try{
      testResult.setRawResult(WshShell.RegRead("HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Silverlight\\Version"));
      }
      catch (e)
      {
      Logger.Info("cannot retrieve: HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Silverlight\\Version");
      }
    </stdimpl:javascript>
    <testResult>
      <TestResult rdf:about="#tr.99.0">
        <value>~1.0</value>
        <valid>info</valid>
        <outcome>
          <TestOutcome rdf:about="#tr.99.0">
            <run:description xml:lang="en">%(runPropertyURI='value')</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.99.1">
        <value>*</value>
        <valid>info</valid>
        <outcome>
          <TestOutcome rdf:about="#tr.99.1">
            <run:description xml:lang="en">Silverlight plug-in is not installed.</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
  </Test>
  <Plugin rdf:about="#rstplugin.prerequisites.video">
    <dc:description>Video display information plugin</dc:description>
    <conf:dll>RstPluginPrerequisites.dll</conf:dll>
    <conf:classID>F0181A72-F2E3-4edc-97B0-0159427E0D35</conf:classID>
  </Plugin>
  <Error rdf:about="#error.system.rstplugin.prerequisites.video.cannot_determine_video_info">
    <dc:description xml:lang="en">An internal error has occured and the plugin is unabled to gather information about the video settings of the machine.</dc:description>
    <outcome>
      <TestOutcome rdf:about="#to.error.system.rstplugin.prerequisites.video.cannot_determine_video_info">
        <run:description xml:lang="en">Unable to retrieve data.</run:description>
      </TestOutcome>
    </outcome>
    <valid>warning</valid>
  </Error>
  <Error rdf:about="#error.system">
    <redef:isInheritedBy rdf:resource="#error.system.rstplugin.prerequisites.video.cannot_determine_video_info" />
  </Error>
  <Test rdf:about="#test.5">
    <!-- Header -->
    <requiresPlugin rdf:resource="#rstplugin.prerequisites.video.6" />
    <object>Reuters_RstTest.name='VirtualScreenSize'.value</object>
    <isContainedBy rdf:resource="#group.prerequisites.hardware" />
    <priority>0.1005</priority>
    <dc:title xml:lang="en">Screen Resolution:</dc:title>
    <dc:description xml:lang="en">Depends on rstmplugin_xtra6_prereq plugin. Use Win32 GetDeviceCaps to get information about the screen resolution. Validation is performed by a javascript. rfs:referenceWidth and rfs:referenceHeight. If the screen size is smaller than the minimum the test issues an alert.</dc:description>
    <default:recommendation xml:lang="en">Minimum supported: %(rfsPropertyURI='referenceWidth') x %(rfsPropertyURI='referenceHeight')</default:recommendation>
    <!-- Validation -->
    <rfs:referenceWidth rdf:datatype="http://www.w3.org/2001/XMLSchema#integer" />
    <rfs:referenceHeight rdf:datatype="http://www.w3.org/2001/XMLSchema#integer" />
    <testResult>
      <TestResult rdf:about="#tr.5.1">
        <javascript:valid xmlns:javascript="http://www.reuters.com/RSTM/Javascript/">
          var pos = testResult.lastIndexOf("x");
          var wstr = testResult.substring(0, pos);
          var hstr = testResult.substring(pos+1);
          var uriRfs = "http://www.reuters.com/RSTM/Metadata/";
          if (parseInt(wstr) &gt;= rstmToken.getTest().getProperty(uriRfs + "referenceWidth", ""))
          {
          if (parseInt(hstr) &gt;= rstmToken.getTest().getProperty(uriRfs + "referenceHeight", ""))
          {
          return true;
          }
          else
          {
          return false;
          }
          }
          else {
          return false;
          }
        </javascript:valid>
        <valid>pass</valid>
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.5.2">
        <value>*</value>
        <valid>alert</valid>
      </TestResult>
    </testResult>
    <!-- We need scripting capabilities in order to be able to validate the screen resolution. This is because we have a complex wxh format as value -->
  </Test>
  <Test rdf:about="#test.6">
    <!-- Header -->
    <requiresPlugin rdf:resource="#rstplugin.prerequisites.video.6" />
    <object>Reuters_RstTest.name='MinVirtualScreenColorDepth'.value</object>
    <isContainedBy rdf:resource="#group.prerequisites.hardware" />
    <priority>0.1006</priority>
    <dc:title xml:lang="en">Color Depth:</dc:title>
    <dc:description xml:lang="en">Depends on rstmplugin_xtra6_prereq plugin. Use Win32 GetDeviceCaps to get information the screen depth. We read the worst color depth available on all connected screens. We provide a default behavior which should be ok for all products. Pass over 16 bits, alert over 8 bits, and fail under that.</dc:description>
    <!-- Threshold -->
    <rfs:referenceValue rdf:datatype="http://www.w3.org/2001/XMLSchema#decimal" />
    <!-- Display -->
    <default:recommendation xml:lang="en">Minimum color depth: 16-bit</default:recommendation>
    <default:description xml:lang="en">%(runPropertyURI='value') bits.</default:description>
    <!-- Validation -->
    <testResult>
      <TestResult rdf:about="#tr.6.color_depth_ok">
        <value>&gt;=%(rfsPropertyURI='referenceValue')</value>
        <valid>pass</valid>
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.6.color_depth_too_low">
        <value>*</value>
        <valid>fail</valid>
      </TestResult>
    </testResult>
  </Test>
  <Error rdf:about="#error.business.registry.unreadable_key">
    <redef:isInheritedBy rdf:resource="#error.business.service-not-installed" />
  </Error>
  <Error rdf:about="#error.business.service-not-installed">
    <valid>info</valid>
    <outcome>
      <TestOutcome rdf:about="#to.error.business.service-not-installed">
        <run:description xml:lang="en">Service is not installed.</run:description>
      </TestOutcome>
    </outcome>
  </Error>
  <TestResult rdf:about="#tr.update-schedule.manual">
    <value>(manual)|(0)</value>
    <valid>info</valid>
    <outcome>
      <TestOutcome rdf:about="#to.update-schedule.manual">
        <run:description xml:lang="en">Disabled (Manual). </run:description>
      </TestOutcome>
    </outcome>
  </TestResult>
  <TestResult rdf:about="#tr.update-schedule.daily">
    <value>(daily)|(1)</value>
    <valid>info</valid>
    <outcome>
      <TestOutcome rdf:about="#to.update-schedule.daily">
        <run:description xml:lang="en">Daily at %(runPropertyURI='time')</run:description>
      </TestOutcome>
    </outcome>
  </TestResult>
  <TestResult rdf:about="#tr.update-schedule.weekly">
    <value>(weekly)|(2)</value>
    <valid>info</valid>
    <outcome>
      <TestOutcome rdf:about="#to.update-schedule.weekly">
        <run:description xml:lang="en">Every %(runPropertyURI='dayOfWeek') at %(runPropertyURI='time')</run:description>
      </TestOutcome>
    </outcome>
  </TestResult>
  <TestResult rdf:about="#tr.rus-service.not-installed">
    <value>rusServiceNotInstalled</value>
    <valid>info</valid>
    <outcome>
      <TestOutcome rdf:about="#to.rus-service.not-installed">
        <run:description xml:lang="en">Update Agent is not installed.</run:description>
      </TestOutcome>
    </outcome>
  </TestResult>
  <TestResult rdf:about="#tr.rus-service.installed">
    <value>rusServiceInstalled</value>
    <valid>info</valid>
    <outcome>
      <TestOutcome rdf:about="#to.rus-service.installed">
        <run:description xml:lang="en">Update Agent is managing your scheduled update checks.</run:description>
      </TestOutcome>
    </outcome>
  </TestResult>
  <Script rdf:about="#script.util.datetime">
    <rdf:value>
      <![CDATA[
		function zeroprefix(i)
		{
			var rvalue;
			if (typeof(i) == "string" && i.length==2)
				return i;
			if (i<10)
				rvalue = "0"+i;
			else
				rvalue=i;
			return rvalue;
		}
		function makeTime(hour,minute)
		{	
			var rvalue = zeroprefix(hour)+":"+zeroprefix(minute)+":00" ;
			return rvalue ;
		}
		function makeDateTime(year,month,day,hour,minute)
		{
			var rvalue = year+"-"+zeroprefix(month)+"-"+zeroprefix(day)+"T"+makeTime(hour,minute);
			return rvalue ;
		}		
		]]>
    </rdf:value>
  </Script>
  <Script rdf:about="#script.russ.checkifinstalled">
    <rdf:value>
      <![CDATA[
			
			function checkIfRUSSInstalled()
			{
				var retval = false;
				try
	            {
					var services = GetObject("winmgmts:{impersonationLevel=impersonate}!\\\\.\\root\\cimv2");
	             }
				catch(e)
	            {
	                throw new RSTM_ScriptException("error.business.service.unreachable");
	            } 
				var q = services.ExecQuery("SELECT Name FROM Win32_Service WHERE Name='Thomson Reuters Update Agent'") ;
	            if (!q) 
	            {
					throw new RSTM_ScriptException("error.business.service.unreachable");
	            } 
        
	            for ( var enumItems = new Enumerator(q); !enumItems.atEnd(); enumItems.moveNext() )
	            {
					retval = true ;
	            }
				return retval;
			}
			
			]]>
    </rdf:value>
  </Script>
  <Test rdf:about="#test.32">
    <!-- Header -->
    <object>Reuters_RstTest.name='FlexNetAgentPresence'.value</object>
    <isContainedBy rdf:resource="#group.updates" />
    <priority>1</priority>
    <dc:title xml:lang="en">Update Service Agent:</dc:title>
    <dc:description xml:lang="en">Tells if the Update Agent Component is installed.</dc:description>
    <!-- Display -->
    <default:description xml:lang="en">%(runPropertyURI='value')</default:description>
    <!-- Validation Logic -->
    <stdimpl:javascript>
      var fso = new ActiveXObject( "Scripting.FileSystemObject" );
      var WshShell = new ActiveXObject( "WScript.Shell" );
      try{
      var agentExePath = WshShell.RegRead("HKEY_CLASSES_ROOT\\CLSID\\{EA9C5C50-F43B-4AEB-A994-58520C38D640}\\LocalServer32\\");
      }
      catch (e)
      {
      testResult.setRawResult(-1);
      return;
      }
      var result;
      if (fso.FileExists(agentExePath))
      {
      result = fso.GetFileVersion(agentExePath);
      }
      else
      {
      result = 0;
      }
      testResult.setRawResult(result);
    </stdimpl:javascript>
    <testResult>
      <TestResult rdf:about="#tr.32.1">
        <value>-1</value>
        <valid>info</valid>
        <outcome>
          <TestOutcome rdf:about="#to.32.1">
            <run:description xml:lang="en">Not found (registry error).</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.32.2">
        <value>*</value>
        <valid>info</valid>
        <outcome>
          <TestOutcome rdf:about="#to.32.2">
            <run:description xml:lang="en">Version %(runPropertyURI='value')</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.32.3">
        <value>0</value>
        <valid>info</valid>
        <outcome>
          <TestOutcome rdf:about="#to.32.3">
            <run:description xml:lang="en">Not found (missing file).</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
  </Test>
  <Message rdf:about="#message.servicestartmode.manual">
    <rdf:value xml:lang="en">Started manually</rdf:value>
  </Message>
  <Message rdf:about="#message.servicestartmode.automatic">
    <rdf:value xml:lang="en">Started automatically</rdf:value>
  </Message>
  <Message rdf:about="#message.servicestartmode.disabled">
    <rdf:value xml:lang="en">Disabled.</rdf:value>
  </Message>
  <Test rdf:about="#test.35">
    <!-- Header -->
    <!--	<object>Win32_Service.Name='RusService'.State</object> -->
    <object>Reuters_RstTest.name='RUSServiceState'.value</object>
    <stdimpl:javascript>
      <![CDATA[
	
		try
              {
                     var services = GetObject("winmgmts:{impersonationLevel=impersonate}!\\\\.\\root\\cimv2");
              } catch(e)
              {
                     throw new RSTM_ScriptException("error.business.service.unreachable");
              } 
                            //Win32_Service.Name='RusService'.State
              var q = services.ExecQuery("SELECT Name,State,StartMode FROM Win32_Service WHERE Name='Thomson Reuters Update Agent'")
              if (!q) 
              {
                     throw new RSTM_ScriptException("error.business.service.unreachable");
              } 
        
              var serviceStartMode 	=	"rusServiceNotInstalled";
			  var serviceState		=	"rusServiceNotInstalled";
              for ( var enumItems = new Enumerator(q); !enumItems.atEnd(); enumItems.moveNext() )
              {
                     var objItem        = enumItems.item();
                     serviceStartMode   = objItem.StartMode;
					 serviceState		= objItem.State ;
              }
			  var serviceStartModeLocalizedString;
			  switch (serviceStartMode)
			  {	
				case "Auto":  
					serviceStartModeLocalizedString = "%(ID='message.servicestartmode.automatic')";
					break;
				case "Manual":
					serviceStartModeLocalizedString = "%(ID='message.servicestartmode.manual')";
					break;
				case "Disabled":
					serviceStartModeLocalizedString = "%(ID='message.servicestartmode.disabled')";
					break;
				case "rusServiceNotInstalled":break;
				default:
			  }
			 testResult.setRawResult(serviceState);
			 testResult.setProperty("prettyPrintStartMode",serviceStartModeLocalizedString,"");]]>
    </stdimpl:javascript>
    <!-- we let this 
	<Message rdf:ID="message.servicestartmode.notinstalled">
	<rdf:value xml:lang="en"></rdf:value>
	</Message>-->
    <isContainedBy rdf:resource="#group.updates" />
    <priority>5</priority>
    <dc:title xml:lang="en">Update Agent State:</dc:title>
    <dc:description xml:lang="en">
      Tells the state of the Update Agent
      (Started, Stopped, Paused, not installed)
    </dc:description>
    <!-- Display -->
    <default:description xml:lang="en">%(runPropertyURI='value')</default:description>
    <!-- Validation Logic -->
    <testResult rdf:resource="#tr.rus-service.not-installed" />
    <testResult>
      <TestResult rdf:about="#tr.35.2">
        <value>Running</value>
        <valid>info</valid>
        <outcome>
          <TestOutcome rdf:about="#to.35.2">
            <run:description xml:lang="en">Started (%(runPropertyURI='prettyPrintStartMode')).</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.35.3">
        <value>Paused</value>
        <valid>info</valid>
        <outcome>
          <TestOutcome rdf:about="#to.35.3">
            <run:description xml:lang="en">Paused (%(runPropertyURI='prettyPrintStartMode')).</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.35.4">
        <value>Stopped</value>
        <valid>info</valid>
        <outcome>
          <TestOutcome rdf:about="#to.35.4">
            <run:description xml:lang="en">Stopped (%(runPropertyURI='prettyPrintStartMode')).</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
  </Test>
  <Test rdf:about="#test.67">
    <!-- Header -->
    <object>Reuters_RstTest.name='KobraUpdatesSchedule'.value</object>
    <isContainedBy rdf:resource="#group.updates" />
    <priority>3</priority>
    <dc:title xml:lang="en">Desktop Scheduler Settings:</dc:title>
    <dc:description xml:lang="en">
      Display the schedule for checking for updates of the Kobra Scheduler.
      (i.e the scheduler active only when Kobra is running)
    </dc:description>
    <!-- Display -->
    <default:description xml:lang="en">%(runPropertyURI='value')</default:description>
    <!-- Validation Logic -->
    <stdimpl:javascript>
      %(ID='script.russ.checkifinstalled')
      if (checkIfRUSSInstalled())
      {
      testResult.setRawResult("rusServiceInstalled");
      return;
      }
      var mode = "KOBRA";
      function getScheduleValue(key,defaultval)
      {
      var configProvider = RDMC.KobraProviderManager.FindProvider("Configuration");
      var retval = configProvider.GetPropertyValue("rdmc/rdmcScheduler/update/"+key);
      if (retval == "")
      retval = defaultval;
      return retval ;
      }
      %(ID='script.kobraruss-update-schedule')
    </stdimpl:javascript>
    <testResult rdf:resource="#tr.rus-service.installed" />
    <testResult rdf:resource="#tr.update-schedule.manual" />
    <testResult rdf:resource="#tr.update-schedule.daily" />
    <testResult rdf:resource="#tr.update-schedule.weekly" />
    <testResult rdf:resource="#tr.update-schedule.monthly.dayofmonth" />
    <testResult rdf:resource="#tr.update-schedule.daysinterval" />
    <rfs:weekDaySunday>Sunday</rfs:weekDaySunday>
    <rfs:weekDayMonday>Monday</rfs:weekDayMonday>
    <rfs:weekDayTuesday>Tuesday</rfs:weekDayTuesday>
    <rfs:weekDayWednesday>Wednesday</rfs:weekDayWednesday>
    <rfs:weekDayThursday>Thursday</rfs:weekDayThursday>
    <rfs:weekDayFriday>Friday</rfs:weekDayFriday>
    <rfs:weekDaySaturday>Saturday</rfs:weekDaySaturday>
  </Test>
  <Script rdf:about="#script.kobraruss-update-schedule">
    <rdf:value>
      %(ID='script.util.datetime')
      try{
      var frequency 	= getScheduleValue("frequency",4);
      var daysInterval = getScheduleValue("dayNb",30);
      var weekday 	 = getScheduleValue("weekday",5);
      var monthday	 = getScheduleValue("monthday",15);
      var startTimeHour = getScheduleValue("startTimeHour",20);
      var startTimeMinute = getScheduleValue("startTimeMinute",0);
      }
      catch(e)
      {
      if (mode == "KOBRA")
      throw new RSTM_ScriptException("error.business.providers.key_error");
      else
      throw new RSTM_ScriptException("error.business.registry.unreadable_key","");
      }
      <!-- frequency= none|daily|weekly|monthly|daysInterval							 --><!-- none : disable the feature 																		 --><!-- daily				require (startTimeHour+startTimeMinute					 ) --><!-- weekly 			require (startTimeHour+startTimeMinute & weekday ) --><!-- monthly			require (startTimeHour+startTimeMinute & monthday) --><!-- daysInterval require (startTimeHour+startTimeMinute & dayNb	 ) --><!-- 0 : none 					--><!-- 1 : daily 				 --><!-- 2 : weekly 				--><!-- 3 : monthly 			 --><!-- 4 : days interval	-->
      testResult.setRawResult(frequency);
      if (frequency == 0)
      {
      return;
      }
      testResult.setTypedProperty("time",makeTime(startTimeHour,startTimeMinute),"",
      "http://www.w3.org/2001/XMLSchema#time");
      if (frequency == 1)
      {
      return;
      }
      if (frequency == 2)
      {
      var weekDayName;
      if (weekday == 0) weekDayName = "%(rfsPropertyURI='weekDaySunday')";
      else if (weekday == 1) weekDayName = "%(rfsPropertyURI='weekDayMonday')";
      else if (weekday == 2) weekDayName = "%(rfsPropertyURI='weekDayTuesday')";
      else if (weekday == 3) weekDayName = "%(rfsPropertyURI='weekDayWednesday')";
      else if (weekday == 4) weekDayName = "%(rfsPropertyURI='weekDayThursday')";
      else if (weekday == 5) weekDayName = "%(rfsPropertyURI='weekDayFriday')";
      else if (weekday == 6) weekDayName = "%(rfsPropertyURI='weekDaySaturday')";
      else weekDayName = "?";
      testResult.setProperty("dayOfWeek",weekDayName,"");
      return;
      }
      if (frequency == 3)
      {
      testResult.setProperty("dayOfMonth",monthday,"");
      return;
      }
      if (frequency == 4)
      {
      testResult.setProperty("daysInterval",daysInterval,"");
      return;
      }
    </rdf:value>
  </Script>
  <TestResult rdf:about="#tr.update-schedule.monthly.dayofmonth">
    <value>3</value>
    <valid>info</valid>
    <outcome>
      <TestOutcome rdf:about="#to.update-schedule.monthly.dayofmonth">
        <run:description xml:lang="en"> Every %(runPropertyURI='dayOfMonth') of the month at %(runPropertyURI='time')</run:description>
      </TestOutcome>
    </outcome>
  </TestResult>
  <TestResult rdf:about="#tr.update-schedule.daysinterval">
    <value>4</value>
    <valid>info</valid>
    <outcome>
      <TestOutcome rdf:about="#to.update-schedule.monthly.daysinterval">
        <run:description xml:lang="en"> Every %(runPropertyURI='daysInterval') days at %(runPropertyURI='time')</run:description>
      </TestOutcome>
    </outcome>
  </TestResult>
  <Test rdf:about="#test.68">
    <!-- Header -->
    <object>Reuters_RstTest.name='RUSSUpdatesSchedule'.value</object>
    <isContainedBy rdf:resource="#group.updates" />
    <priority>6</priority>
    <dc:title xml:lang="en">Update Agent Check Time:</dc:title>
    <dc:description xml:lang="en">Gives the schedule for checking for updates for the RUS System service</dc:description>
    <!-- Display -->
    <default:description xml:lang="en">%(runPropertyURI='value')</default:description>
    <!-- Validation Logic -->
    <stdimpl:javascript>
      %(ID='script.russ.checkifinstalled')
      if (!checkIfRUSSInstalled())
      {
      testResult.setRawResult("rusServiceNotInstalled");
      return;
      }
      var mode = "RUSS";
      function getScheduleValue(key,defaultval)
      {
      var WshShell = new ActiveXObject( "WScript.Shell" );
      var retval = WshShell.RegRead("HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\Thomson Reuters Update Agent\\Parameters\\"+key);
      if (retval == "")
      retval = defaultval;
      return retval ;
      }
      %(ID='script.kobraruss-update-schedule')
    </stdimpl:javascript>
    <testResult rdf:resource="#tr.update-schedule.manual" />
    <testResult rdf:resource="#tr.update-schedule.daily" />
    <testResult rdf:resource="#tr.update-schedule.weekly" />
    <testResult rdf:resource="#tr.update-schedule.monthly.dayofmonth" />
    <testResult rdf:resource="#tr.update-schedule.daysinterval" />
    <testResult rdf:resource="#tr.rus-service.not-installed" />
    <rfs:weekDaySunday>Sunday</rfs:weekDaySunday>
    <rfs:weekDayMonday>Monday</rfs:weekDayMonday>
    <rfs:weekDayTuesday>Tuesday</rfs:weekDayTuesday>
    <rfs:weekDayWednesday>Wednesday</rfs:weekDayWednesday>
    <rfs:weekDayThursday>Thursday</rfs:weekDayThursday>
    <rfs:weekDayFriday>Friday</rfs:weekDayFriday>
    <rfs:weekDaySaturday>Saturday</rfs:weekDaySaturday>
  </Test>
  <Test rdf:about="#test.69">
    <!-- Header -->
    <object>Reuters_RstTest.name='KobraLastCheckUpdates'.value</object>
    <isContainedBy rdf:resource="#group.updates" />
    <priority>4</priority>
    <dc:title xml:lang="en">Desktop Scheduler Last Check for Updates:</dc:title>
    <dc:description xml:lang="en">
      Tells when the Kobra scheduler checked for the last time for updates. This value is
      read from the Kobra providers.
    </dc:description>
    <!-- Display -->
    <default:description xml:lang="en">%(runPropertyURI='value')</default:description>
    <!-- Validation Logic -->
    <stdimpl:javascript>
      <![CDATA[
		%(ID='script.util.datetime')
		%(ID='script.russ.checkifinstalled')
		if (checkIfRUSSInstalled())
		{
			testResult.setRawResult("rusServiceInstalled");
			return;
		}
		var configProvider=RDMC.KobraProviderManager.FindProvider("Configuration");
        try{          
            var LastcheckTime = configProvider.GetPropertyValue("rdmc/rdmcScheduler/update/lastCheckTime");
        }
       catch(e)
        {
            throw new RSTM_ScriptException("error.business.providers.key_error");
        }
		if ( LastcheckTime == "" )
		{
			testResult.setRawResult("none");
			return;
		}	
        var lastCheck = LastcheckTime + ":00";
        testResult.setTypedRawResult(lastCheck,"http://www.w3.org/2001/XMLSchema#dateTime");
        return;
		]]>
    </stdimpl:javascript>
    <testResult rdf:resource="#tr.rus-service.installed" />
    <testResult>
      <TestResult rdf:about="#tr.69.1">
        <value>none</value>
        <valid>info</valid>
        <outcome>
          <TestOutcome rdf:about="#to.69.1">
            <run:description xml:lang="en">Never.</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.69.2">
        <value>*</value>
        <valid>info</valid>
        <outcome>
          <TestOutcome rdf:about="#to.69.2">
            <run:description xml:lang="en">%(runPropertyURI='value')</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
  </Test>
  <Test rdf:about="#test.70">
    <!-- Header -->
    <object>Reuters_RstTest.name='RUSSLastCheckUpdates'.value</object>
    <isContainedBy rdf:resource="#group.updates" />
    <priority>7</priority>
    <dc:title xml:lang="en">Update Agent Last Check for Updates:</dc:title>
    <dc:description xml:lang="en">
      Tells when the Update Service last checked for updates. This valu is
      read from the registry.
    </dc:description>
    <!-- Display -->
    <default:description xml:lang="en">%(runPropertyURI='value')</default:description>
    <!-- Validation Logic -->
    <stdimpl:javascript>
      <!--if (!testResult.getTest().getProperty("http://www.reuters.com/RSTM/Metadata/russ-not-installed").isEmpty()) {
			testResult.setRawResult("not available");
			return;
		}-->
      %(ID='script.util.datetime')
      %(ID='script.russ.checkifinstalled')
      if (!checkIfRUSSInstalled())
      {
      testResult.setRawResult("rusServiceNotInstalled");
      return;
      }
      var WshShell = new ActiveXObject( "WScript.Shell" );
      try
      {
      var lastCheckDateTime   = WshShell.RegRead("HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\Thomson Reuters Update Agent\\Parameters\\lastCheckDateTime");
      Logger.Debug("read HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\Thomson Reuters Update Agent\\Parameters\\lastCheckDateTime=" + lastCheckDateTime );
      }
      catch(e)
      {
      testResult.setRawResult("rusServiceLastCheckNotPerformed");
      return;
      }
      var lastCheck = lastCheckDateTime+":00";
      testResult.setTypedRawResult(lastCheck,"http://www.w3.org/2001/XMLSchema#dateTime");
      return;
    </stdimpl:javascript>
    <testResult rdf:resource="#tr.rus-service.not-installed" />
    <testResult>
      <!-- First time Russ is installed and not started, lastCheckDateTime doesn't exist. Msg tr.70.2 set 
      before tr.70.1 in order not to change tr.70.1 msg one load before final release. -->
      <TestResult rdf:about="#tr.70.2">
        <value>rusServiceLastCheckNotPerformed</value>
        <valid>info</valid>
        <outcome>
          <TestOutcome rdf:about="#to.70.2">
            <run:description xml:lang="en">Check for updates was never performed.</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.70.1">
        <value>*</value>
        <valid>info</valid>
        <outcome>
          <TestOutcome rdf:about="#to.70.1">
            <run:description xml:lang="en">%(runPropertyURI='value')</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
  </Test>
  <Test rdf:about="#test.71">
    <!-- Header -->
    <object>Reuters_RstTest.name='KobraCriticalUpdates'.value</object>
    <isContainedBy rdf:resource="#group.updates" />
    <priority>2</priority>
    <dc:title xml:lang="en">Desktop Scheduler Setting for Updates:</dc:title>
    <dc:description xml:lang="en">
      Tells whether the Kobra schedules only checks for critical updates or also
      includes important updates.
    </dc:description>
    <!-- Display -->
    <default:description xml:lang="en">%(runPropertyURI='value')</default:description>
    <!-- Validation Logic -->
    <stdimpl:javascript>
      %(ID='script.russ.checkifinstalled')
      if (checkIfRUSSInstalled())
      {
      testResult.setRawResult("rusServiceInstalled");
      return;
      }
      try
      {
      var configProvider = RDMC.KobraProviderManager.FindProvider("Configuration");
      var retval = configProvider.GetPropertyValue("rdmc/rdmcScheduler/update/CriticalPackageOnly");
      testResult.setRawResult(retval);
      }
      catch(e)
      {
      throw new RSTM_ScriptException("error.business.providers.key_error");
      }
      return;
    </stdimpl:javascript>
    <testResult rdf:resource="#tr.rus-service.installed" />
    <testResult>
      <TestResult rdf:about="#tr.71.1">
        <value>(true)|(1)</value>
        <valid>info</valid>
        <outcome>
          <TestOutcome rdf:about="#to.71.1">
            <run:description xml:lang="en">Download critical updates only.</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.71.2">
        <value>*</value>
        <valid>info</valid>
        <outcome>
          <TestOutcome rdf:about="#to.71.2">
            <run:description xml:lang="en">Download critical and important updates.</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
  </Test>
  <Test rdf:about="#test.72">
    <!-- Header -->
    <object>Reuters_RstTest.name='RUSSImportantUpdates'.value</object>
    <isContainedBy rdf:resource="#group.updates" />
    <priority>5</priority>
    <dc:title xml:lang="en">Update Agent Setting for Updates:</dc:title>
    <dc:description xml:lang="en">
      Script Plugin. Reads a registry key to determin whether the Update Agent,
      if installed, checks only for critical updates or also checks for important updates.
    </dc:description>
    <!-- Display -->
    <default:description xml:lang="en">%(runPropertyURI='value')</default:description>
    <stdimpl:javascript>
      %(ID='script.russ.checkifinstalled')
      if (!checkIfRUSSInstalled())
      {
      testResult.setRawResult("rusServiceNotInstalled");
      return;
      }
      var WshShell = new ActiveXObject( "WScript.Shell" );
      try{
      var importantUpdates = WshShell.RegRead("HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\Thomson Reuters Update Agent\\Parameters\\CriticalPackageOnly");
      testResult.setRawResult(importantUpdates);
      }
      catch(e)
      {
      throw new RSTM_ScriptException("error.business.registry.unreadable_key","");
      }
    </stdimpl:javascript>
    <!-- Validation Logic -->
    <testResult>
      <TestResult rdf:about="#tr.72.1">
        <value>1</value>
        <valid>info</valid>
        <outcome>
          <TestOutcome rdf:about="#to.72.1">
            <run:description xml:lang="en">Download critical updates only.</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.72.2">
        <value>*</value>
        <valid>info</valid>
        <outcome>
          <TestOutcome rdf:about="#to.72.2">
            <run:description xml:lang="en">Download critical and important updates.</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
    <testResult rdf:resource="#tr.rus-service.not-installed" />
  </Test>
  <Test rdf:about="#test.131">
    <!-- Header -->
    <object>Reuters_RstTest.name='RUSSPendingUpdates'.value</object>
    <isContainedBy rdf:resource="#group.updates" />
    <priority>8</priority>
    <dc:title xml:lang="en">Update Agent Latest Status:</dc:title>
    <dc:description xml:lang="en">Script Plugin. Reads PendingUpdates.xml to say if an error occured or updates are pending with russ.</dc:description>
    <!-- Code -->
    <stdimpl:javascript>

      try
      {
      var fso = new ActiveXObject("Scripting.FileSystemObject")

      var path = fso.BuildPath(RDMC.versionInfo.Trd6.ConfigMachineFolder, "PendingUpdates.xml");

      var result = "NO";
      var txt = "";

      if(fso.fileExists(path))
      {
      Logger.Debug("Loading '" + path + "'");

      var xmlDoc = new ActiveXObject("Microsoft.XMLDOM");
      xmlDoc.async = false;
      xmlDoc.load(path);

      var downloadError = xmlDoc.selectNodes("//downloadError");
      var installError = xmlDoc.selectNodes("//installError");
      var pendingUpdates = xmlDoc.selectNodes("//update");

      if(downloadError.length!=0)
      {
      result = "DOWNLOAD_ERROR";
      txt = downloadError[0].text;
      }
      else if(installError.length!=0)
      {
      result = "INSTALL_ERROR";
      txt = installError[0].text;
      }
      else if(pendingUpdates.length!=0)
      {
      result = "YES";
      for (var i = 0; i &lt; pendingUpdates.length; i++)
      {
      if(txt!="") txt+= ", ";
      txt += pendingUpdates[i].text;
      }
      }
      }
      else
      {
      Logger.Debug("No '" + path + "' found");
      }

      testResult.setRawResult(result);
      testResult.setProperty("text", txt, "");
      }
      catch( e )
      {
      Logger.Error("An exception occured while retrieving Update Service Pending Updates");
      testResult.setRawResult("error");
      testResult.setProperty("error", e.description, "");
      }

    </stdimpl:javascript>
    <!-- Validation -->
    <testResult>
      <TestResult rdf:about="#tr.72.error">
        <value>ERROR</value>
        <valid>fail</valid>
        <outcome>
          <TestOutcome rdf:about="#to.72.error">
            <run:description xml:lang="en">Internal Error: %(runPropertyURI='error')</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.72.NO">
        <value>NO</value>
        <valid>info</valid>
        <outcome>
          <TestOutcome rdf:about="#to.72.NO">
            <run:description xml:lang="en">No Pending Updates Detected.</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.72.YES">
        <value>YES</value>
        <valid>warning</valid>
        <outcome>
          <TestOutcome rdf:about="#to.72.YES">
            <run:description xml:lang="en">Pending Updates Detected (%(runPropertyURI='text')).</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.72.DOWNLOAD_ERROR">
        <value>DOWNLOAD_ERROR</value>
        <valid>fail</valid>
        <outcome>
          <TestOutcome rdf:about="#to.72.DOWNLOAD_ERROR">
            <run:description xml:lang="en">Download Error (%(runPropertyURI='text')).</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.72.INSTALL_ERROR">
        <value>INSTALL_ERROR</value>
        <valid>fail</valid>
        <outcome>
          <TestOutcome rdf:about="#to.72.INSTALL_ERROR">
            <run:description xml:lang="en">Installation Error (%(runPropertyURI='text')).</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
  </Test>
  <TestResult rdf:about="#tr.test.network.fdmhttpget.fail">
    <value>-1</value>
    <valid>fail</valid>
    <outcome>
      <TestOutcome rdf:about="#to.test.network.fdmhttpget.fail">
        <run:description xml:lang="en">Unavailable (network layer failure).</run:description>
      </TestOutcome>
    </outcome>
  </TestResult>
  <TestResult rdf:about="#tr.test.network.fdmhttpget.pass">
    <value>200</value>
    <valid>pass</valid>
    <outcome>
      <TestOutcome rdf:about="#to.test.network.fdmhttpget.pass">
        <run:description xml:lang="en">Available. Ping time: %(runPropertyURI='duration', datatypeURI='?unit=PT0.111S&amp;size=medium')</run:description>
      </TestOutcome>
    </outcome>
  </TestResult>
  <TestResult rdf:about="#tr.test.network.fdmhttpget.other">
    <value>*</value>
    <valid>fail</valid>
    <outcome>
      <TestOutcome rdf:about="#to.test.network.fdmhttpget.other">
        <run:description xml:lang="en">HTTP layer error. Status code: %(runPropertyURI='value'). Ping time: %(runPropertyURI='duration', datatypeURI='?unit=PT0.111S&amp;size=medium')</run:description>
      </TestOutcome>
    </outcome>
  </TestResult>
  <Script rdf:about="#script.util.fdmhttpget">
    <rdf:value>
      <![CDATA[
			var cpURL =  testResult.getTest().getProperty("http://www.reuters.com/RSTM/Metadata/cpURL","");
			try{
			var httpURL = RDMC.cpurlToHttp(cpURL);
			}
			catch(e)
			{
				throw new RSTM_ScriptException("error.business.cpurl.cannot_translate");
			}
			/* var positionOfLastProtocolCharacter = httpURL.indexOf("://",0);
			var positionOfLastHostnameCharacter = httpURL.indexOf("/",positionOfLastProtocolCharacter+3);
			if (positionOfLastHostnameCharacter == -1)
				positionOfLastHostnameCharacter = httpURL.length;
			var protocol = httpURL.substring(0,positionOfLastProtocolCharacter)
			var hostName = httpURL.substring(positionOfLastProtocolCharacter+3,positionOfLastHostnameCharacter);
			testResult.setProperty("hostName",hostName,"");*/
            var httpcode = RDMC.FDMHttpGet(httpURL);
            testResult.setRawResult(httpcode);
            return;
			]]>
    </rdf:value>
  </Script>
  <Test rdf:about="#test.31">
    <!-- Header -->
    <object>Reuters_RstTest.name='Views'.value</object>
    <!--<rfs:isRerunAllowed>true</rfs:isRerunAllowed>-->
    <isContainedBy rdf:resource="#group.serviceAvailability" />
    <priority>0.2003</priority>
    <redef:isTroubleshootedBy rdf:resource="#test.75" />
    <dc:title xml:lang="en">Views Service:</dc:title>
    <dc:description xml:lang="en">Views Test. Performs a simple GET test in HTTP.</dc:description>
    <rfs:cpURL>cpurl://views.cp./Explorer/GzHOME.aspx</rfs:cpURL>
    <!-- Validation Logic -->
    <stdimpl:javascript>
      testResult.setLatency("0");
      %(ID='script.util.fdmhttpget')
    </stdimpl:javascript>
    <testResult>
      <TestResult rdf:about="#tr.31.0">
        <value>-1</value>
        <valid>fail</valid>
        <outcome>
          <TestOutcome rdf:about="#tr.31.0">
            <run:description>Not accessible.</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.31.1">
        <value>*</value>
        <valid>pass</valid>
        <outcome>
          <TestOutcome rdf:about="#tr.31.1">
            <run:description>Accessible.</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
  </Test>
  <Test rdf:about="#test.74">
    <requiresPlugin rdf:resource="#rstplugin.information.misc.6" />
    <!-- Header -->
    <object>reuters_rsttest.name='DNSLookup'.value</object>
    <isContainedBy rdf:resource="#group.network" />
    <priority>0.5005</priority>
    <dc:title xml:lang="en">DNS Lookup:</dc:title>
    <dc:description xml:lang="en">
      This troobleshooting test permorms a DNS lookup of the host for the related
      failed test.
    </dc:description>
    <rfs:hostName />
    <!-- Display -->
    <default:description xml:lang="en"> Host %(rfsPropertyURI='hostName') has address %(runPropertyURI='value')</default:description>
    <!-- Validation Logic -->
  </Test>
  <Test rdf:about="#test.75">
    <requiresPlugin rdf:resource="#rstplugin.information.misc.6" />
    <!-- Header -->
    <object>reuters_rsttest.name='ICMPPing'.value</object>
    <isContainedBy rdf:resource="#group.network" />
    <priority>0.5005</priority>
    <dc:title xml:lang="en">ICMP Ping:</dc:title>
    <dc:description xml:lang="en">
      This troobleshooting test permorms an ICMP ping of the host for the related
      failed test.
    </dc:description>
    <rfs:hostName />
    <redef:isTroubleshootedBy rdf:resource="#test.74" />
    <!-- Display -->
    <default:description xml:lang="en"> Host %(rfsPropertyURI='hostName') ping time is %(runPropertyURI='duration', datatypeURI='?unit=PT0.111S&amp;size=medium')</default:description>
    <!-- Validation Logic -->
  </Test>
  <Test rdf:about="#test.10">
    <!-- Display -->
    <default:recommendation xml:lang="en">Supported: %(runPropertyURI='supportedSPList')</default:recommendation>
  </Test>
  <Test rdf:about="#test.10">
    <!-- Header -->
    <object>cim_operatingsystem.spversion</object>
    <isContainedBy rdf:resource="#group.prerequisites.software" />
    <priority>0.10001</priority>
    <dc:title xml:lang="en">Service Pack:</dc:title>
    <dc:description xml:lang="en">This test reads the WMI Win32_OperatingSystem.ServicePackMajorVersion property. It requires depends on test #9 in order to set up the reference values for the validation. referenceValueWarning if it exists should be smaller than referenceValue. Those values are product specific.</dc:description>
    <!-- Display -->
    <default:description xml:lang="en">SP%(runPropertyURI='value', datatypeURI='?precision=0')</default:description>
    <!-- Overrides-->
    <rfs:HOTFIX />
    <rfs:OS />
    <rfs:referenceValue rdf:datatype="http://www.w3.org/2001/XMLSchema#decimal" />
    <!-- Logic -->
    <stdimpl:javascript>
      try
      {
      var services = GetObject("winmgmts:{impersonationLevel=impersonate}!\\\\.\\root\\cimv2");
      } catch(e)
      {
      throw new RSTM_ScriptException("error.business.service.unreachable");
      }

      var supportedSPList;
      var PRODUCT_VERSION_EIKON_3_3 = "8.3";
      var isEikon33OrNewer = !(IsProductVersionOlderThan(PRODUCT_VERSION_EIKON_3_3));
      if (isEikon33OrNewer)
      {
      supportedSPList = "Windows XP Professional SP3, Windows Vista SP1, Windows 7, Windows 7 SP1, Windows 8, Windows Server 2003 SP1 or SP2 + Fix236068 (KB955536), Windows Server 2008 R2, Windows Server 2008 R2 SP1.";
      }
      else
      {
      supportedSPList = "Windows XP Professional SP3, Windows Vista SP1, Windows 7, Windows 7 SP1, Windows Server 2003 SP1 or SP2 + Fix236068 (KB955536), Windows Server 2008 R2, Windows Server 2008 R2 SP1.";
      }
      testResult.setProperty("supportedSPList", supportedSPList, "");

      var spMajorVersion;
      var q = services.ExecQuery("SELECT ServicePackMajorVersion FROM Win32_OperatingSystem");
      for (var enumItems = new Enumerator(q); !enumItems.atEnd(); enumItems.moveNext())
      {
      var objItem = enumItems.item();
      spMajorVersion = objItem.ServicePackMajorVersion;
      }

      testResult.setRawResult(spMajorVersion);
      return;


      // ==================== Functions ====================

      function IsProductVersionOlderThan(version)
      {
      Logger.debug("IsProductVersionOlderThan(" + version + ")");
      var isProductVersionOlderThan = true;
      try
      {
      var productVersion = GetProductVersion();
      Logger.debug("Product version = [" + productVersion + "]");
      if (productVersion != "")
      {
      isProductVersionOlderThan = (RDMC.utilities.RDMCCompareVersion(version, productVersion) &gt; 0);
      }
      }
      catch (e) {}
      Logger.debug("IsProductVersionOlderThan(" + version + ") = " + isProductVersionOlderThan);
      return isProductVersionOlderThan;
      }

      function GetProductVersion()
      {
      var version = "";
      Logger.debug("Getting target product version...");
      version = GetTargetProductVersion();
      if (version == "")
      {
      Logger.debug("Getting installed product version...");
      version = GetInstalledProductVersion();
      }
      Logger.debug("GetProductVersion() = [" + version + "]");
      return version;
      }

      function GetTargetProductVersion()
      {
      var version = "";
      try
      {
      version = RDMC.versionInfo.TRD6.m_targetVersion;
      }
      catch (e) {}
      Logger.debug("GetTargetProductVersion() = [" + version + "]");
      return version;
      }

      function GetInstalledProductVersion()
      {
      var version = "";
      try
      {
      version = RDMC.versionInfo.TRD6.m_productVersion;
      }
      catch (e) {}
      Logger.debug("GetInstalledProductVersion() = [" + version + "]");
      return version;
      }
    </stdimpl:javascript>
    <testResult rdf:resource="#tr.unknown-reference-value" />
    <!-- When OS test (#9) produced fail or alert result, SP test should also produce the same result -->
    <testResult>
      <TestResult rdf:about="#tr.10.fail">
        <javascript:valid xmlns:javascript="http://www.reuters.com/RSTM/Javascript/">
          var uriRfs = "http://www.reuters.com/RSTM/Metadata/";
          return (rstmToken.getTest().getProperty(uriRfs + "referenceValue", "") == "fail");
        </javascript:valid>
        <valid>fail</valid>
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.10.alert">
        <javascript:valid xmlns:javascript="http://www.reuters.com/RSTM/Javascript/">
          var uriRfs = "http://www.reuters.com/RSTM/Metadata/";
          return (rstmToken.getTest().getProperty(uriRfs + "referenceValue", "") == "alert");
        </javascript:valid>
        <valid>alert</valid>
      </TestResult>
    </testResult>
    <!-- XP SP2 with KB891117 -->
    <testResult>
      <TestResult rdf:about="#tr.10.XPSP2KB891117">
        <javascript:valid xmlns:javascript="http://www.reuters.com/RSTM/Javascript/">
          var uriRfs = "http://www.reuters.com/RSTM/Metadata/";
          if (testResult == rstmToken.getTest().getProperty(uriRfs + "referenceValue", "")
          &amp;&amp; rstmToken.getTest().getProperty(uriRfs + "HOTFIX", "") == "KB891117"
          &amp;&amp; rstmToken.getTest().getProperty(uriRfs + "OS", "") == "XP" )
          {
          return true;
          }
          else
          {
          return false;
          }
        </javascript:valid>
        <valid>fail</valid>
        <outcome rdf:resource="#to.10.HFDetected" />
      </TestResult>
    </testResult>
    <!-- XP SP2 without KB891117 -->
    <testResult>
      <TestResult rdf:about="#tr.10.XPSP2">
        <javascript:valid xmlns:javascript="http://www.reuters.com/RSTM/Javascript/">
          var uriRfs = "http://www.reuters.com/RSTM/Metadata/";
          if (testResult == rstmToken.getTest().getProperty(uriRfs + "referenceValue", "")
          &amp;&amp; rstmToken.getTest().getProperty(uriRfs + "HOTFIX", "") != "KB891117"
          &amp;&amp; rstmToken.getTest().getProperty(uriRfs + "OS", "") == "XP" )
          {
          return true;
          }
          else
          {
          return false;
          }
        </javascript:valid>
        <valid>fail</valid>
      </TestResult>
    </testResult>
    <!-- Windows 2003 (SERVER) with KB955536 -->
    <testResult>
      <TestResult rdf:about="#tr.10.2003SERVERKB955536">
        <javascript:valid xmlns:javascript="http://www.reuters.com/RSTM/Javascript/">
          var uriRfs = "http://www.reuters.com/RSTM/Metadata/";
          if (testResult &gt;= rstmToken.getTest().getProperty(uriRfs + "referenceValue", "")
          &amp;&amp; rstmToken.getTest().getProperty(uriRfs + "HOTFIX", "") == "KB955536"
          &amp;&amp; rstmToken.getTest().getProperty(uriRfs + "OS", "") == "2003" )
          {
          return true;
          }
          else
          {
          return false;
          }
        </javascript:valid>
        <valid>pass</valid>
        <outcome rdf:resource="#to.10.2003SERVERKB955536Detected" />
      </TestResult>
    </testResult>
    <!-- Unknown OS -->
    <testResult>
      <TestResult rdf:about="#tr.10.unknown_OS">
        <javascript:valid xmlns:javascript="http://www.reuters.com/RSTM/Javascript/">
          var uriRfs = "http://www.reuters.com/RSTM/Metadata/";
          var OS = rstmToken.getTest().getProperty(uriRfs + "OS", "");
          return (OS == "unknown");
        </javascript:valid>
        <valid>alert</valid>
      </TestResult>
    </testResult>
    <!-- SP is enough -->
    <testResult>
      <TestResult rdf:about="#tr.10.3">
        <javascript:valid xmlns:javascript="http://www.reuters.com/RSTM/Javascript/">
          var uriRfs = "http://www.reuters.com/RSTM/Metadata/";
          var OS = rstmToken.getTest().getProperty(uriRfs + "OS", "");
          var targetSP = rstmToken.getTest().getProperty(uriRfs + "referenceValue", "");

          // Validate integer
          var intRegex = /^\d+$/;
          if (!intRegex.test(targetSP))
          {
          // Not an integer
          return false;
          }

          if(OS == "unknown")
          {
          // managed in another case
          return false;
          }

          if (testResult &lt; targetSP)
          {
          // managed in another case
          return false;
          }

          // Special condition for XP and 2003 as it should be checked in other test cases
          if( (OS == "XP"	&amp;&amp; testResult == targetSP) || (OS == "2003" /*&amp;&amp; testResult &gt;= targetSP */) )
          {
          return false;
          }

          return true;
        </javascript:valid>
        <valid>pass</valid>
      </TestResult>
    </testResult>
    <!-- SP is too low -->
    <testResult>
      <TestResult rdf:about="#tr.10.4">
        <javascript:valid xmlns:javascript="http://www.reuters.com/RSTM/Javascript/">
          var uriRfs = "http://www.reuters.com/RSTM/Metadata/";
          var targetSP = rstmToken.getTest().getProperty(uriRfs + "referenceValue", "");

          // Validate integer
          var intRegex = /^\d+$/;
          if (!intRegex.test(targetSP))
          {
          // Not an integer
          return false;
          }

          return (testResult &lt; targetSP);
        </javascript:valid>
        <valid>fail</valid>
      </TestResult>
    </testResult>
    <!-- Anything else -->
    <testResult>
      <TestResult rdf:about="#tr.10.5">
        <value>*</value>
        <valid>fail</valid>
      </TestResult>
    </testResult>
  </Test>
  <TestOutcome rdf:about="#to.10.HFDetected">
    <run:description xml:lang="en">SP%(runPropertyURI='value') + HF KB891117</run:description>
  </TestOutcome>
  <TestOutcome rdf:about="#to.10.2003SERVERKB955536Detected">
    <run:description xml:lang="en">SP%(runPropertyURI='value') + HF KB955536</run:description>
  </TestOutcome>
  <NaturalRedefinition rdf:about="#redef.Hotfix.KB891117">
    <redef:overrides rdf:resource="#test.10" />
    <rfs:HOTFIX>KB891117</rfs:HOTFIX>
  </NaturalRedefinition>
  <NaturalRedefinition rdf:about="#redef.Hotfix.KB955536">
    <redef:overrides rdf:resource="#test.10" />
    <rfs:HOTFIX>KB955536</rfs:HOTFIX>
  </NaturalRedefinition>
  <NaturalRedefinition rdf:about="#redef.OS.2003">
    <redef:overrides rdf:resource="#test.10" />
    <rfs:OS>2003</rfs:OS>
  </NaturalRedefinition>
  <NaturalRedefinition rdf:about="#redef.OS.XP">
    <redef:overrides rdf:resource="#test.10" />
    <rfs:OS>XP</rfs:OS>
  </NaturalRedefinition>
  <NaturalRedefinition rdf:about="#redef.OS.SEVEN">
    <redef:overrides rdf:resource="#test.10" />
    <rfs:OS>SEVEN</rfs:OS>
  </NaturalRedefinition>
  <NaturalRedefinition rdf:about="#redef.OS.2008">
    <redef:overrides rdf:resource="#test.10" />
    <rfs:OS>2008</rfs:OS>
  </NaturalRedefinition>
  <NaturalRedefinition rdf:about="#redef.OS.VISTA">
    <redef:overrides rdf:resource="#test.10" />
    <rfs:OS>VISTA</rfs:OS>
  </NaturalRedefinition>
  <NaturalRedefinition rdf:about="#redef.OS.2000">
    <redef:overrides rdf:resource="#test.10" />
    <rfs:OS>2000</rfs:OS>
  </NaturalRedefinition>
  <NaturalRedefinition rdf:about="#redef.OS.EIGHT">
    <redef:overrides rdf:resource="#test.10" />
    <rfs:OS>EIGHT</rfs:OS>
  </NaturalRedefinition>
  <NaturalRedefinition rdf:about="#redef.OS.2012">
    <redef:overrides rdf:resource="#test.10" />
    <rfs:OS>2012</rfs:OS>
  </NaturalRedefinition>
  <NaturalRedefinition rdf:about="#redef.OS.unknown">
    <redef:overrides rdf:resource="#test.10" />
    <rfs:OS>unknown</rfs:OS>
  </NaturalRedefinition>
  <Test rdf:about="#test.7">
    <default:recommendation xml:lang="en">Required: MSI 3.1 or higher.</default:recommendation>
    <dc:description xml:lang="en">Minimum supported version is MSI 3.1. Return fail for unsupported versions or if no version is intalled. Warning for unknown versions.</dc:description>
  </Test>
  <TestResult rdf:about="#tr.7.MSI.1.00">
    <valid>fail</valid>
  </TestResult>
  <TestResult rdf:about="#tr.7.MSI.3.1">
    <valid>pass</valid>
  </TestResult>
  <TestResult rdf:about="#tr.7.MSI.4.0">
    <valid>pass</valid>
  </TestResult>
  <Test rdf:about="#test.7">
    <!-- Header -->
    <object>Reuters_SubsystemAPI.name='MSI'.version</object>
    <isContainedBy rdf:resource="#group.prerequisites.software" />
    <priority>0.1008</priority>
    <dc:title xml:lang="en">MSI Version:</dc:title>
    <stdimpl:fileVersion>msi.dll</stdimpl:fileVersion>
    <dc:description xml:lang="en">Get MSI.DLL version. Different versions of MSI http://msdn2.microsoft.com/en-us/library/aa371185(VS.85).aspx</dc:description>
    <!-- ### TODO: MSI 4.5 -->
    <!-- Validation -->
    <!-- ### TODO this part of the version test can be re-used -->
    <testResult>
      <TestResult rdf:about="#tr.7.unknown">
        <value>*</value>
        <valid>warning</valid>
        <outcome>
          <TestOutcome rdf:about="#to.7.unknown">
            <run:description xml:lang="en">%(runPropertyURI='value') is an unknown version.</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.7.empty">
        <value />
        <valid>fail</valid>
        <outcome>
          <TestOutcome rdf:about="#to.7.empty">
            <run:description xml:lang="en">Windows Installer is not installed.</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.7.MSI.1.00">
        <value>~1.00</value>
        <outcome>
          <TestOutcome rdf:about="#to.7.MSI.1.00">
            <run:description xml:lang="en">MSI 1.0</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.7.MSI.1.00.5104.0">
        <value>~1.00.5104.0</value>
        <outcome>
          <TestOutcome rdf:about="#to.7.MSI.1.00.5104.0">
            <run:description xml:lang="en">MSI 1.0 with Office 2000</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.7.MSI.1.10.1029.0">
        <value>~1.10.1029.0</value>
        <outcome>
          <TestOutcome rdf:about="#to.7.MSI.1.10.1029.0">
            <run:description xml:lang="en">MSI 1.1 with Windows 2000</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.7.MSI.1.10.1029.1">
        <value>~1.10.1029.1</value>
        <outcome rdf:resource="#to.7.MSI_1.1" />
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.7.MSI.1.10">
        <value>~1.10.</value>
        <outcome rdf:resource="#to.7.MSI_1.1" />
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.7.MSI.1.11.1314.0">
        <value>~1.11.1314.0</value>
        <outcome>
          <TestOutcome rdf:about="#to.7.MSI.1.11.1314.0">
            <run:description xml:lang="en">MSI 1.11 with Windows 2000 SP1</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.7.MSI.1.11.2405.0">
        <value>~1.11.2405.0</value>
        <outcome>
          <TestOutcome rdf:about="#to.7.MSI.1.11.2405.0">
            <run:description xml:lang="en">MSI 1.11 with Windows 2000 SP2</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.7.MSI.1.11">
        <value>~1.11.</value>
        <outcome>
          <TestOutcome rdf:about="#to.7.MSI.1.11">
            <run:description xml:lang="en">MSI 1.11</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.7.MSI.1.20.1410.0">
        <value>~1.20.1410.0</value>
        <outcome>
          <TestOutcome rdf:about="#to.7.MSI.1.20.1410.0">
            <run:description xml:lang="en">MSI 1.2 with Windows Millennium Edition</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.7.MSI.1.20.1827.0">
        <value>~1.20.1827.0</value>
        <outcome>
          <TestOutcome rdf:about="#to.7.MSI.1.20.1827.0">
            <run:description xml:lang="en">MSI 1.2 Redistributable</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.7.MSI.1.20.2405.0">
        <value>~1.20.2405.0</value>
        <outcome>
          <TestOutcome rdf:about="#to.7.MSI.1.20.2405.0">
            <run:description xml:lang="en">MSI 1.2 with Office XP</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.7.MSI.1.20">
        <value>~1.20.</value>
        <outcome>
          <TestOutcome rdf:about="#to.7.MSI.1.20">
            <run:description xml:lang="en">MSI 1.2</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.7.MSI.2.0">
        <value>~2.0.</value>
        <outcome>
          <TestOutcome rdf:about="#to.7.MSI.2.0">
            <run:description xml:lang="en">MSI 2.0</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.7.MSI.2.0.2600.0">
        <value>~2.0.2600.0</value>
        <outcome>
          <TestOutcome rdf:about="#to.7.MSI.2.0.2600.0">
            <run:description xml:lang="en">MSI 2.0 with Windows XP</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.7.MSI.2.0.2600.1">
        <value>~2.0.2600.1</value>
        <outcome>
          <TestOutcome rdf:about="#to.7.MSI.2.0.2600.1">
            <run:description xml:lang="en">MSI 2.0 with Windows .NET Server family.</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.MSI.2.0.2600.1106">
        <value>~2.0.2600.1106</value>
        <outcome>
          <TestOutcome rdf:about="#to.MSI.2.0.2600.1106">
            <run:description xml:lang="en">MSI 2.0 with Windows XP SP1</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.7.MSI.2.0.2600.1183">
        <value>~2.0.2600.1183</value>
        <outcome>
          <TestOutcome rdf:about="#to.7.MSI.2.0.2600.1183">
            <run:description xml:lang="en">MSI 2.0 with Windows 2000 SP4</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.7.MSI.2.0.2600.2">
        <value>~2.0.2600.2</value>
        <outcome>
          <TestOutcome rdf:about="#to.7.MSI.2.0.2600.2">
            <run:description xml:lang="en">MSI 2.0 with Visual Fox Pro 8</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.7.MSI.2.0.3790.0">
        <value>~2.0.3790.0</value>
        <outcome>
          <TestOutcome rdf:about="#to.7.MSI.2.0.3790.0">
            <run:description xml:lang="en">MSI 2.0 with Windows 2003 Server</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.7.MSI.3.0">
        <value>~3.0.</value>
        <outcome>
          <TestOutcome rdf:about="#to.7.MSI.3.0">
            <run:description xml:lang="en">MSI 3.0</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.7.MSI.3.0.3790.2180">
        <value>~3.0.3790.2180</value>
        <outcome>
          <TestOutcome rdf:about="#to.7.MSI.3.0.3790.2180">
            <run:description xml:lang="en">MSI 3.0 with Windows XP SP2 or Redistributable</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.7.MSI.3.1">
        <value>~3.1</value>
        <outcome>
          <TestOutcome rdf:about="#to.7.MSI.3.1">
            <run:description xml:lang="en">MSI 3.1</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.7.MSI.3.1.4000.1823">
        <value>~3.1.4000.1823</value>
        <outcome>
          <TestOutcome rdf:about="#to.7.MSI.3.1.4000.1823">
            <run:description xml:lang="en">MSI 3.1 Redistributable</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.7.MSI.3.1.4000.1830">
        <value>~3.1.4000.1830</value>
        <outcome>
          <TestOutcome rdf:about="#to.7.MSI.3.1.4000.1830">
            <run:description xml:lang="en">MSI 3.1 with Windows Server 2003 SP1 and Windows XP Professional x64</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.7.MSI.3.1.4000.2435">
        <value>~3.1.4000.2435</value>
        <outcome>
          <TestOutcome rdf:about="#to.7.MSI.3.1.4000.2435">
            <run:description xml:lang="en">MSI 3.1 updated to KB898628</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.7.MSI.4.0">
        <value>~4.0.</value>
        <outcome>
          <TestOutcome rdf:about="#to.7.MSI.4.0">
            <run:description xml:lang="en">MSI 4.0</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.7.MSI.4.0.6000.16386">
        <value>~4.0.6000.16386</value>
        <outcome>
          <TestOutcome rdf:about="#to.7.MSI.4.0.6000.16386">
            <run:description xml:lang="en">MSI 4.0 with Windows Vista</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.7.MSI.4.5">
        <value>~4.5.</value>
        <valid>pass</valid>
        <outcome>
          <TestOutcome rdf:about="#to.7.MSI.4.5">
            <run:description xml:lang="en">MSI 4.5</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.7.MSI.5.0">
        <value>~5.0.</value>
        <valid>pass</valid>
        <outcome>
          <TestOutcome rdf:about="#to.7.MSI.5.0">
            <run:description xml:lang="en">MSI 5.0</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
  </Test>
  <TestOutcome rdf:about="#to.7.MSI_1.1">
    <run:description xml:lang="en">MSI 1.1 Redistributable</run:description>
  </TestOutcome>
  <Test rdf:about="#test.8">
    <default:recommendation xml:lang="en">Required: MSXML 3.0 SP1 or higher.</default:recommendation>
    <dc:description xml:lang="en">You need MSXML 3 (msxml.dll) on you computer. Other versions (lower or greater) will be ignored. Only MSXML 3 with SP1 or greater are supported. Return fail for unsupported versions or if no version is intalled. Warning for unknown versions.</dc:description>
  </Test>
  <TestResult rdf:about="#tr.8.MSXML.3.0.unknown">
    <valid>warning</valid>
  </TestResult>
  <TestResult rdf:about="#tr.8.MSXML.3.0.empty">
    <valid>fail</valid>
  </TestResult>
  <TestResult rdf:about="#tr.8.MSXML.3.0.web">
    <valid>fail</valid>
  </TestResult>
  <TestResult rdf:about="#tr.8.MSXML.3.0">
    <valid>fail</valid>
  </TestResult>
  <TestResult rdf:about="#tr.8.MSXML.3.0.SP1">
    <valid>pass</valid>
  </TestResult>
  <TestResult rdf:about="#tr.8.MSXML.3.0.SP2">
    <valid>pass</valid>
  </TestResult>
  <TestResult rdf:about="#tr.8.MSXML.3.0.SP3">
    <valid>pass</valid>
  </TestResult>
  <TestResult rdf:about="#tr.8.MSXML.3.0.SP4">
    <valid>pass</valid>
  </TestResult>
  <TestResult rdf:about="#tr.8.MSXML.3.0.SP5">
    <valid>pass</valid>
  </TestResult>
  <TestResult rdf:about="#tr.8.MSXML.3.0.SP6">
    <valid>pass</valid>
  </TestResult>
  <TestResult rdf:about="#tr.8.MSXML.3.0.SP7">
    <valid>pass</valid>
  </TestResult>
  <TestResult rdf:about="#tr.8.MSXML.3.0.SP7.2">
    <valid>pass</valid>
  </TestResult>
  <TestResult rdf:about="#tr.8.MSXML.3.0.SP8">
    <valid>pass</valid>
  </TestResult>
  <TestResult rdf:about="#tr.8.MSXML.3.0.SP8.2">
    <valid>pass</valid>
  </TestResult>
  <TestResult rdf:about="#tr.8.MSXML.3.0.SP9">
    <valid>pass</valid>
  </TestResult>
  <TestResult rdf:about="#tr.8.MSXML.3.0.SP9.2">
    <valid>pass</valid>
  </TestResult>
  <TestResult rdf:about="#tr.8.MSXML.3.0.SP10">
    <valid>pass</valid>
  </TestResult>
  <Test rdf:about="#test.8">
    <!-- Header -->
    <object>Reuters_SubsystemAPI.name='MSXML3'.version</object>
    <isContainedBy rdf:resource="#group.prerequisites.software" />
    <priority>0.1009</priority>
    <dc:title xml:lang="en">MSXML 3.0 Version:</dc:title>
    <stdimpl:fileVersion>msxml3.dll</stdimpl:fileVersion>
    <dc:description xml:lang="en">Get MSXML3.dll version.</dc:description>
    <!-- see product.xtra.6\test.8.msxml3-version.rdf for valid status -->
    <testResult>
      <TestResult rdf:about="#tr.8.MSXML.3.0.unknown">
        <value>*</value>
        <outcome>
          <TestOutcome rdf:about="#to.8.MSXML.3.0.unknown">
            <run:description xml:lang="en">%(runPropertyURI='value') is not a valid version.</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.8.MSXML.3.0.empty">
        <value />
        <outcome>
          <TestOutcome rdf:about="#to.8.MSXML.3.0.empty">
            <run:description xml:lang="en">MSXML 3.0 is not installed.</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.8.MSXML.3.0.web">
        <value>7.50.*</value>
        <outcome>
          <TestOutcome rdf:about="#to.8.MSXML.3.0.web">
            <run:description xml:lang="en">MSXML 3.0 March Web Release</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.8.MSXML.3.0">
        <value>8.0.*</value>
        <outcome>
          <TestOutcome rdf:about="#to.8.MSXML.3.0">
            <run:description xml:lang="en">MSXML 3.0</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.8.MSXML.3.0.SP1">
        <value>8.10.*</value>
        <outcome>
          <TestOutcome rdf:about="#to.8.MSXML.3.0.SP1">
            <run:description xml:lang="en">MSXML 3.0 SP1</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.8.MSXML.3.0.SP2">
        <value>8.20.*</value>
        <outcome>
          <TestOutcome rdf:about="#to.8.MSXML.3.0.SP2">
            <run:description xml:lang="en">MSXML 3.0 SP2</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.8.MSXML.3.0.SP3">
        <value>8.30.*</value>
        <outcome>
          <TestOutcome rdf:about="#to.8.MSXML.3.0.SP3">
            <run:description xml:lang="en">MSXML 3.0 SP3</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.8.MSXML.3.0.SP4">
        <value>8.40.*</value>
        <outcome>
          <TestOutcome rdf:about="#to.8.MSXML.3.0.SP4">
            <run:description xml:lang="en">MSXML 3.0 SP4</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.8.MSXML.3.0.SP5">
        <value>8.50.*</value>
        <outcome>
          <TestOutcome rdf:about="#to.8.MSXML.3.0.SP5">
            <run:description xml:lang="en">MSXML 3.0 SP5</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.8.MSXML.3.0.SP6">
        <value>8.60.*</value>
        <outcome>
          <TestOutcome rdf:about="#to.8.MSXML.3.0.SP6">
            <run:description xml:lang="en">MSXML 3.0 SP6</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.8.MSXML.3.0.SP7">
        <value>8.70.*</value>
        <priority>1</priority>
        <outcome>
          <TestOutcome rdf:about="#to.8.MSXML.3.0.SP7">
            <run:description xml:lang="en">MSXML 3.0 SP7</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.8.MSXML.3.0.SP7.2">
        <value>&gt;=8.70.1113.0</value>
        <priority>2</priority>
        <outcome>
          <TestOutcome rdf:about="#to.8.MSXML.3.0.SP7.2">
            <run:description xml:lang="en">MSXML 3.0 Post SP7 MS06-061</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.8.MSXML.3.0.SP8">
        <value>8.80.*</value>
        <priority>3</priority>
        <outcome>
          <TestOutcome rdf:about="#to.8.MSXML.3.0.SP8">
            <run:description xml:lang="en">MSXML 3.0 SP8</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.8.MSXML.3.0.SP8.2">
        <value>&gt;=8.80.1185.0</value>
        <priority>4</priority>
        <outcome>
          <TestOutcome rdf:about="#to.8.MSXML.3.0.SP8.2">
            <run:description xml:lang="en">MSXML 3.0 Post SP8</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.8.MSXML.3.0.SP9">
        <value>8.90.*</value>
        <priority>5</priority>
        <outcome>
          <TestOutcome rdf:about="#to.8.MSXML.3.0.SP9">
            <run:description xml:lang="en">MSXML 3.0 SP9</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.8.MSXML.3.0.SP9.2">
        <value>&gt;=8.90.1101.0</value>
        <priority>6</priority>
        <outcome>
          <TestOutcome rdf:about="#to.8.MSXML.3.0.SP9.2">
            <run:description xml:lang="en">MSXML 3.0 Post SP9 MS06-061</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.8.MSXML.3.0.SP10">
        <value>&gt;=8.100.0.0</value>
        <priority>7</priority>
        <outcome>
          <TestOutcome rdf:about="#to.8.MSXML.3.0.SP10">
            <run:description xml:lang="en">MSXML 3.0 SP10 or higher</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
  </Test>
  <Test rdf:about="#test.19">
    <default:recommendation xml:lang="en">Required: MSXML 6.0 or higher.</default:recommendation>
    <dc:description xml:lang="en">You need MSXML 6 (msxml.dll) on you computer. Other versions (lower or greater) will be ignored. Only MSXML 6 or greater are supported. Return fail for unsupported versions or if no version is intalled. Warning for unknown versions.</dc:description>
  </Test>
  <TestResult rdf:about="#tr.19.MSXML.6.0.unknown">
    <valid>warning</valid>
  </TestResult>
  <TestResult rdf:about="#tr.19.MSXML.6.0.empty">
    <valid>fail</valid>
  </TestResult>
  <TestResult rdf:about="#tr.19.MSXML.6.0">
    <valid>pass</valid>
  </TestResult>
  <TestResult rdf:about="#tr.19.MSXML.6.0.SP1">
    <valid>pass</valid>
  </TestResult>
  <TestResult rdf:about="#tr.19.MSXML.6.0.SP2">
    <valid>pass</valid>
  </TestResult>
  <TestResult rdf:about="#tr.19.MSXML.6.0.SP3">
    <valid>pass</valid>
  </TestResult>
  <Test rdf:about="#test.19">
    <!-- Header -->
    <object>Reuters_SubsystemAPI.name='MSXML6'.version</object>
    <isContainedBy rdf:resource="#group.prerequisites.software" />
    <priority>0.1009</priority>
    <dc:title xml:lang="en">MSXML 6.0 Version:</dc:title>
    <stdimpl:fileVersion>msxml6.dll</stdimpl:fileVersion>
    <dc:description xml:lang="en">Get MSXML6.dll version.</dc:description>
    <!-- see product.xtra.6\test.19.msxml6-version.rdf for valid status -->
    <testResult>
      <TestResult rdf:about="#tr.19.MSXML.6.0.empty">
        <value />
        <outcome>
          <TestOutcome rdf:about="#to.19.MSXML.6.0.empty">
            <run:description xml:lang="en">MSXML is not installed.</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.19.MSXML.6.0">
        <value>*</value>
        <outcome>
          <TestOutcome rdf:about="#to.19.MSXML.6.0">
            <run:description xml:lang="en">%(runPropertyURI='value')</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
  </Test>
  <!-- 
	TEST 9 = OS Version 
			|-> TEST 10 = OS Service Pack
			|-> TEST 4 = Memory
	 		|-> TEST 3 = CPU Freq
	-->
  <Test rdf:about="#test.9">
    <default:recommendation xml:lang="en">Supported: %(runPropertyURI='supportedOSList')</default:recommendation>
  </Test>
  <!-- ***** Windows 2000 ***** -->
  <TestResult rdf:about="#tr.9.win2k">
    <valid>fail</valid>
    <redef:redefinesWith rdf:resource="#redef.9.10.fail" />
  </TestResult>
  <!-- ***** Windows XP ***** -->
  <TestResult rdf:about="#tr.9.xphome">
    <valid>fail</valid>
    <redef:redefinesWith rdf:resource="#redef.9.10.fail" />
    <redef:redefinesWith rdf:resource="#redef.9.4.1gb" />
    <redef:redefinesWith rdf:resource="#redef.9.3.2_4ghz" />
  </TestResult>
  <TestResult rdf:about="#tr.9.xphomeKB891117">
    <valid>fail</valid>
    <redef:redefinesWith rdf:resource="#redef.9.10.fail" />
    <redef:redefinesWith rdf:resource="#redef.9.4.1gb" />
    <redef:redefinesWith rdf:resource="#redef.9.3.2_4ghz" />
  </TestResult>
  <TestResult rdf:about="#tr.9.xppro">
    <valid>pass</valid>
    <redef:redefinesWith rdf:resource="#redef.9.10.xp" />
    <redef:redefinesWith rdf:resource="#redef.9.4.1gb" />
    <redef:redefinesWith rdf:resource="#redef.9.3.2_4ghz" />
  </TestResult>
  <TestResult rdf:about="#tr.9.xpproKB891117">
    <valid>fail</valid>
    <redef:redefinesWith rdf:resource="#redef.9.10.fail" />
    <redef:redefinesWith rdf:resource="#redef.9.4.1gb" />
    <redef:redefinesWith rdf:resource="#redef.9.3.2_4ghz" />
  </TestResult>
  <TestResult rdf:about="#tr.9.xp64">
    <valid>alert</valid>
    <redef:redefinesWith rdf:resource="#redef.9.10.alert" />
    <redef:redefinesWith rdf:resource="#redef.9.4.1gb" />
    <redef:redefinesWith rdf:resource="#redef.9.3.2_4ghz" />
  </TestResult>
  <!-- ***** Windows Server 2003 ***** -->
  <TestResult rdf:about="#tr.9.2003">
    <valid>pass</valid>
    <redef:redefinesWith rdf:resource="#redef.9.10.2003sp1" />
    <redef:redefinesWith rdf:resource="#redef.9.4.1gb" />
    <redef:redefinesWith rdf:resource="#redef.9.3.2_4ghz" />
  </TestResult>
  <TestResult rdf:about="#tr.9.2003_kb955536">
    <valid>pass</valid>
    <redef:redefinesWith rdf:resource="#redef.9.10.2003sp1" />
    <redef:redefinesWith rdf:resource="#redef.9.4.1gb" />
    <redef:redefinesWith rdf:resource="#redef.9.3.2_4ghz" />
  </TestResult>
  <!-- ***** Windows Vista ***** -->
  <TestResult rdf:about="#tr.9.vista">
    <valid>alert</valid>
    <redef:redefinesWith rdf:resource="#redef.9.10.alert" />
    <redef:redefinesWith rdf:resource="#redef.9.4.1gb" />
    <redef:redefinesWith rdf:resource="#redef.9.3.2_4ghz" />
  </TestResult>
  <TestResult rdf:about="#tr.9.vista.business">
    <valid>pass</valid>
    <redef:redefinesWith rdf:resource="#redef.9.10.vistasp1" />
    <redef:redefinesWith rdf:resource="#redef.9.4.1gb" />
    <redef:redefinesWith rdf:resource="#redef.9.3.2_4ghz" />
  </TestResult>
  <TestResult rdf:about="#tr.9.vista.ultimate">
    <valid>pass</valid>
    <redef:redefinesWith rdf:resource="#redef.9.10.vistasp1" />
    <redef:redefinesWith rdf:resource="#redef.9.4.1gb" />
    <redef:redefinesWith rdf:resource="#redef.9.3.2_4ghz" />
  </TestResult>
  <TestResult rdf:about="#tr.9.vista.enterprise">
    <valid>pass</valid>
    <redef:redefinesWith rdf:resource="#redef.9.10.vistasp1" />
    <redef:redefinesWith rdf:resource="#redef.9.4.1gb" />
    <redef:redefinesWith rdf:resource="#redef.9.3.2_4ghz" />
  </TestResult>
  <TestResult rdf:about="#tr.9.vista.homebasic">
    <valid>alert</valid>
    <redef:redefinesWith rdf:resource="#redef.9.10.alert" />
    <redef:redefinesWith rdf:resource="#redef.9.4.1gb" />
    <redef:redefinesWith rdf:resource="#redef.9.3.2_4ghz" />
  </TestResult>
  <TestResult rdf:about="#tr.9.vista.homebasicpremium">
    <valid>alert</valid>
    <redef:redefinesWith rdf:resource="#redef.9.10.alert" />
    <redef:redefinesWith rdf:resource="#redef.9.4.1gb" />
    <redef:redefinesWith rdf:resource="#redef.9.3.2_4ghz" />
  </TestResult>
  <TestResult rdf:about="#tr.9.vista.homebasicN">
    <valid>alert</valid>
    <redef:redefinesWith rdf:resource="#redef.9.10.alert" />
    <redef:redefinesWith rdf:resource="#redef.9.4.1gb" />
    <redef:redefinesWith rdf:resource="#redef.9.3.2_4ghz" />
  </TestResult>
  <TestResult rdf:about="#tr.9.vista.starter">
    <valid>alert</valid>
    <redef:redefinesWith rdf:resource="#redef.9.10.alert" />
    <redef:redefinesWith rdf:resource="#redef.9.4.1gb" />
    <redef:redefinesWith rdf:resource="#redef.9.3.2_4ghz" />
  </TestResult>
  <TestResult rdf:about="#tr.9.vista.businessN">
    <valid>pass</valid>
    <redef:redefinesWith rdf:resource="#redef.9.10.vistasp1" />
    <redef:redefinesWith rdf:resource="#redef.9.4.1gb" />
    <redef:redefinesWith rdf:resource="#redef.9.3.2_4ghz" />
  </TestResult>
  <!-- ***** Windows Server 2008 ***** -->
  <TestResult rdf:about="#tr.9.2008.standardserver">
    <valid>alert</valid>
    <redef:redefinesWith rdf:resource="#redef.9.10.alert" />
    <redef:redefinesWith rdf:resource="#redef.9.4.1gb" />
    <redef:redefinesWith rdf:resource="#redef.9.3.2_4ghz" />
  </TestResult>
  <TestResult rdf:about="#tr.9.2008.datacenterserver">
    <valid>alert</valid>
    <redef:redefinesWith rdf:resource="#redef.9.10.alert" />
    <redef:redefinesWith rdf:resource="#redef.9.4.1gb" />
    <redef:redefinesWith rdf:resource="#redef.9.3.2_4ghz" />
  </TestResult>
  <TestResult rdf:about="#tr.9.2008.enterpriseserver">
    <valid>alert</valid>
    <redef:redefinesWith rdf:resource="#redef.9.10.alert" />
    <redef:redefinesWith rdf:resource="#redef.9.4.1gb" />
    <redef:redefinesWith rdf:resource="#redef.9.3.2_4ghz" />
  </TestResult>
  <TestResult rdf:about="#tr.9.2008.datacenterservercore">
    <valid>alert</valid>
    <redef:redefinesWith rdf:resource="#redef.9.10.alert" />
    <redef:redefinesWith rdf:resource="#redef.9.4.1gb" />
    <redef:redefinesWith rdf:resource="#redef.9.3.2_4ghz" />
  </TestResult>
  <TestResult rdf:about="#tr.9.2008.standardservercore">
    <valid>alert</valid>
    <redef:redefinesWith rdf:resource="#redef.9.10.alert" />
    <redef:redefinesWith rdf:resource="#redef.9.4.1gb" />
    <redef:redefinesWith rdf:resource="#redef.9.3.2_4ghz" />
  </TestResult>
  <TestResult rdf:about="#tr.9.2008.enterpriseservercore">
    <valid>alert</valid>
    <redef:redefinesWith rdf:resource="#redef.9.10.alert" />
    <redef:redefinesWith rdf:resource="#redef.9.4.1gb" />
    <redef:redefinesWith rdf:resource="#redef.9.3.2_4ghz" />
  </TestResult>
  <TestResult rdf:about="#tr.9.2008.enterpriseserveritanium">
    <valid>alert</valid>
    <redef:redefinesWith rdf:resource="#redef.9.10.alert" />
    <redef:redefinesWith rdf:resource="#redef.9.4.1gb" />
    <redef:redefinesWith rdf:resource="#redef.9.3.2_4ghz" />
  </TestResult>
  <TestResult rdf:about="#tr.9.2008.webserver">
    <valid>alert</valid>
    <redef:redefinesWith rdf:resource="#redef.9.10.alert" />
    <redef:redefinesWith rdf:resource="#redef.9.4.1gb" />
    <redef:redefinesWith rdf:resource="#redef.9.3.2_4ghz" />
  </TestResult>
  <TestResult rdf:about="#tr.9.2008.clusterserver">
    <valid>alert</valid>
    <redef:redefinesWith rdf:resource="#redef.9.10.alert" />
    <redef:redefinesWith rdf:resource="#redef.9.4.1gb" />
    <redef:redefinesWith rdf:resource="#redef.9.3.2_4ghz" />
  </TestResult>
  <TestResult rdf:about="#tr.9.2008.homeserver">
    <valid>alert</valid>
    <redef:redefinesWith rdf:resource="#redef.9.10.alert" />
    <redef:redefinesWith rdf:resource="#redef.9.4.1gb" />
    <redef:redefinesWith rdf:resource="#redef.9.3.2_4ghz" />
  </TestResult>
  <TestResult rdf:about="#tr.9.2008.storageexpressserver">
    <valid>alert</valid>
    <redef:redefinesWith rdf:resource="#redef.9.10.alert" />
    <redef:redefinesWith rdf:resource="#redef.9.4.1gb" />
    <redef:redefinesWith rdf:resource="#redef.9.3.2_4ghz" />
  </TestResult>
  <TestResult rdf:about="#tr.9.2008.storagestandardserver">
    <valid>alert</valid>
    <redef:redefinesWith rdf:resource="#redef.9.10.alert" />
    <redef:redefinesWith rdf:resource="#redef.9.4.1gb" />
    <redef:redefinesWith rdf:resource="#redef.9.3.2_4ghz" />
  </TestResult>
  <TestResult rdf:about="#tr.9.2008.storageworkgroupserver">
    <valid>alert</valid>
    <redef:redefinesWith rdf:resource="#redef.9.10.alert" />
    <redef:redefinesWith rdf:resource="#redef.9.4.1gb" />
    <redef:redefinesWith rdf:resource="#redef.9.3.2_4ghz" />
  </TestResult>
  <TestResult rdf:about="#tr.9.2008.storageenterpriseserver">
    <valid>alert</valid>
    <redef:redefinesWith rdf:resource="#redef.9.10.alert" />
    <redef:redefinesWith rdf:resource="#redef.9.4.1gb" />
    <redef:redefinesWith rdf:resource="#redef.9.3.2_4ghz" />
  </TestResult>
  <TestResult rdf:about="#tr.9.2008.smallbusinessserver">
    <valid>alert</valid>
    <redef:redefinesWith rdf:resource="#redef.9.10.alert" />
    <redef:redefinesWith rdf:resource="#redef.9.4.1gb" />
    <redef:redefinesWith rdf:resource="#redef.9.3.2_4ghz" />
  </TestResult>
  <TestResult rdf:about="#tr.9.2008.smallbusinessserverpremium">
    <valid>alert</valid>
    <redef:redefinesWith rdf:resource="#redef.9.10.alert" />
    <redef:redefinesWith rdf:resource="#redef.9.4.1gb" />
    <redef:redefinesWith rdf:resource="#redef.9.3.2_4ghz" />
  </TestResult>
  <!-- ***** Windows 7 ***** -->
  <TestResult rdf:about="#tr.9.seven">
    <valid>alert</valid>
    <redef:redefinesWith rdf:resource="#redef.9.10.alert" />
    <redef:redefinesWith rdf:resource="#redef.9.4.1gb" />
    <redef:redefinesWith rdf:resource="#redef.9.3.2_4ghz" />
  </TestResult>
  <TestResult rdf:about="#tr.9.seven.pro">
    <valid>pass</valid>
    <redef:redefinesWith rdf:resource="#redef.9.10.vistasp0" />
    <redef:redefinesWith rdf:resource="#redef.9.4.1gb" />
    <redef:redefinesWith rdf:resource="#redef.9.3.2_4ghz" />
  </TestResult>
  <TestResult rdf:about="#tr.9.seven.ultimate">
    <valid>pass</valid>
    <redef:redefinesWith rdf:resource="#redef.9.10.vistasp0" />
    <redef:redefinesWith rdf:resource="#redef.9.4.1gb" />
    <redef:redefinesWith rdf:resource="#redef.9.3.2_4ghz" />
  </TestResult>
  <TestResult rdf:about="#tr.9.seven.enterprise">
    <valid>pass</valid>
    <redef:redefinesWith rdf:resource="#redef.9.10.vistasp0" />
    <redef:redefinesWith rdf:resource="#redef.9.4.1gb" />
    <redef:redefinesWith rdf:resource="#redef.9.3.2_4ghz" />
  </TestResult>
  <TestResult rdf:about="#tr.9.seven.homebasic">
    <valid>alert</valid>
    <redef:redefinesWith rdf:resource="#redef.9.10.alert" />
    <redef:redefinesWith rdf:resource="#redef.9.4.1gb" />
    <redef:redefinesWith rdf:resource="#redef.9.3.2_4ghz" />
  </TestResult>
  <TestResult rdf:about="#tr.9.seven.homebasicpremium">
    <valid>pass</valid>
    <redef:redefinesWith rdf:resource="#redef.9.10.vistasp0" />
    <redef:redefinesWith rdf:resource="#redef.9.4.1gb" />
    <redef:redefinesWith rdf:resource="#redef.9.3.2_4ghz" />
  </TestResult>
  <TestResult rdf:about="#tr.9.seven.homebasicpremium64">
    <valid>pass</valid>
    <redef:redefinesWith rdf:resource="#redef.9.10.vistasp0" />
    <redef:redefinesWith rdf:resource="#redef.9.4.1gb" />
    <redef:redefinesWith rdf:resource="#redef.9.3.2_4ghz" />
  </TestResult>
  <TestResult rdf:about="#tr.9.seven.homebasicN">
    <valid>alert</valid>
    <redef:redefinesWith rdf:resource="#redef.9.10.alert" />
    <redef:redefinesWith rdf:resource="#redef.9.4.1gb" />
    <redef:redefinesWith rdf:resource="#redef.9.3.2_4ghz" />
  </TestResult>
  <TestResult rdf:about="#tr.9.seven.starter">
    <valid>alert</valid>
    <redef:redefinesWith rdf:resource="#redef.9.10.alert" />
    <redef:redefinesWith rdf:resource="#redef.9.4.1gb" />
    <redef:redefinesWith rdf:resource="#redef.9.3.2_4ghz" />
  </TestResult>
  <!-- ***** Windows Server 2008 R2 ***** -->
  <TestResult rdf:about="#tr.9.2008r2.standardserver">
    <valid>pass</valid>
    <redef:redefinesWith rdf:resource="#redef.9.10.vistasp0" />
    <redef:redefinesWith rdf:resource="#redef.9.4.1gb" />
    <redef:redefinesWith rdf:resource="#redef.9.3.2_4ghz" />
  </TestResult>
  <TestResult rdf:about="#tr.9.2008r2.datacenterserver">
    <valid>alert</valid>
    <redef:redefinesWith rdf:resource="#redef.9.10.alert" />
    <redef:redefinesWith rdf:resource="#redef.9.4.1gb" />
    <redef:redefinesWith rdf:resource="#redef.9.3.2_4ghz" />
  </TestResult>
  <TestResult rdf:about="#tr.9.2008r2.enterpriseserver">
    <valid>pass</valid>
    <redef:redefinesWith rdf:resource="#redef.9.10.vistasp0" />
    <redef:redefinesWith rdf:resource="#redef.9.4.1gb" />
    <redef:redefinesWith rdf:resource="#redef.9.3.2_4ghz" />
  </TestResult>
  <TestResult rdf:about="#tr.9.2008r2.datacenterservercore">
    <valid>alert</valid>
    <redef:redefinesWith rdf:resource="#redef.9.10.alert" />
    <redef:redefinesWith rdf:resource="#redef.9.4.1gb" />
    <redef:redefinesWith rdf:resource="#redef.9.3.2_4ghz" />
  </TestResult>
  <TestResult rdf:about="#tr.9.2008r2.standardservercore">
    <valid>pass</valid>
    <redef:redefinesWith rdf:resource="#redef.9.10.vistasp0" />
    <redef:redefinesWith rdf:resource="#redef.9.4.1gb" />
    <redef:redefinesWith rdf:resource="#redef.9.3.2_4ghz" />
  </TestResult>
  <TestResult rdf:about="#tr.9.2008r2.enterpriseservercore">
    <valid>pass</valid>
    <redef:redefinesWith rdf:resource="#redef.9.10.vistasp0" />
    <redef:redefinesWith rdf:resource="#redef.9.4.1gb" />
    <redef:redefinesWith rdf:resource="#redef.9.3.2_4ghz" />
  </TestResult>
  <TestResult rdf:about="#tr.9.2008r2.enterpriseserveritanium">
    <valid>alert</valid>
    <redef:redefinesWith rdf:resource="#redef.9.10.alert" />
    <redef:redefinesWith rdf:resource="#redef.9.4.1gb" />
    <redef:redefinesWith rdf:resource="#redef.9.3.2_4ghz" />
  </TestResult>
  <TestResult rdf:about="#tr.9.2008r2.webserver">
    <valid>alert</valid>
    <redef:redefinesWith rdf:resource="#redef.9.10.alert" />
    <redef:redefinesWith rdf:resource="#redef.9.4.1gb" />
    <redef:redefinesWith rdf:resource="#redef.9.3.2_4ghz" />
  </TestResult>
  <TestResult rdf:about="#tr.9.2008r2.clusterserver">
    <valid>alert</valid>
    <redef:redefinesWith rdf:resource="#redef.9.10.alert" />
    <redef:redefinesWith rdf:resource="#redef.9.4.1gb" />
    <redef:redefinesWith rdf:resource="#redef.9.3.2_4ghz" />
  </TestResult>
  <TestResult rdf:about="#tr.9.2008r2.homeserver">
    <valid>alert</valid>
    <redef:redefinesWith rdf:resource="#redef.9.10.alert" />
    <redef:redefinesWith rdf:resource="#redef.9.4.1gb" />
    <redef:redefinesWith rdf:resource="#redef.9.3.2_4ghz" />
  </TestResult>
  <TestResult rdf:about="#tr.9.2008r2.storageexpressserver">
    <valid>alert</valid>
    <redef:redefinesWith rdf:resource="#redef.9.10.alert" />
    <redef:redefinesWith rdf:resource="#redef.9.4.1gb" />
    <redef:redefinesWith rdf:resource="#redef.9.3.2_4ghz" />
  </TestResult>
  <TestResult rdf:about="#tr.9.2008r2.storagestandardserver">
    <valid>alert</valid>
    <redef:redefinesWith rdf:resource="#redef.9.10.alert" />
    <redef:redefinesWith rdf:resource="#redef.9.4.1gb" />
    <redef:redefinesWith rdf:resource="#redef.9.3.2_4ghz" />
  </TestResult>
  <TestResult rdf:about="#tr.9.2008r2.storageworkgroupserver">
    <valid>alert</valid>
    <redef:redefinesWith rdf:resource="#redef.9.10.alert" />
    <redef:redefinesWith rdf:resource="#redef.9.4.1gb" />
    <redef:redefinesWith rdf:resource="#redef.9.3.2_4ghz" />
  </TestResult>
  <TestResult rdf:about="#tr.9.2008r2.storageenterpriseserver">
    <valid>alert</valid>
    <redef:redefinesWith rdf:resource="#redef.9.10.alert" />
    <redef:redefinesWith rdf:resource="#redef.9.4.1gb" />
    <redef:redefinesWith rdf:resource="#redef.9.3.2_4ghz" />
  </TestResult>
  <TestResult rdf:about="#tr.9.2008r2.smallbusinessserver">
    <valid>pass</valid>
    <redef:redefinesWith rdf:resource="#redef.9.10.vistasp0" />
    <redef:redefinesWith rdf:resource="#redef.9.4.1gb" />
    <redef:redefinesWith rdf:resource="#redef.9.3.2_4ghz" />
  </TestResult>
  <TestResult rdf:about="#tr.9.2008r2.smallbusinessserverpremium">
    <valid>pass</valid>
    <redef:redefinesWith rdf:resource="#redef.9.10.vistasp0" />
    <redef:redefinesWith rdf:resource="#redef.9.4.1gb" />
    <redef:redefinesWith rdf:resource="#redef.9.3.2_4ghz" />
  </TestResult>
  <!-- ***** Windows 8 ***** -->
  <TestResult rdf:about="#tr.9.eight">
    <valid>alert</valid>
    <redef:redefinesWith rdf:resource="#redef.9.10.alert" />
    <redef:redefinesWith rdf:resource="#redef.9.4.1gb" />
    <redef:redefinesWith rdf:resource="#redef.9.3.2_4ghz" />
  </TestResult>
  <TestResult rdf:about="#tr.9.eight.old_trd">
    <valid>alert</valid>
    <redef:redefinesWith rdf:resource="#redef.9.10.alert" />
    <redef:redefinesWith rdf:resource="#redef.9.4.1gb" />
    <redef:redefinesWith rdf:resource="#redef.9.3.2_4ghz" />
  </TestResult>
  <TestResult rdf:about="#tr.9.eight.core">
    <valid>pass</valid>
    <redef:redefinesWith rdf:resource="#redef.9.10.vistasp0" />
    <redef:redefinesWith rdf:resource="#redef.9.4.1gb" />
    <redef:redefinesWith rdf:resource="#redef.9.3.2_4ghz" />
  </TestResult>
  <TestResult rdf:about="#tr.9.eight.core.old_trd">
    <valid>alert</valid>
    <redef:redefinesWith rdf:resource="#redef.9.10.alert" />
    <redef:redefinesWith rdf:resource="#redef.9.4.1gb" />
    <redef:redefinesWith rdf:resource="#redef.9.3.2_4ghz" />
  </TestResult>
  <TestResult rdf:about="#tr.9.eight.pro">
    <valid>pass</valid>
    <redef:redefinesWith rdf:resource="#redef.9.10.vistasp0" />
    <redef:redefinesWith rdf:resource="#redef.9.4.1gb" />
    <redef:redefinesWith rdf:resource="#redef.9.3.2_4ghz" />
  </TestResult>
  <TestResult rdf:about="#tr.9.eight.pro.old_trd">
    <valid>alert</valid>
    <redef:redefinesWith rdf:resource="#redef.9.10.alert" />
    <redef:redefinesWith rdf:resource="#redef.9.4.1gb" />
    <redef:redefinesWith rdf:resource="#redef.9.3.2_4ghz" />
  </TestResult>
  <TestResult rdf:about="#tr.9.eight.enterprise">
    <valid>pass</valid>
    <redef:redefinesWith rdf:resource="#redef.9.10.vistasp0" />
    <redef:redefinesWith rdf:resource="#redef.9.4.1gb" />
    <redef:redefinesWith rdf:resource="#redef.9.3.2_4ghz" />
  </TestResult>
  <TestResult rdf:about="#tr.9.eight.enterprise.old_trd">
    <valid>alert</valid>
    <redef:redefinesWith rdf:resource="#redef.9.10.alert" />
    <redef:redefinesWith rdf:resource="#redef.9.4.1gb" />
    <redef:redefinesWith rdf:resource="#redef.9.3.2_4ghz" />
  </TestResult>
  <!-- ***** Windows Server 2012 ***** -->
  <TestResult rdf:about="#tr.9.2012">
    <valid>fail</valid>
    <redef:redefinesWith rdf:resource="#redef.9.10.fail" />
    <redef:redefinesWith rdf:resource="#redef.9.4.1gb" />
    <redef:redefinesWith rdf:resource="#redef.9.3.2_4ghz" />
  </TestResult>
  <!-- ***** Unknown ***** -->
  <TestResult rdf:about="#tr.9.unknown">
    <valid>alert</valid>
    <redef:redefinesWith rdf:resource="#redef.9.10.alert" />
    <redef:redefinesWith rdf:resource="#redef.9.4.1gb" />
    <redef:redefinesWith rdf:resource="#redef.9.3.2_4ghz" />
    <!-- For testing purposes...
		<redef:redefinesWith rdf:resource="#redef.9.10.unknown"/>		
		<redef:redefinesWith rdf:resource="#redef.9.4.unknown"/>
		<redef:redefinesWith rdf:resource="#redef.9.3.unknown"/>
		-->
  </TestResult>
  <!-- For testing purposes...
	
	<NaturalRedefinition rdf:ID="redef.9.10.unknown">
		<redef:overrides rdf:resource="#test.10"/>
		<rfs:referenceValue>10</rfs:referenceValue>
	</NaturalRedefinition>	
	
	<NaturalRedefinition rdf:ID="redef.9.4.unknown">
		<redef:overrides rdf:resource="#test.4"/>
		<rfs:referenceValue rdf:datatype="http://www.w3.org/2001/XMLSchema#decimal">17179869184</rfs:referenceValue> 16GB
	</NaturalRedefinition>
	
	<NaturalRedefinition rdf:ID="redef.9.3.unknown">
		<redef:overrides rdf:resource="#test.3"/>
		<rfs:referenceValue rdf:datatype="http://www.w3.org/2001/XMLSchema#decimal">4000</rfs:referenceValue> 4GHz
	</NaturalRedefinition>
	
	-->
  <!-- Test 10 redefs -->
  <NaturalRedefinition rdf:about="#redef.9.10.fail">
    <redef:overrides rdf:resource="#test.10" />
    <rfs:referenceValue>fail</rfs:referenceValue>
  </NaturalRedefinition>
  <NaturalRedefinition rdf:about="#redef.9.10.alert">
    <redef:overrides rdf:resource="#test.10" />
    <rfs:referenceValue>alert</rfs:referenceValue>
  </NaturalRedefinition>
  <NaturalRedefinition rdf:about="#redef.9.10.xp">
    <redef:overrides rdf:resource="#test.10" />
    <rfs:referenceValue>2</rfs:referenceValue>
  </NaturalRedefinition>
  <NaturalRedefinition rdf:about="#redef.9.10.xp64">
    <redef:overrides rdf:resource="#test.10" />
    <rfs:referenceValue>2</rfs:referenceValue>
  </NaturalRedefinition>
  <NaturalRedefinition rdf:about="#redef.9.10.2003sp1">
    <redef:overrides rdf:resource="#test.10" />
    <rfs:referenceValue>1</rfs:referenceValue>
  </NaturalRedefinition>
  <NaturalRedefinition rdf:about="#redef.9.10.vistasp0">
    <redef:overrides rdf:resource="#test.10" />
    <rfs:referenceValue>0</rfs:referenceValue>
  </NaturalRedefinition>
  <NaturalRedefinition rdf:about="#redef.9.10.vistasp1">
    <redef:overrides rdf:resource="#test.10" />
    <rfs:referenceValue>1</rfs:referenceValue>
  </NaturalRedefinition>
  <!-- Test 4 redefs -->
  <NaturalRedefinition rdf:about="#redef.9.4.512mb">
    <redef:overrides rdf:resource="#test.4" />
    <rfs:referenceValue rdf:datatype="http://www.w3.org/2001/XMLSchema#decimal">536870912</rfs:referenceValue>
  </NaturalRedefinition>
  <NaturalRedefinition rdf:about="#redef.9.4.1gb">
    <redef:overrides rdf:resource="#test.4" />
    <rfs:referenceValue rdf:datatype="http://www.w3.org/2001/XMLSchema#decimal">1073741824</rfs:referenceValue>
  </NaturalRedefinition>
  <!-- Test 3 redefs -->
  <NaturalRedefinition rdf:about="#redef.9.3.800mhz">
    <redef:overrides rdf:resource="#test.3" />
    <rfs:referenceValue rdf:datatype="http://www.w3.org/2001/XMLSchema#decimal">800</rfs:referenceValue>
  </NaturalRedefinition>
  <NaturalRedefinition rdf:about="#redef.9.3.1000mhz">
    <redef:overrides rdf:resource="#test.3" />
    <rfs:referenceValue rdf:datatype="http://www.w3.org/2001/XMLSchema#decimal">1000</rfs:referenceValue>
  </NaturalRedefinition>
  <NaturalRedefinition rdf:about="#redef.9.3.2ghz">
    <redef:overrides rdf:resource="#test.3" />
    <rfs:referenceValue rdf:datatype="http://www.w3.org/2001/XMLSchema#decimal">2000</rfs:referenceValue>
  </NaturalRedefinition>
  <NaturalRedefinition rdf:about="#redef.9.3.2_4ghz">
    <redef:overrides rdf:resource="#test.3" />
    <rfs:referenceValue rdf:datatype="http://www.w3.org/2001/XMLSchema#decimal">2400</rfs:referenceValue>
  </NaturalRedefinition>
  <NaturalRedefinition rdf:about="#redef.9.3.3ghz">
    <redef:overrides rdf:resource="#test.3" />
    <rfs:referenceValue rdf:datatype="http://www.w3.org/2001/XMLSchema#decimal">3000</rfs:referenceValue>
  </NaturalRedefinition>
  <Test rdf:about="#test.9">
    <object>cim_operatingsystem.version</object>
    <isContainedBy rdf:resource="#group.prerequisites.software" />
    <priority>0.1000</priority>
    <dc:title xml:lang="en">Operating System:</dc:title>
    <dc:description xml:lang="en">Test implemented in javascript. It reads the Win32_OperatingSystem.Version WMI property. This is sufficient to determine whether the OS version is Win2K, WinXP, Win2003, or Vista. To distinguish XP Pro and XP Home we check the Win32_OperatingSystem.SuiteMask. To distinguish the different version of Vista available we read the Win32_OperatingSystem.OperatingSystemSKU WMI property. Validation logic is product specific.</dc:description>
    <stdimpl:javascript>
      try
      {
      var services = GetObject("winmgmts:{impersonationLevel=impersonate}!\\\\.\\root\\cimv2");
      } catch(e)
      {
      throw new RSTM_ScriptException("error.business.service.unreachable");
      }

      var supportedOSList;
      var PRODUCT_VERSION_EIKON_3_3 = "8.3";
      var isEikon33OrNewer = !(IsProductVersionOlderThan(PRODUCT_VERSION_EIKON_3_3));
      if (isEikon33OrNewer)
      {
      supportedOSList = "Windows XP Professional (32-bit), Windows Vista (Business, Enterprise, Ultimate), Windows 7 (Home Premium, Professional, Enterprise, Ultimate), Windows 8, Windows Server 2003, Windows Server 2008 R2 (64-bit).";
      }
      else
      {
      supportedOSList = "Windows XP Professional (32-bit), Windows Vista (Business, Enterprise, Ultimate), Windows 7 (Home Premium, Professional, Enterprise, Ultimate), Windows Server 2003, Windows Server 2008 R2 (64-bit).";
      }
      testResult.setProperty("supportedOSList", supportedOSList, "");


      var bits;
      var qtest = services.ExecQuery("SELECT AddressWidth FROM Win32_Processor");

      for ( var enumItems = new Enumerator(qtest); !enumItems.atEnd(); enumItems.moveNext() )
      {
      var objItem		= enumItems.item();
      bits 		= objItem.AddressWidth;
      }

      /* 64-bit ? */
      testResult.setProperty("bit",bits,"");


      var q = services.ExecQuery("SELECT Version FROM Win32_OperatingSystem");
      if (!q) throw new RSTM_ScriptException("error.business.service.unreachable");

      var osVersion;
      for ( var enumItems = new Enumerator(q); !enumItems.atEnd(); enumItems.moveNext() )
      {
      var objItem		= enumItems.item();
      osVersion		= objItem.Version;
      }

      // DEBUG
      // osVersion = "9.99"
      // osVersion = "5.0"
      // DEBUG

      // 2000
      if (osVersion.substr(0,3) == "5.0")
      {
      osVersion = "2000";
      }

      // XP
      if (osVersion.substr(0,3) == "5.1")
      {
      osVersion = "XP";

      q = services.ExecQuery("SELECT SuiteMask FROM Win32_OperatingSystem");

      for ( var enumItems = new Enumerator(q); !enumItems.atEnd(); enumItems.moveNext() )
      {
      var objItem		= enumItems.item();
      var osSuiteMask	= objItem.SuiteMask;
      if (osSuiteMask &amp; 0x200) osVersion = "XP_Home";
      }

      // find version SP
      q = services.ExecQuery("SELECT ServicePackMajorVersion FROM Win32_OperatingSystem");
      var osServicePackMajorVersion;
      for ( var enumItems = new Enumerator(q); !enumItems.atEnd(); enumItems.moveNext() )
      {
      var objItem		= enumItems.item();
      osServicePackMajorVersion	= objItem.ServicePackMajorVersion;

      if (osServicePackMajorVersion == 2)
      {
      try
      {
      // if SP 2, find hot fix KB891117
      var WshShell = new ActiveXObject( "WScript.Shell" );
      var hotFixKey = WshShell.RegRead("HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\KB891117\\DisplayVersion");
      osVersion = osVersion + "KB891117";
      }
      catch (e)
      {
      osVersion = osVersion;
      }
      }
      }
      }

      // 2003
      if (osVersion.substr(0,3) == "5.2")
      {
      osVersion = "Server2003";

      q = services.ExecQuery("SELECT Caption FROM Win32_OperatingSystem");

      for ( var enumItems = new Enumerator(q); !enumItems.atEnd(); enumItems.moveNext() )
      {
      var objItem		= enumItems.item();
      var osName	= objItem.Caption;
      if (osName=="Microsoft(R) Windows(R) XP Professional x64 Edition")
      osVersion = "XP";
      }

      /* true value "Microsoft(R) Windows(R) XP Professional x64 Edition" */
      /* for debugging purposes "Microsoft Windows XP Professional" */

      if( osVersion == "Server2003" )
      {
      if( bits == "32" )
      {
      try
      {
      // find hot fix KB955536
      var WshShell = new ActiveXObject( "WScript.Shell" );
      var hotFixKey = WshShell.RegRead("HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\KB955536\\DisplayVersion");
      osVersion = osVersion + "_KB955536";
      }
      catch (e){}
      }
      else if ( bits == "64" )
      {
      try
      {
      // find hot fix KB955536-v2 (In windows 2003 x64, this hot fix has -v2 appended at the end of hotfix id)
      // also have to use the API from RDMC to query the registrykey in 64-bit context instead of WScript.Shell
      var hotFixKey = RDMC.RDMCLib.Registry.QueryValueEx("HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\KB955536-v2\\", "DisplayVersion", true);
      osVersion = osVersion + "_KB955536";
      }
      catch(e){}
      }
      }
      }

      /* NOTE : See http://msdn.microsoft.com/en-us/library/ms724358(VS.85).aspx for details on SKU codes */

      // Windows Vista and Server 2008
      if( osVersion.substr(0,3) == "6.0" )
      {
      osVersion = "Vista_UnknownEdition";
      q = services.ExecQuery("SELECT OperatingSystemSKU FROM Win32_OperatingSystem");

      for ( var enumItems = new Enumerator(q); !enumItems.atEnd(); enumItems.moveNext() )
      {
      var objItem		= enumItems.item();
      var osSKU    	= objItem.OperatingSystemSKU;
      switch(osSKU)
      {
      case 1:		osVersion = "Vista_Ultimate";					break;
      case 2:		osVersion = "Vista_HomeBasic";					break;
      case 3:		osVersion = "Vista_HomeBasicPremium";			break;
      case 4:		osVersion = "Vista_EnterpriseEdition";			break;
      case 5:		osVersion = "Vista_HomeBasicN";					break;
      case 6:		osVersion = "Vista_Business";					break;
      case 7:		osVersion = "2008_StandardServer";				break;
      case 8:		osVersion = "2008_DatacenterServer";			break;
      case 9:		osVersion = "2008_SmallBusinessServer";			break;
      case 10:	osVersion = "2008_EnterpriseServer";			break;
      case 11:	osVersion = "Vista_Starter";					break;
      case 12:	osVersion = "2008_DatacenterServerCore";		break;
      case 13:	osVersion = "2008_StandardServerCore";			break;
      case 14:	osVersion = "2008_EnterpriseServerCore";		break;
      case 15:	osVersion = "2008_EnterpriseServerItanium";		break;
      case 16:	osVersion = "Vista_BusinessN";					break;
      case 17:	osVersion = "2008_WebServer";					break;
      case 18:	osVersion = "2008_ClusterServer";				break;
      case 19:	osVersion = "2008_HomeServer";					break;
      case 20:	osVersion = "2008_StorageExpressServer";		break;
      case 21:	osVersion = "2008_StorageStandardServer";		break;
      case 22:	osVersion = "2008_StorageWorkgroupServer";		break;
      case 23:	osVersion = "2008_StorageEnterpriseServer";		break;
      case 24:	osVersion = "2008_SmallBusinessServer";			break;
      case 25:	osVersion = "2008_SmallBusinessServerPremium";	break;
      }
      }
      }

      // Windows 7 and Server 2008 R2
      if (osVersion.substr(0,3) == "6.1")
      {
      osVersion = "Seven_UnknownEdition";
      q = services.ExecQuery("SELECT OperatingSystemSKU FROM Win32_OperatingSystem");

      for ( var enumItems = new Enumerator(q); !enumItems.atEnd(); enumItems.moveNext() )
      {
      var objItem		= enumItems.item();
      var osSKU    	= objItem.OperatingSystemSKU;
      switch(osSKU)
      {
      case 1:
      osVersion = "Seven_Ultimate"; /* Ultimate */
      break;
      case 2:
      osVersion = "Seven_HomeBasic";
      break;
      case 3:
      if (bits == "32")
      osVersion = "Seven_HomeBasicPremium";
      else
      osVersion = "Seven_HomeBasicPremium64";
      break;
      case 4:
      osVersion = "Seven_Enterprise"; /* Enterprise */
      break;
      case 5:
      osVersion = "Seven_HomeBasicN";
      break;
      /*					case 6:
      osVersion = "Seven_Business";
      break; */
      case 7:
      osVersion = "2008R2_StandardServer";
      break;
      case 8:
      osVersion = "2008R2_DatacenterServer";
      break;
      case 9:
      osVersion = "2008R2_SmallBusinessServer";
      break;
      case 10:
      osVersion = "2008R2_EnterpriseServer";
      break;
      case 11:
      osVersion = "Seven_Starter";
      break;
      case 12:
      osVersion = "2008R2_DatacenterServerCore";
      break;
      case 13:
      osVersion = "2008R2_StandardServerCore";
      break;
      case 14:
      osVersion = "2008R2_EnterpriseServerCore";
      break;
      case 15:
      osVersion = "2008R2_EnterpriseServerItanium";
      break;
      /*					case 16:
      osVersion = "Seven_BusinessN";
      break; */
      case 17:
      osVersion = "2008R2_WebServer";
      break;
      case 18:
      osVersion = "2008R2_ClusterServer";
      break;
      case 19:
      osVersion = "2008R2_HomeServer";
      break;
      case 20:
      osVersion = "2008R2_StorageExpressServer";
      break;
      case 21:
      osVersion = "2008R2_StorageStandardServer";
      break;
      case 22:
      osVersion = "2008R2_StorageWorkgroupServer";
      break;
      case 23:
      osVersion = "2008R2_StorageEnterpriseServer";
      break;
      case 24:
      osVersion = "2008R2_SmallBusinessServer";
      break;
      case 25:
      osVersion = "2008R2_SmallBusinessServerPremium";
      break;
      case 27:
      osVersion = "Seven_Enterprise"; /* Enterprise N */
      break;
      case 28:
      osVersion = "Seven_Ultimate"; /* Ultimate N */
      break;
      case 48:
      osVersion = "Seven_Pro"; /* Professional */
      break;
      case 49:
      osVersion = "Seven_Pro"; /* Professional N */
      break;
      case 69:
      osVersion = "Seven_Pro"; /* Professional E */
      break;
      case 70:
      osVersion = "Seven_Enterprise"; /* Enterprise E */
      break;
      case 71:
      osVersion = "Seven_Ultimate"; /* Ultimate E */
      break;
      }
      }
      }

      // Windows 8
      if (osVersion.substr(0,3) == "6.2")
      {
      Logger.debug("Found Windows 8 or Windows Server 2012.");
      osVersion = "Eight_UnknownEdition";
      q = services.ExecQuery("SELECT OperatingSystemSKU FROM Win32_OperatingSystem");

      for (var enumItems = new Enumerator(q); !enumItems.atEnd(); enumItems.moveNext())
      {
      var objItem = enumItems.item();
      var osSKU = objItem.OperatingSystemSKU;
      Logger.debug("osSKU = [" + osSKU + "]");
      switch (osSKU)
      {
      case 4: // Enterprise
      case 27: // Enterprise N
      osVersion = "Eight_Enterprise";
      break;

      case 48: // Pro
      case 49: // Pro N
      osVersion = "Eight_Pro";
      break;

      case 101: // Core
      case 98: // Core N
      osVersion = "Eight_Core"; // Windows 8 (no edition)
      break;

      default:
      testResult.setProperty("osSKU", osSKU, "");

      q = services.ExecQuery("SELECT Caption FROM Win32_OperatingSystem");
      for (var captionEnumItems = new Enumerator(q); !captionEnumItems.atEnd(); captionEnumItems.moveNext())
      {
      var captionObjItem	= captionEnumItems.item();
      var caption    		= captionObjItem.Caption;
      Logger.debug("caption = [" + caption + "]");
      testResult.setProperty("caption", caption.replace("Microsoft ",""), "");

      if (caption.indexOf("2012") &gt;= 0)
      {
      osVersion = "2012_UnknownEdition";
      }
      }
      break;
      }

      if (osVersion.indexOf("Eight_") &gt;= 0)
      {
      Logger.debug("Identified as Windows 8.");

      if (!isEikon33OrNewer)
      {
      Logger.info("Product version is too old. Windows 8 is supported from Eikon 3.3 onwards.");
      osVersion += "_OldTRD";
      }
      }
      else
      {
      Logger.debug("Identified as Windows Server 2012.");
      }
      }
      }

      testResult.setRawResult(osVersion);
      return;


      // ==================== Functions ====================

      function IsProductVersionOlderThan(version)
      {
      Logger.debug("IsProductVersionOlderThan(" + version + ")");
      var isProductVersionOlderThan = true;
      try
      {
      var productVersion = GetProductVersion();
      Logger.debug("Product version = [" + productVersion + "]");
      if (productVersion != "")
      {
      isProductVersionOlderThan = (RDMC.utilities.RDMCCompareVersion(version, productVersion) &gt; 0);
      }
      }
      catch (e) {}
      Logger.debug("IsProductVersionOlderThan(" + version + ") = " + isProductVersionOlderThan);
      return isProductVersionOlderThan;
      }

      function GetProductVersion()
      {
      var version = "";
      Logger.debug("Getting target product version...");
      version = GetTargetProductVersion();
      if (version == "")
      {
      Logger.debug("Getting installed product version...");
      version = GetInstalledProductVersion();
      }
      Logger.debug("GetProductVersion() = [" + version + "]");
      return version;
      }

      function GetTargetProductVersion()
      {
      var version = "";
      try
      {
      version = RDMC.versionInfo.TRD6.m_targetVersion;
      }
      catch (e) {}
      Logger.debug("GetTargetProductVersion() = [" + version + "]");
      return version;
      }

      function GetInstalledProductVersion()
      {
      var version = "";
      try
      {
      version = RDMC.versionInfo.TRD6.m_productVersion;
      }
      catch (e) {}
      Logger.debug("GetInstalledProductVersion() = [" + version + "]");
      return version;
      }
    </stdimpl:javascript>
    <!-- ****** Windows 2000 results ****** -->
    <testResult>
      <TestResult rdf:about="#tr.9.win2k">
        <value>2000</value>
        <outcome>
          <TestOutcome rdf:about="#to.9.win2k">
            <run:description xml:lang="en">Windows 2000 %(runPropertyURI='bit')-bit.</run:description>
          </TestOutcome>
        </outcome>
        <redef:redefinesWith rdf:resource="#redef.OS.2000" />
      </TestResult>
    </testResult>
    <!-- ****** Windows XP results ****** -->
    <testResult>
      <TestResult rdf:about="#tr.9.xppro">
        <value>XP</value>
        <outcome>
          <TestOutcome rdf:about="#to.9.xppro">
            <run:description xml:lang="en">Windows XP Professional %(runPropertyURI='bit')-bit.</run:description>
          </TestOutcome>
        </outcome>
        <redef:redefinesWith rdf:resource="#redef.OS.XP" />
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.9.xpproKB891117">
        <value>XPKB891117</value>
        <outcome>
          <TestOutcome rdf:about="#to.9.xppro">
            <run:description xml:lang="en">Windows XP Professional %(runPropertyURI='bit')-bit.</run:description>
          </TestOutcome>
        </outcome>
        <redef:redefinesWith rdf:resource="#redef.Hotfix.KB891117" />
        <redef:redefinesWith rdf:resource="#redef.OS.XP" />
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.9.xphome">
        <value>XP_Home</value>
        <outcome>
          <TestOutcome rdf:about="#to.9.xphome">
            <run:description xml:lang="en">Windows XP Home %(runPropertyURI='bit')-bit.</run:description>
          </TestOutcome>
        </outcome>
        <redef:redefinesWith rdf:resource="#redef.OS.XP" />
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.9.xphomeKB891117">
        <value>XP_HomeKB891117</value>
        <outcome>
          <TestOutcome rdf:about="#to.9.xphome">
            <run:description xml:lang="en">Windows XP Home %(runPropertyURI='bit')-bit.</run:description>
          </TestOutcome>
        </outcome>
        <redef:redefinesWith rdf:resource="#redef.Hotfix.KB891117" />
        <redef:redefinesWith rdf:resource="#redef.OS.XP" />
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.9.xp64">
        <value>XP</value>
        <outcome>
          <TestOutcome rdf:about="#to.9.xp64">
            <run:description xml:lang="en">Windows XP Professional x64.</run:description>
          </TestOutcome>
        </outcome>
        <redef:redefinesWith rdf:resource="#redef.OS.XP" />
      </TestResult>
    </testResult>
    <!-- ****** Windows Server 2003 results ****** -->
    <testResult>
      <TestResult rdf:about="#tr.9.2003_kb955536">
        <value>Server2003_KB955536</value>
        <outcome>
          <TestOutcome rdf:about="#to.9.2003_kb955536">
            <run:description xml:lang="en">Windows Server 2003 %(runPropertyURI='bit')-bit.</run:description>
          </TestOutcome>
        </outcome>
        <redef:redefinesWith rdf:resource="#redef.Hotfix.KB955536" />
        <redef:redefinesWith rdf:resource="#redef.OS.2003" />
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.9.2003">
        <value>Server2003</value>
        <outcome>
          <TestOutcome rdf:about="#to.9.2003">
            <run:description xml:lang="en">Windows Server 2003 %(runPropertyURI='bit')-bit.</run:description>
          </TestOutcome>
        </outcome>
        <redef:redefinesWith rdf:resource="#redef.OS.2003" />
      </TestResult>
    </testResult>
    <!-- ****** Windows Vista / Server 2008 results ****** -->
    <testResult>
      <TestResult rdf:about="#tr.9.vista">
        <value>Vista_.*</value>
        <outcome>
          <TestOutcome rdf:about="#to.9.vista">
            <run:description xml:lang="en">Windows Vista %(runPropertyURI='bit')-bit.</run:description>
          </TestOutcome>
        </outcome>
        <redef:redefinesWith rdf:resource="#redef.OS.VISTA" />
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.9.vista.ultimate">
        <value>Vista_Ultimate</value>
        <outcome>
          <TestOutcome rdf:about="#to.9.vista.ultimate">
            <run:description xml:lang="en">Windows Vista Ultimate %(runPropertyURI='bit')-bit.</run:description>
          </TestOutcome>
        </outcome>
        <redef:redefinesWith rdf:resource="#redef.OS.VISTA" />
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.9.vista.homebasic">
        <value>Vista_HomeBasic</value>
        <outcome>
          <TestOutcome rdf:about="#to.9.vista.homebasic">
            <run:description xml:lang="en">Windows Vista Home Basic %(runPropertyURI='bit')-bit.</run:description>
          </TestOutcome>
        </outcome>
        <redef:redefinesWith rdf:resource="#redef.OS.VISTA" />
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.9.vista.homebasicpremium">
        <value>Vista_HomeBasicPremium</value>
        <outcome>
          <TestOutcome rdf:about="#to.9.vista.homebasicpremium">
            <run:description xml:lang="en">Windows Vista Home Basic Premium %(runPropertyURI='bit')-bit.</run:description>
          </TestOutcome>
        </outcome>
        <redef:redefinesWith rdf:resource="#redef.OS.VISTA" />
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.9.vista.enterprise">
        <value>Vista_EnterpriseEdition</value>
        <outcome>
          <TestOutcome rdf:about="#to.9.vista.enterprise">
            <run:description xml:lang="en">Windows Vista Enterprise %(runPropertyURI='bit')-bit.</run:description>
          </TestOutcome>
        </outcome>
        <redef:redefinesWith rdf:resource="#redef.OS.VISTA" />
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.9.vista.homebasicN">
        <value>Vista_HomeBasicN</value>
        <outcome>
          <TestOutcome rdf:about="#to.9.vista.homebasicN">
            <run:description xml:lang="en">Windows Vista Home Basic N %(runPropertyURI='bit')-bit.</run:description>
          </TestOutcome>
        </outcome>
        <redef:redefinesWith rdf:resource="#redef.OS.VISTA" />
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.9.vista.business">
        <value>Vista_Business</value>
        <outcome>
          <TestOutcome rdf:about="#to.9.vista.business">
            <run:description xml:lang="en">Windows Vista Business %(runPropertyURI='bit')-bit.</run:description>
          </TestOutcome>
        </outcome>
        <redef:redefinesWith rdf:resource="#redef.OS.VISTA" />
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.9.2008.standardserver">
        <value>2008_StandardServer</value>
        <outcome>
          <TestOutcome rdf:about="#to.9.2008.standardserver">
            <run:description xml:lang="en">Windows Server 2008 %(runPropertyURI='bit')-bit.</run:description>
          </TestOutcome>
        </outcome>
        <redef:redefinesWith rdf:resource="#redef.OS.2008" />
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.9.2008.datacenterserver">
        <value>2008_DatacenterServer</value>
        <outcome>
          <TestOutcome rdf:about="#to.9.2008.datacenterserver">
            <run:description xml:lang="en">Windows Server 2008 %(runPropertyURI='bit')-bit.</run:description>
          </TestOutcome>
        </outcome>
        <redef:redefinesWith rdf:resource="#redef.OS.2008" />
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.9.2008.enterpriseserver">
        <value>2008_EnterpriseServer</value>
        <outcome>
          <TestOutcome rdf:about="#to.9.2008.enterpriseserver">
            <run:description xml:lang="en">Windows Server 2008 %(runPropertyURI='bit')-bit.</run:description>
          </TestOutcome>
        </outcome>
        <redef:redefinesWith rdf:resource="#redef.OS.2008" />
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.9.vista.starter">
        <value>Vista_Starter</value>
        <outcome>
          <TestOutcome rdf:about="#to.9.vista.starter">
            <run:description xml:lang="en">Windows Vista Starter %(runPropertyURI='bit')-bit.</run:description>
          </TestOutcome>
        </outcome>
        <redef:redefinesWith rdf:resource="#redef.OS.VISTA" />
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.9.2008.datacenterservercore">
        <value>2008_DatacenterServerCore</value>
        <outcome>
          <TestOutcome rdf:about="#to.9.2008.datacenterservercore">
            <run:description xml:lang="en">Windows Server 2008 %(runPropertyURI='bit')-bit.</run:description>
          </TestOutcome>
        </outcome>
        <redef:redefinesWith rdf:resource="#redef.OS.2008" />
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.9.2008.standardservercore">
        <value>2008_StandardServerCore</value>
        <outcome>
          <TestOutcome rdf:about="#to.9.2008.standardservercore">
            <run:description xml:lang="en">Windows Server 2008 %(runPropertyURI='bit')-bit.</run:description>
          </TestOutcome>
        </outcome>
        <redef:redefinesWith rdf:resource="#redef.OS.2008" />
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.9.2008.enterpriseservercore">
        <value>2008_EnterpriseServerCore</value>
        <outcome>
          <TestOutcome rdf:about="#to.9.2008.enterpriseservercore">
            <run:description xml:lang="en">Windows Server 2008 %(runPropertyURI='bit')-bit.</run:description>
          </TestOutcome>
        </outcome>
        <redef:redefinesWith rdf:resource="#redef.OS.2008" />
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.9.vista.businessN">
        <value>Vista_BusinessN</value>
        <outcome>
          <TestOutcome rdf:about="#to.9.vista.businessN">
            <run:description xml:lang="en">Windows Vista Business N %(runPropertyURI='bit')-bit.</run:description>
          </TestOutcome>
        </outcome>
        <redef:redefinesWith rdf:resource="#redef.OS.VISTA" />
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.9.2008.webserver">
        <value>2008_WebServer</value>
        <outcome>
          <TestOutcome rdf:about="#to.9.2008.webserver">
            <run:description xml:lang="en">Windows Server 2008 %(runPropertyURI='bit')-bit.</run:description>
          </TestOutcome>
        </outcome>
        <redef:redefinesWith rdf:resource="#redef.OS.2008" />
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.9.2008.clusterserver">
        <value>2008_ClusterServer</value>
        <outcome>
          <TestOutcome rdf:about="#to.9.2008.clusterserver">
            <run:description xml:lang="en">Windows Server 2008 %(runPropertyURI='bit')-bit.</run:description>
          </TestOutcome>
        </outcome>
        <redef:redefinesWith rdf:resource="#redef.OS.2008" />
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.9.2008.homeserver">
        <value>2008_HomeServer</value>
        <outcome>
          <TestOutcome rdf:about="#to.9.2008.homeserver">
            <run:description xml:lang="en">Windows Server 2008 %(runPropertyURI='bit')-bit.</run:description>
          </TestOutcome>
        </outcome>
        <redef:redefinesWith rdf:resource="#redef.OS.2008" />
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.9.2008.storageexpressserver">
        <value>2008_StorageExpressServer</value>
        <outcome>
          <TestOutcome rdf:about="#to.9.2008.storageexpressserver">
            <run:description xml:lang="en">Windows Server 2008 %(runPropertyURI='bit')-bit.</run:description>
          </TestOutcome>
        </outcome>
        <redef:redefinesWith rdf:resource="#redef.OS.2008" />
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.9.2008.storagestandardserver">
        <value>2008_StorageStandardServer</value>
        <outcome>
          <TestOutcome rdf:about="#to.9.2008.storagestandardserver">
            <run:description xml:lang="en">Windows Server 2008 %(runPropertyURI='bit')-bit.</run:description>
          </TestOutcome>
        </outcome>
        <redef:redefinesWith rdf:resource="#redef.OS.2008" />
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.9.2008.storageworkgroupserver">
        <value>2008_StorageWorkgroupServer</value>
        <outcome>
          <TestOutcome rdf:about="#to.9.2008.storageworkgroupserver">
            <run:description xml:lang="en">Windows Server 2008 %(runPropertyURI='bit')-bit.</run:description>
          </TestOutcome>
        </outcome>
        <redef:redefinesWith rdf:resource="#redef.OS.2008" />
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.9.2008.storageenterpriseserver">
        <value>2008_StorageEnterpriseServer</value>
        <outcome>
          <TestOutcome rdf:about="#to.9.2008.storageenterpriseserver">
            <run:description xml:lang="en">Windows Server 2008 %(runPropertyURI='bit')-bit.</run:description>
          </TestOutcome>
        </outcome>
        <redef:redefinesWith rdf:resource="#redef.OS.2008" />
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.9.2008.smallbusinessserver">
        <value>2008_SmallBusinessServer</value>
        <outcome>
          <TestOutcome rdf:about="#to.9.2008.smallbusinessserver">
            <run:description xml:lang="en">Windows Server 2008 %(runPropertyURI='bit')-bit.</run:description>
          </TestOutcome>
        </outcome>
        <redef:redefinesWith rdf:resource="#redef.OS.2008" />
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.9.2008.smallbusinessserverpremium">
        <value>2008_SmallBusinessServerPremium</value>
        <outcome>
          <TestOutcome rdf:about="#to.9.2008.smallbusinessserverpremium">
            <run:description xml:lang="en">Windows Server 2008 %(runPropertyURI='bit')-bit.</run:description>
          </TestOutcome>
        </outcome>
        <redef:redefinesWith rdf:resource="#redef.OS.2008" />
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.9.2008.enterpriseserver.itanium64">
        <value>2008_EnterpriseServerItanium</value>
        <outcome>
          <TestOutcome rdf:about="#to.9.2008.enterpriseserver.itanium64">
            <run:description xml:lang="en">Windows Server 2008 %(runPropertyURI='bit')-bit.</run:description>
          </TestOutcome>
        </outcome>
        <redef:redefinesWith rdf:resource="#redef.OS.2008" />
      </TestResult>
    </testResult>
    <!-- ****** Windows 7 / Server 2008 R2 results ****** -->
    <testResult>
      <TestResult rdf:about="#tr.9.seven">
        <value>Seven_.*</value>
        <outcome>
          <TestOutcome rdf:about="#to.9.seven">
            <run:description xml:lang="en">Windows 7 %(runPropertyURI='bit')-bit.</run:description>
          </TestOutcome>
        </outcome>
        <redef:redefinesWith rdf:resource="#redef.OS.SEVEN" />
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.9.seven.ultimate">
        <value>Seven_Ultimate</value>
        <outcome>
          <TestOutcome rdf:about="#to.9.seven.ultimate">
            <run:description xml:lang="en">Windows 7 Ultimate %(runPropertyURI='bit')-bit.</run:description>
          </TestOutcome>
        </outcome>
        <redef:redefinesWith rdf:resource="#redef.OS.SEVEN" />
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.9.seven.homebasic">
        <value>Seven_HomeBasic</value>
        <outcome>
          <TestOutcome rdf:about="#to.9.seven.homebasic">
            <run:description xml:lang="en">Windows 7 Home Basic %(runPropertyURI='bit')-bit.***</run:description>
          </TestOutcome>
        </outcome>
        <redef:redefinesWith rdf:resource="#redef.OS.SEVEN" />
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.9.seven.homebasicpremium">
        <value>Seven_HomeBasicPremium</value>
        <outcome>
          <TestOutcome rdf:about="#to.9.seven.homebasicpremium">
            <run:description xml:lang="en">Windows 7 Home Premium %(runPropertyURI='bit')-bit</run:description>
          </TestOutcome>
        </outcome>
        <redef:redefinesWith rdf:resource="#redef.OS.SEVEN" />
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.9.seven.homebasicpremium64">
        <value>Seven_HomeBasicPremium64</value>
        <outcome>
          <TestOutcome rdf:about="#to.9.seven.homebasicpremium64">
            <run:description xml:lang="en">Windows 7 Home Premium %(runPropertyURI='bit')-bit.</run:description>
          </TestOutcome>
        </outcome>
        <redef:redefinesWith rdf:resource="#redef.OS.SEVEN" />
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.9.seven.enterprise">
        <value>Seven_Enterprise</value>
        <outcome>
          <TestOutcome rdf:about="#to.9.seven.enterprise">
            <run:description xml:lang="en">Windows 7 Enterprise %(runPropertyURI='bit')-bit.</run:description>
          </TestOutcome>
        </outcome>
        <redef:redefinesWith rdf:resource="#redef.OS.SEVEN" />
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.9.seven.homebasicN">
        <value>Seven_HomeBasicN</value>
        <outcome>
          <TestOutcome rdf:about="#to.9.seven.homebasicN">
            <run:description xml:lang="en">Windows 7 Home Basic N %(runPropertyURI='bit')-bit.</run:description>
          </TestOutcome>
        </outcome>
        <redef:redefinesWith rdf:resource="#redef.OS.SEVEN" />
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.9.seven.pro">
        <value>Seven_Pro</value>
        <outcome>
          <TestOutcome rdf:about="#to.9.seven.pro">
            <run:description xml:lang="en">Windows 7 Professional %(runPropertyURI='bit')-bit.</run:description>
          </TestOutcome>
        </outcome>
        <redef:redefinesWith rdf:resource="#redef.OS.SEVEN" />
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.9.2008r2.standardserver">
        <value>2008R2_StandardServer</value>
        <outcome>
          <TestOutcome rdf:about="#to.9.2008r2.standardserver">
            <run:description xml:lang="en">Windows Server 2008 R2 %(runPropertyURI='bit')-bit.</run:description>
          </TestOutcome>
        </outcome>
        <redef:redefinesWith rdf:resource="#redef.OS.2008" />
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.9.2008r2.datacenterserver">
        <value>2008R2_DatacenterServer</value>
        <outcome>
          <TestOutcome rdf:about="#to.9.2008r2.datacenterserver">
            <run:description xml:lang="en">Windows Server 2008 R2 %(runPropertyURI='bit')-bit.</run:description>
          </TestOutcome>
        </outcome>
        <redef:redefinesWith rdf:resource="#redef.OS.2008" />
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.9.2008r2.smallbusinessserver">
        <value>2008R2_SmallBusinessServer</value>
        <outcome>
          <TestOutcome rdf:about="#to.9.2008r2.smallbusinessserver">
            <run:description xml:lang="en">Windows Server 2008 R2 %(runPropertyURI='bit')-bit.</run:description>
          </TestOutcome>
        </outcome>
        <redef:redefinesWith rdf:resource="#redef.OS.2008" />
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.9.2008r2.enterpriseserver">
        <value>2008R2_EnterpriseServer</value>
        <outcome>
          <TestOutcome rdf:about="#to.9.2008r2.enterpriseserver">
            <run:description xml:lang="en">Windows Server 2008 R2 %(runPropertyURI='bit')-bit.</run:description>
          </TestOutcome>
        </outcome>
        <redef:redefinesWith rdf:resource="#redef.OS.2008" />
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.9.seven.starter">
        <value>Seven_Starter</value>
        <outcome>
          <TestOutcome rdf:about="#to.9.seven.starter">
            <run:description xml:lang="en">Windows Vista Starter %(runPropertyURI='bit')-bit.</run:description>
          </TestOutcome>
        </outcome>
        <redef:redefinesWith rdf:resource="#redef.OS.SEVEN" />
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.9.2008r2.datacenterservercore">
        <value>2008R2_DatacenterServerCore</value>
        <outcome>
          <TestOutcome rdf:about="#to.9.2008r2.datacenterservercore">
            <run:description xml:lang="en">Windows Server 2008 R2 %(runPropertyURI='bit')-bit.</run:description>
          </TestOutcome>
        </outcome>
        <redef:redefinesWith rdf:resource="#redef.OS.2008" />
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.9.2008r2.standardservercore">
        <value>2008R2_StandardServerCore</value>
        <outcome>
          <TestOutcome rdf:about="#to.9.2008r2.standardservercore">
            <run:description xml:lang="en">Windows Server 2008 R2 %(runPropertyURI='bit')-bit.</run:description>
          </TestOutcome>
        </outcome>
        <redef:redefinesWith rdf:resource="#redef.OS.2008" />
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.9.2008r2.enterpriseservercore">
        <value>2008R2_EnterpriseServerCore</value>
        <outcome>
          <TestOutcome rdf:about="#to.9.2008r2.enterpriseservercore">
            <run:description xml:lang="en">Windows Server 2008 R2 %(runPropertyURI='bit')-bit.</run:description>
          </TestOutcome>
        </outcome>
        <redef:redefinesWith rdf:resource="#redef.OS.2008" />
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.9.2008r2.webserver">
        <value>2008R2_WebServer</value>
        <outcome>
          <TestOutcome rdf:about="#to.9.2008r2.webserver">
            <run:description xml:lang="en">Windows Server 2008 R2 %(runPropertyURI='bit')-bit.</run:description>
          </TestOutcome>
        </outcome>
        <redef:redefinesWith rdf:resource="#redef.OS.2008" />
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.9.2008r2.clusterserver">
        <value>2008R2_ClusterServer</value>
        <outcome>
          <TestOutcome rdf:about="#to.9.2008r2.clusterserver">
            <run:description xml:lang="en">Windows Server 2008 R2 %(runPropertyURI='bit')-bit.</run:description>
          </TestOutcome>
        </outcome>
        <redef:redefinesWith rdf:resource="#redef.OS.2008" />
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.9.2008r2.homeserver">
        <value>2008R2_HomeServer</value>
        <outcome>
          <TestOutcome rdf:about="#to.9.2008r2.homeserver">
            <run:description xml:lang="en">Windows Server 2008 R2 %(runPropertyURI='bit')-bit.</run:description>
          </TestOutcome>
        </outcome>
        <redef:redefinesWith rdf:resource="#redef.OS.2008" />
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.9.2008r2.storageexpressserver">
        <value>2008R2_StorageExpressServer</value>
        <outcome>
          <TestOutcome rdf:about="#to.9.2008r2.storageexpressserver">
            <run:description xml:lang="en">Windows Server 2008 R2 %(runPropertyURI='bit')-bit.</run:description>
          </TestOutcome>
        </outcome>
        <redef:redefinesWith rdf:resource="#redef.OS.2008" />
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.9.2008r2.storagestandardserver">
        <value>2008R2_StorageStandardServer</value>
        <outcome>
          <TestOutcome rdf:about="#to.9.2008r2.storagestandardserver">
            <run:description xml:lang="en">Windows Server 2008 R2 %(runPropertyURI='bit')-bit.</run:description>
          </TestOutcome>
        </outcome>
        <redef:redefinesWith rdf:resource="#redef.OS.2008" />
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.9.2008r2.storageworkgroupserver">
        <value>2008R2_StorageWorkgroupServer</value>
        <outcome>
          <TestOutcome rdf:about="#to.9.2008r2.storageworkgroupserver">
            <run:description xml:lang="en">Windows Server 2008 R2 %(runPropertyURI='bit')-bit.</run:description>
          </TestOutcome>
        </outcome>
        <redef:redefinesWith rdf:resource="#redef.OS.2008" />
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.9.2008r2.storageenterpriseserver">
        <value>2008R2_StorageEnterpriseServer</value>
        <outcome>
          <TestOutcome rdf:about="#to.9.2008r2.storageenterpriseserver">
            <run:description xml:lang="en">Windows Server 2008 R2 %(runPropertyURI='bit')-bit.</run:description>
          </TestOutcome>
        </outcome>
        <redef:redefinesWith rdf:resource="#redef.OS.2008" />
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.9.2008r2.enterpriseserver.itanium64">
        <value>2008R2_EnterpriseServerItanium</value>
        <outcome>
          <TestOutcome rdf:about="#to.9.2008r2.enterpriseserver.itanium64">
            <run:description xml:lang="en">Windows Server 2008 R2 %(runPropertyURI='bit')-bit.</run:description>
          </TestOutcome>
        </outcome>
        <redef:redefinesWith rdf:resource="#redef.OS.2008" />
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.9.2008r2.smallbusinessserverpremium">
        <value>2008R2_SmallBusinessServerPremium</value>
        <outcome>
          <TestOutcome rdf:about="#to.9.2008r2.smallbusinessserverpremium">
            <run:description xml:lang="en">Windows Server 2008 R2 %(runPropertyURI='bit')-bit.</run:description>
          </TestOutcome>
        </outcome>
        <redef:redefinesWith rdf:resource="#redef.OS.2008" />
      </TestResult>
    </testResult>
    <!-- ****** Windows 8 results ****** -->
    <testResult>
      <TestResult rdf:about="#tr.9.eight">
        <value>Eight_.*</value>
        <outcome rdf:resource="#to.9.eight" />
        <redef:redefinesWith rdf:resource="#redef.OS.EIGHT" />
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.9.eight.old_trd">
        <value>Eight_.*_OldTRD</value>
        <outcome rdf:resource="#to.9.eight" />
        <redef:redefinesWith rdf:resource="#redef.OS.EIGHT" />
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.9.eight.core">
        <value>Eight_Core</value>
        <outcome rdf:resource="#to.9.eight.core" />
        <redef:redefinesWith rdf:resource="#redef.OS.EIGHT" />
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.9.eight.core.old_trd">
        <value>Eight_Core_OldTRD</value>
        <outcome rdf:resource="#to.9.eight.core" />
        <redef:redefinesWith rdf:resource="#redef.OS.EIGHT" />
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.9.eight.pro">
        <value>Eight_Pro</value>
        <outcome rdf:resource="#to.9.eight.pro" />
        <redef:redefinesWith rdf:resource="#redef.OS.EIGHT" />
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.9.eight.pro.old_trd">
        <value>Eight_Pro_OldTRD</value>
        <outcome rdf:resource="#to.9.eight.pro" />
        <redef:redefinesWith rdf:resource="#redef.OS.EIGHT" />
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.9.eight.enterprise">
        <value>Eight_Enterprise</value>
        <outcome rdf:resource="#to.9.eight.enterprise" />
        <redef:redefinesWith rdf:resource="#redef.OS.EIGHT" />
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.9.eight.enterprise.old_trd">
        <value>Eight_Enterprise_OldTRD</value>
        <outcome rdf:resource="#to.9.eight.enterprise" />
        <redef:redefinesWith rdf:resource="#redef.OS.EIGHT" />
      </TestResult>
    </testResult>
    <!-- ****** Windows Server 2012 results ****** -->
    <testResult>
      <TestResult rdf:about="#tr.9.2012">
        <value>2012_.*</value>
        <outcome>
          <TestOutcome rdf:about="#to.9.2012">
            <run:description xml:lang="en">Windows Server 2012 %(runPropertyURI='bit')-bit (SKU=%(runPropertyURI='osSKU'), %(runPropertyURI='caption'))</run:description>
          </TestOutcome>
        </outcome>
        <redef:redefinesWith rdf:resource="#redef.OS.2012" />
      </TestResult>
    </testResult>
    <!-- ****** UNKNOWN OPERATING SYSTEM ****** -->
    <testResult>
      <TestResult rdf:about="#tr.9.unknown">
        <value>*</value>
        <valid>fail</valid>
        <outcome>
          <TestOutcome rdf:about="#to.9.unknown">
            <run:description xml:lang="en">Thomson Reuters is currently validating Thomson Reuters Eikon with Windows Operating System version %(runPropertyURI='value')</run:description>
          </TestOutcome>
        </outcome>
        <redef:redefinesWith rdf:resource="#redef.OS.unknown" />
      </TestResult>
    </testResult>
  </Test>
  <!-- ****** Windows 8 test outcomes ****** -->
  <TestOutcome rdf:about="#to.9.eight">
    <run:description xml:lang="en">Windows 8 %(runPropertyURI='bit')-bit (SKU=%(runPropertyURI='osSKU'), %(runPropertyURI='caption'))</run:description>
  </TestOutcome>
  <TestOutcome rdf:about="#to.9.eight.core">
    <run:description xml:lang="en">Windows 8 %(runPropertyURI='bit')-bit</run:description>
  </TestOutcome>
  <TestOutcome rdf:about="#to.9.eight.pro">
    <run:description xml:lang="en">Windows 8 Pro %(runPropertyURI='bit')-bit</run:description>
  </TestOutcome>
  <TestOutcome rdf:about="#to.9.eight.enterprise">
    <run:description xml:lang="en">Windows 8 Enterprise %(runPropertyURI='bit')-bit</run:description>
  </TestOutcome>
  <Test rdf:about="#test.1">
    <object>Win32_Processor.Description</object>
    <isContainedBy rdf:resource="#group.prerequisites.hardware" />
    <priority>0.1001</priority>
    <dc:title xml:lang="en">CPU Type:</dc:title>
    <dc:description xml:lang="en">Display information provided by the WMI Win32_Processor.Description property.</dc:description>
    <testResult>
      <TestResult rdf:about="#tr.1.unknown">
        <value />
        <valid>warning</valid>
        <outcome>
          <TestOutcome rdf:about="#tr.1.0">
            <run:description xml:lang="en">No CPU type information available.</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.2.default">
        <value>*</value>
        <valid>info</valid>
        <outcome>
          <TestOutcome rdf:about="#tr.1.2">
            <run:description xml:lang="en">%(runPropertyURI='value')</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
  </Test>
  <Test rdf:about="#test.2">
    <object>Win32_Processor.Manufacturer</object>
    <isContainedBy rdf:resource="#group.prerequisites.hardware" />
    <priority>0.1002</priority>
    <dc:title xml:lang="en">CPU Vendor:</dc:title>
    <dc:description xml:lang="en">Display information provided by the WMI Win32_Processor.Manufacturer property.</dc:description>
    <testResult>
      <TestResult rdf:about="#tr.2.unknown">
        <value />
        <valid>warning</valid>
        <outcome>
          <TestOutcome rdf:about="#tr.2.0">
            <run:description xml:lang="en">No CPU vendor information available.</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.2.default">
        <value>*</value>
        <valid>info</valid>
        <outcome>
          <TestOutcome rdf:about="#tr.2.1">
            <run:description xml:lang="en">%(runPropertyURI='value')</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
  </Test>
  <Test rdf:about="#test.3">
    <!-- Header -->
    <object>Win32_Processor.MaxClockSpeed</object>
    <isContainedBy rdf:resource="#group.prerequisites.hardware" />
    <priority>0.1003</priority>
    <dc:title xml:lang="en">CPU Speed:</dc:title>
    <dc:description xml:lang="en">Read the Win32_Processor.MaxClockSpeed WMI property.</dc:description>
    <!-- Validation threshold -->
    <rfs:referenceValue rdf:datatype="http://www.w3.org/2001/XMLSchema#decimal" />
    <!-- Display -->
    <default:recommendation xml:lang="en">Recommended CPU Speed is %(rfsPropertyURI='referenceValue', datatypeURI='?units=MHz,GHz&amp;precision=1')</default:recommendation>
    <default:description xml:lang="en">%(runPropertyURI='value', datatypeURI='?units=MHz,GHz&amp;precision=1')</default:description>
    <!-- Validation Logic -->
    <!--<testResult rdf:resource="#tr.unknown-reference-value" />-->
    <testResult>
      <TestResult rdf:about="#tr.3.cpu_speed_ok">
        <value>&gt;=800</value>
        <valid>info</valid>
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.3.cpu_too_slow">
        <value>*</value>
        <valid>fail</valid>
      </TestResult>
    </testResult>
  </Test>
  <Test rdf:about="#test.48">
    <!-- Header -->
    <object>Reuters_RstTest.name='CPUDESC'.value</object>
    <isContainedBy rdf:resource="#group.prerequisites.hardware" />
    <priority>0.1003</priority>
    <dc:title xml:lang="en">CPU Description:</dc:title>
    <dc:description xml:lang="en">Display CPU description.</dc:description>
    <stdimpl:javascript>
      <![CDATA[
      
      try
		  {
			  var WshShell = new ActiveXObject("WScript.Shell");
		  } catch(e)
		  {
			  testResult.setRawResult("WScriptException");
			  return;
		  }
      
      var strHK_ProcessorType = "HKEY_LOCAL_MACHINE\\HARDWARE\\DESCRIPTION\\System\\CentralProcessor\\0\\ProcessorNameString";
      
      var value = WshShell.RegRead(strHK_ProcessorType);
      
      testResult.setRawResult(value);
      
      return;
      
    	]]>
    </stdimpl:javascript>
    <testResult>
      <TestResult rdf:about="#tr.48.unknown">
        <value>WScriptException</value>
        <valid>warning</valid>
        <outcome>
          <TestOutcome rdf:about="#tr.48.0">
            <run:description xml:lang="en">No CPU description available.</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.48.default">
        <value>*</value>
        <valid>info</valid>
        <outcome>
          <TestOutcome rdf:about="#tr.48.1">
            <run:description xml:lang="en">%(runPropertyURI='value')</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
  </Test>
  <Test rdf:about="#test.4">
    <!-- Header -->
    <object>Reuters_RstTest.name='PhysicalMemory'.value</object>
    <isContainedBy rdf:resource="#group.prerequisites.hardware" />
    <priority>0.1004</priority>
    <dc:title xml:lang="en">Physical Memory:</dc:title>
    <dc:description xml:lang="en">Read the Win32_ComputerSystem.TotalPhysicalMemory WMI property. </dc:description>
    <!-- Validation threshold -->
    <rfs:referenceValue rdf:datatype="http://www.w3.org/2001/XMLSchema#decimal" />
    <!-- Display -->
    <default:recommendation xml:lang="en">Minimum memory: %(rfsPropertyURI='referenceValue', datatypeURI='?units=bytes,KB,MB,GB&amp;unitFactor=1024&amp;precision=1')</default:recommendation>
    <default:description xml:lang="en">%(runPropertyURI='installed', datatypeURI='?units=bytes,KB,MB,GB&amp;unitFactor=1024&amp;precision=1') (usable %(runPropertyURI='usable', datatypeURI='?units=bytes,KB,MB,GB&amp;unitFactor=1024&amp;precision=1'))</default:description>
    <!-- Overrides-->
    <rfs:OS />
    <!--stdimpl:javascript>
			//Logger.Error("Memory: set -1");
			//testResult.setRawResult(-1);
			//testResult.setRawResult(1024*1024*1024*2);
			//testResult.setRawResult();
			//testResult.setTypedRawResult(1024*1024*512, "http://www.w3.org/2001/XMLSchema#decimal");
			//testResult.setTypedRawResult(1024*1024*921, "http://www.w3.org/2001/XMLSchema#decimal");
			//testResult.setTypedRawResult(1024*1024*922, "http://www.w3.org/2001/XMLSchema#decimal");
			//testResult.setTypedRawResult(1024*1024*1024*1, "http://www.w3.org/2001/XMLSchema#decimal");
			//testResult.setTypedRawResult(1024*1024*1024*2, "http://www.w3.org/2001/XMLSchema#decimal");
			//testResult.setTypedRawResult(1024*1024*1024*3, "http://www.w3.org/2001/XMLSchema#decimal");
			//testResult.setTypedRawResult(1024*1024*1024*3.1, "http://www.w3.org/2001/XMLSchema#decimal");
			//testResult.setTypedRawResult(1024*1024*1024*4, "http://www.w3.org/2001/XMLSchema#decimal");
			
			var fso = new ActiveXObject("Scripting.FileSystemObject");
			var tempFile = fso.OpenTextFile("c:\\temp\\ram.txt", 1);
			var line = tempFile.ReadLine();
			Logger.Error("*** ram: [" + line + "]");
			var ram = parseInt(line);
			testResult.setTypedRawResult(1024*1024*ram, "http://www.w3.org/2001/XMLSchema#decimal");

		</stdimpl:javascript-->
    <!-- Validation Logic -->
    <stdimpl:javascript>
      var installed = "unknown";
      var usable = "unknown";
      try
      {
      var services = GetObject("winmgmts:{impersonationLevel=impersonate}!\\\\.\\root\\cimv2");

      if (services != null)
      {
      var systest = services.ExecQuery("SELECT TotalPhysicalMemory FROM Win32_ComputerSystem");
      for ( var enumItems = new Enumerator(systest); !enumItems.atEnd(); enumItems.moveNext() )
      {
      var objItem		= enumItems.item();
      usable			= parseInt(objItem.TotalPhysicalMemory);
      }

      var comtest = services.ExecQuery("SELECT Capacity FROM Win32_PhysicalMemory");
      for ( var enumItems = new Enumerator(comtest); !enumItems.atEnd(); enumItems.moveNext() )
      {
      if (installed == "unknown")
      {
      installed = parseInt(0);
      }

      var objItem		= enumItems.item();
      installed		+= parseInt(objItem.Capacity);
      }
      }
      } catch(e) {}

      Logger.Info("usable = " + usable);
      Logger.Info("installed = " + installed);

      testResult.setTypedProperty("installed", installed, "", "http://www.w3.org/2001/XMLSchema#decimal");
      testResult.setTypedProperty("usable", usable, "", "http://www.w3.org/2001/XMLSchema#decimal");

      testResult.setRawResult(installed + ";" + usable);
    </stdimpl:javascript>
    <testResult>
      <TestResult rdf:about="#tr.4.below.1G">
        <javascript:valid xmlns:javascript="http://www.reuters.com/RSTM/Javascript/">

          // Only for Eikon 3.0 or more
          var configProvider = RDMC.KobraProviderManager.FindProvider("Configuration");
          var version = "";
          try { version = configProvider.GetPropertyValue("RDMC.Version"); } catch(e) {}
          if(version == "") return false;

          // less than 1 GB (with a 10% margin)
          var OneGB = 1073741824;
          var limit1 = OneGB * 1 * 0.9;

          var values = testResult.split(";");
          var installed = parseInt(values[0]);
          var usable = parseInt(values[1]);

          return (usable &lt; limit1);
        </javascript:valid>
        <valid>fail</valid>
        <outcome>
          <TestOutcome rdf:about="#to.4.below.1G">
            <run:recommendation xml:lang="en">4GB of RAM is strongly recommended. A minimum of 1GB of RAM is required.</run:recommendation>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.4.over.1G">
        <javascript:valid xmlns:javascript="http://www.reuters.com/RSTM/Javascript/">

          // Only for Eikon 3.0 or more
          var configProvider = RDMC.KobraProviderManager.FindProvider("Configuration");
          var version = "";
          try { version = configProvider.GetPropertyValue("RDMC.Version"); } catch(e) {}
          if(version == "") return false;

          var OneGB = 1073741824;

          // Match when physical memory more than 1 GB (with a 10% margin)
          var limitlo = OneGB * 1 * 0.9;
          var limitUsable, limitReal;

          var uriRfs = "http://www.reuters.com/RSTM/Metadata/";
          var OS = rstmToken.getTest().getProperty(uriRfs + "OS", "");
          if (OS == "2000" || OS == "XP" || OS == "2003")
          {
          limitUsable = OneGB * 2.5;
          limitReal = OneGB * 4.0;
          }
          else
          {
          limitUsable = OneGB * 3.0;
          limitReal = OneGB * 4.0;
          }

          var values = testResult.split(";");
          var installed = parseInt(values[0]);
          var usable = parseInt(values[1]);

          Logger.info("Available Memory Constraint is " + limitUsable);
          Logger.info("Detected Memory Constraint is " + limitReal);

          return usable &gt;= limitlo &amp;&amp; (installed &lt; limitReal || usable &lt; limitUsable);
        </javascript:valid>
        <valid>alert</valid>
        <outcome>
          <TestOutcome rdf:about="#to.4.over.1G">
            <run:recommendation xml:lang="en">Thomson Reuters Eikon may not perform as expected with less than 4GB of RAM.</run:recommendation>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.4.over.4G">
        <javascript:valid xmlns:javascript="http://www.reuters.com/RSTM/Javascript/">

          // Only for Eikon 3.0 or more
          var configProvider = RDMC.KobraProviderManager.FindProvider("Configuration");
          var version = "";
          try { version = configProvider.GetPropertyValue("RDMC.Version"); } catch(e) {}
          if(version == "") return false;

          var OneGB = 1073741824;
          var limitUsable, limitReal;

          var uriRfs = "http://www.reuters.com/RSTM/Metadata/";
          var OS = rstmToken.getTest().getProperty(uriRfs + "OS", "");
          if (OS == "2000" || OS == "XP" || OS == "2003")
          {
          limitUsable = OneGB * 2.5;
          limitReal = OneGB * 4.0;
          }
          else
          {
          limitUsable = OneGB * 3.0;
          limitReal = OneGB * 4.0;
          }

          var values = testResult.split(";");
          var installed = parseInt(values[0]);
          var usable = parseInt(values[1]);

          Logger.info("Available Memory Constraint is " + limitUsable);
          Logger.info("Detected Memory Constraint is " + limitReal);

          return (installed &gt;= limitReal) &amp;&amp; (usable &gt;= limitUsable);

        </javascript:valid>
        <valid>pass</valid>
        <outcome>
          <TestOutcome rdf:about="#to.4.over.4G">
            <run:recommendation xml:lang="en">Required memory: 4 GB or above (minimum 1 GB)</run:recommendation>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.4.memory_ok">
        <valid>pass</valid>
        <value>&gt;0.9*%(rfsPropertyURI='referenceValue')</value>
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.4.not_enough_memory">
        <valid>fail</valid>
        <value>*</value>
      </TestResult>
    </testResult>
  </Test>
  <NaturalRedefinition rdf:about="#redef.OS.2003">
    <redef:overrides rdf:resource="#test.4" />
    <rfs:OS>2003</rfs:OS>
  </NaturalRedefinition>
  <NaturalRedefinition rdf:about="#redef.OS.XP">
    <redef:overrides rdf:resource="#test.4" />
    <rfs:OS>XP</rfs:OS>
  </NaturalRedefinition>
  <NaturalRedefinition rdf:about="#redef.OS.SEVEN">
    <redef:overrides rdf:resource="#test.4" />
    <rfs:OS>SEVEN</rfs:OS>
  </NaturalRedefinition>
  <NaturalRedefinition rdf:about="#redef.OS.2008">
    <redef:overrides rdf:resource="#test.4" />
    <rfs:OS>2008</rfs:OS>
  </NaturalRedefinition>
  <NaturalRedefinition rdf:about="#redef.OS.VISTA">
    <redef:overrides rdf:resource="#test.4" />
    <rfs:OS>VISTA</rfs:OS>
  </NaturalRedefinition>
  <NaturalRedefinition rdf:about="#redef.OS.2000">
    <redef:overrides rdf:resource="#test.4" />
    <rfs:OS>2000</rfs:OS>
  </NaturalRedefinition>
  <NaturalRedefinition rdf:about="#redef.OS.EIGHT">
    <redef:overrides rdf:resource="#test.4" />
    <rfs:OS>EIGHT</rfs:OS>
  </NaturalRedefinition>
  <NaturalRedefinition rdf:about="#redef.OS.2012">
    <redef:overrides rdf:resource="#test.4" />
    <rfs:OS>2012</rfs:OS>
  </NaturalRedefinition>
  <NaturalRedefinition rdf:about="#redef.OS.unknown">
    <redef:overrides rdf:resource="#test.4" />
    <rfs:OS>unknown</rfs:OS>
  </NaturalRedefinition>
  <Test rdf:about="#test.78">
    <!-- Header -->
    <object>Reuters_RstTest.name='TestOldVersion'.value</object>
    <isContainedBy rdf:resource="#group.prerequisites.software" />
    <priority>0.994</priority>
    <dc:title xml:lang="en">Legacy Thomson Reuters Products:</dc:title>
    <dc:description xml:lang="en">Check for the existence of a previous version of the product</dc:description>
    <!-- Display -->
    <default:description xml:lang="en">%(runPropertyURI='value')</default:description>
    <!-- Validation Logic -->
    <stdimpl:javascript>
      var gWSO = new ActiveXObject("WScript.Shell");
      var gMSI = new ActiveXObject("WindowsInstaller.Installer");
      var value;	 // 0 = No version found,
      var productFound;  // Text displayed tu user
      var index;
      var xtra6IsInstalled;

      var listVersions = new Array
      (
      "{967394BC-4113-42F9-92EF-727738EFA8A3}",  /* Kobra 4.5.0 */
      "{4E5BDE71-4EAB-4E87-B84E-35A3C2855CC5}",  /* Kobra 4.5.1 or 4.5.2 */
      "{1B952369-E4AB-40E1-B0CF-0A37DD72A655}",  /* XTRA 4.5.0 */
      "{A94EFBB9-DCA6-4619-B9B0-D55C2D7EBC68}",  /* XTRA 4.5.1, 4.5.2 or 4.5.3 */
      "{DDB51969-0D5A-4E0C-8216-8D5012AB05DE}",  /* PPPro 4.5.0 */
      "{4A76AD73-E9D1-4C57-88A4-74E84B366AF7}",  /* PPPro 4.5.1 or 4.5.2 */
      "{43D2A116-2665-438B-9562-E7E0DB3E5CD0}",  /* XTRA 5.0 */
      "{426141DF-03CF-4D3A-B9BA-99A4311B2F23}",  /* XTRA 5.1 */
      "{86E851AE-ABBD-4D64-9BA3-A59B2E618A3F}"  /* XTRA 6.0 */
      );

      xtra6IsInstalled = false;
      value = 0;
      productFound = "";

      /*----------------------------------*/
      /* Detection if Xtra 6 is installed */
      /*----------------------------------*/
      productFound = MSI_ProductName(listVersions[8]);
      if (productFound != "")
      {
      xtra6IsInstalled = true;
      }

      /*-------------------------*/
      /* Detection by asking MSI */
      /*-------------------------*/
      for (index = 0; index &lt; listVersions.length-1; index++)
      {
      productFound = MSI_ProductName(listVersions[index]);
      if (productFound != "")
      {
      /* exit as soon as we have found a product */
      value = listVersions[index];

      if (xtra6IsInstalled == false)
      {
      if (RDMC.parameters.Variables("_systemTestStandAlone") == false)
      {
      // if version 5.0 or 5.1 is found
      if (index == 6 || index == 7)
      {
      if (RDMC.parameters.Variables("UninstallXTra5") == true)
      {
      if (RDMC.RDMCLib.User.Administrator)
      {
      value = "XTRA5UNINSTALL";
      testResult.setRawResult(value);
      return;
      }
      }
      }
      }
      }
      break;
      }
      }
      if (value !=0)
      value = value.substring(1,value.length-1);

      testResult.setRawResult(value);
      return;

      function MSI_ProductName(guid)
      {
      try
      {
      var product = gMSI.ProductInfo(guid, "ProductName");
      if (product != "")
      {
      var version = gMSI.ProductInfo(guid, "VersionString");
      if (version != "")
      {
      product += " - " + version;
      }
      Logger.Info("Found product " + product + " (GUID = " + guid + ")");
      }
      return product;
      }
      catch(e)
      {
      return "";
      }
      }
    </stdimpl:javascript>
    <testResult>
      <TestResult rdf:about="#tr.business.rstplugin.information.kobra.4.5.0">
        <value>967394BC-4113-42F9-92EF-727738EFA8A3</value>
        <valid>fail</valid>
        <outcome>
          <TestOutcome rdf:about="#to.business.rstplugin.information.kobra.4.5.0">
            <run:description xml:lang="en">Reuters 3000 Xtra version 4.5.0 (incompatible).</run:description>
            <run:recommendation xml:lang="en">The existing version cannot be automatically upgraded. Please exit the installation and uninstall the previous version.</run:recommendation>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.business.rstplugin.information.kobra.4.5.1">
        <value>4E5BDE71-4EAB-4E87-B84E-35A3C2855CC5</value>
        <valid>fail</valid>
        <outcome>
          <TestOutcome rdf:about="#to.business.rstplugin.information.kobra.4.5.1">
            <run:description xml:lang="en">Reuters 3000 Xtra version 4.5.1 or 4.5.2 (incompatible).</run:description>
            <run:recommendation xml:lang="en">The existing version cannot be automatically upgraded. Please exit the installation and uninstall the previous version.</run:recommendation>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.business.rstplugin.information.xtra.4.5.0">
        <value>1B952369-E4AB-40E1-B0CF-0A37DD72A655</value>
        <valid>fail</valid>
        <outcome>
          <TestOutcome rdf:about="#to.business.rstplugin.information.xtra.4.5.0">
            <run:description xml:lang="en">Reuters 3000 Xtra version 4.5.0 (incompatible).</run:description>
            <run:recommendation xml:lang="en">The existing version cannot be automatically upgraded. Please exit the installation and uninstall the previous version.</run:recommendation>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.business.rstplugin.information.xtra.4.5.1">
        <value>A94EFBB9-DCA6-4619-B9B0-D55C2D7EBC68</value>
        <valid>fail</valid>
        <outcome>
          <TestOutcome rdf:about="#to.business.rstplugin.information.xtra.4.5.1">
            <run:description xml:lang="en">Reuters 3000 Xtra 4.5.1, 4.5.2 or 4.5.3 (incompatible).</run:description>
            <run:recommendation xml:lang="en">The existing version cannot be automatically upgraded. Please exit the installation and uninstall the previous version.</run:recommendation>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.business.rstplugin.information.pppro.4.5.0">
        <value>DDB51969-0D5A-4E0C-8216-8D5012AB05DE</value>
        <valid>fail</valid>
        <outcome>
          <TestOutcome rdf:about="#to.business.rstplugin.information.pppro.4.5.0">
            <run:description xml:lang="en">Reuters PowerPlus Pro version 4.5.0 (incompatible).</run:description>
            <run:recommendation xml:lang="en">The existing version cannot be automatically upgraded. Please exit the installation and uninstall the previous version.</run:recommendation>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.business.rstplugin.information.pppro.4.5.1">
        <value>4A76AD73-E9D1-4C57-88A4-74E84B366AF7</value>
        <valid>fail</valid>
        <outcome>
          <TestOutcome rdf:about="#to.business.rstplugin.information.pppro.4.5.1">
            <run:description xml:lang="en">Reuters PowerPlus Pro version 4.5.1 or 4.5.2 (incompatible).</run:description>
            <run:recommendation xml:lang="en">The existing version cannot be automatically upgraded. Please exit the installation and uninstall the previous version.</run:recommendation>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.business.rstplugin.information.xtra.5.0">
        <value>43D2A116-2665-438B-9562-E7E0DB3E5CD0</value>
        <valid>pass</valid>
        <outcome>
          <TestOutcome rdf:about="#to.business.rstplugin.information.xtra.5.0">
            <run:description xml:lang="en">Reuters 3000 Xtra version 5.0</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.business.rstplugin.information.xtra.5.1">
        <value>426141DF-03CF-4D3A-B9BA-99A4311B2F23</value>
        <valid>pass</valid>
        <outcome>
          <TestOutcome rdf:about="#to.business.rstplugin.information.xtra.5.1">
            <run:description xml:lang="en">Reuters 3000 Xtra version 5.1</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.business.rstplugin.information.noprevious">
        <value>0</value>
        <valid>pass</valid>
        <outcome>
          <TestOutcome rdf:about="#to.business.rstplugin.information.noprevious">
            <run:description xml:lang="en">No previous versions found.</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.business.rstplugin.information.WebInstall">
        <value>XTRA5UNINSTALL</value>
        <valid>alert</valid>
        <outcome>
          <TestOutcome rdf:about="#to.business.rstplugin.information.WebInstall">
            <run:description xml:lang="en">Reuters 3000 Xtra version 5.x has been detected on your computer. This version will be uninstalled during the upgrade to Thomson Reuters Eikon Desktop.</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
  </Test>
  <Test rdf:about="#test.5">
    <rfs:referenceWidth rdf:datatype="http://www.w3.org/2001/XMLSchema#integer">1024</rfs:referenceWidth>
    <rfs:referenceHeight rdf:datatype="http://www.w3.org/2001/XMLSchema#integer">768</rfs:referenceHeight>
  </Test>
  <Test rdf:about="#test.6">
    <rfs:referenceValue rdf:datatype="http://www.w3.org/2001/XMLSchema#decimal">16</rfs:referenceValue>
  </Test>
  <Test rdf:about="#test.1001">
    <!-- Header -->
    <object>reuters_mnc.name='Gateway'.value</object>
    <requiresPlugin rdf:resource="#rstplugin.provider.6" />
    <isContainedBy rdf:resource="#group.serviceAvailability" />
    <priority>0.6</priority>
    <dc:title xml:lang="en">Gateway Service:</dc:title>
    <dc:description xml:lang="en">Tests the Kobra gateway feature, which is accessible through a web page.</dc:description>
    <!-- Validation Logic -->
    <testResult>
      <TestResult rdf:about="#tr.1001.0">
        <value>FAILED</value>
        <valid>fail</valid>
        <outcome>
          <TestOutcome rdf:about="#tr.1001.0">
            <run:description>Not accessible.</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.1001.1">
        <value>*</value>
        <valid>pass</valid>
        <outcome>
          <TestOutcome rdf:about="#tr.1001.1">
            <run:description>Accessible.</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
  </Test>
  <Test rdf:about="#test.1003">
    <!-- Header -->
    <object>Reuters_RstTest.name='KobraSearch'.value</object>
    <!--<rfs:isRerunAllowed>true</rfs:isRerunAllowed>-->
    <isContainedBy rdf:resource="#group.serviceAvailability" />
    <priority>0.5005</priority>
    <redef:isTroubleshootedBy rdf:resource="#test.75" />
    <dc:title xml:lang="en">Search and Navigation Services:</dc:title>
    <dc:description xml:lang="en">Tests the Kobra Search feature, which is accessible through a web page.</dc:description>
    <rfs:cpURL>cpurl://views.cp./Explorer/SRCHxALL.aspx</rfs:cpURL>
    <!-- Validation Logic -->
    <stdimpl:javascript>
      %(ID='script.util.fdmhttpget')
    </stdimpl:javascript>
    <testResult>
      <TestResult rdf:about="#tr.1003.0">
        <value>-1</value>
        <valid>fail</valid>
        <outcome>
          <TestOutcome rdf:about="#tr.1003.0">
            <run:description>Not accessible.</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.1003.1">
        <value>*</value>
        <valid>pass</valid>
        <outcome>
          <TestOutcome rdf:about="#tr.1003.1">
            <run:description>Accessible.</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
  </Test>
  <Test rdf:about="#test.39">
    <!-- Header -->
    <object>Reuters_RstTest.name='DiskFreeSpace'.value</object>
    <isContainedBy rdf:resource="#group.prerequisites.hardware" />
    <priority>0.1007</priority>
    <dc:title xml:lang="en">Free Disk Space:</dc:title>
    <dc:description>Test implemented in JavaScript. We use the WMI Win32_LogicalDisk table and Win32_OperatingSystem table. Only local disk are considered (ie DriveType == 3). If first time installation, we choose the local disk with the most available space. The value is compared to the enumRequiredDiskSpace.PREINSTALL_OK which must me defined in the product specific test logic. referenceValue must be greater than referenceValue2. If the available free space found is greater than referenceValue, we issue a pass, between referenceValue2 and referenceValue we issue an alert, otherwise we issue a fail.</dc:description>
    <!-- Computation script -->
    <stdimpl:javascript>
      <![CDATA[
	
		var enumRequiredDiskSpace = 
		{
			// Fresh Install
			// - Desktop 3.3+
			PREINSTALL_950_750_OK : 996147200, // 950 MB
			PREINSTALL_950_750_FAIL : 786432000, // 750 MB
			
			// Fresh Install
			// - Desktop 3.2 or older
			// - Excel all versions
			PREINSTALL_750_350_OK : 786432000, // 750 MB
			PREINSTALL_750_350_FAIL : 367001600, // 350 MB
			
			// Update - Prerequisites check
			// - All of these:
			//   - Target: Desktop 3.3+
			//   - Installed: Desktop 3.2+
			//   - Installation package is not extracted
			UPDATE_950_950_OK : 996147200, // 950 MB
			UPDATE_950_950_FAIL : 996147200, // 950 MB (no alert)
			
			// Update - Prerequisites check
			// - All of these:
			//   - Target: Desktop 3.3+
			//   - Installed: Desktop 3.2+
			//   - Installation package is already extracted
			UPDATE_520_520_DISPLAY_OVERRIDE : 996147200, // 950 MB
			UPDATE_520_520_OK : 545259520, // 520 MB
			UPDATE_520_520_FAIL : 545259520, // 520 MB (no alert)
			
			// Update - Prerequisites check
			// - All of these:
			//   - Target: Desktop 3.3+
			//   - Installed: Desktop older than 3.2
			UPDATE_950_750_OK : 996147200, // 950 MB
			UPDATE_950_750_FAIL : 786432000, // 750 MB
			
			// Update - Non-prerequisites check (non-install mode -- system test, scheduled test)
			// - Desktop & Excel all versions
			// Update - Prerequisites check
			// - Excel all versions
			// - or Target: Desktop 3.2 or older
			UPDATE_200_20_OK : 209715200, // 200 MB
			UPDATE_200_20_FAIL : 20971520, // 20 MB
			
			// Update - Prerequisites check
			// - All of these:
			//   - Target: Desktop 3.3+
			//   - Installed: Desktop 3.2+, not RUSS
			//   - Installation package is already extracted
			UPDATE_450_450_DISPLAY_OVERRIDE : 996147200, // 950 MB
			UPDATE_450_450_OK : 471859200, //450 MB
			UPDATE_450_450_FAIL : 471859200 // 450 MB (no alert)
		}
		
		// Version check
		var PRODUCT_VERSION_EIKON_3_2 = "8.2";
		var PRODUCT_VERSION_EIKON_3_3 = "8.3";
		
		// Default recommendation message
		testResult.setProperty("diskMinimumSpace", ConvertDiskFreeSpaceToString(enumRequiredDiskSpace.PREINSTALL_950_750_FAIL), "");
		
		try
		{
			var services = GetObject("winmgmts:{impersonationLevel=impersonate}!\\\\.\\root\\cimv2");
		} catch(e)
		{
			testResult.setRawResult("NOWMI");
			return;
		}
		
		var xtra6IsInstalled = false;
	    // Using Try Catch as far as RDMC.isProductInstalled() was implemented in L19 then older version test
	    // Suite compatibility is broken.
	    try
	    {
			xtra6IsInstalled = RDMC.isProductInstalled();
			Logger.debug("RDMC.isProductInstalled() = " + xtra6IsInstalled);
		}
		catch(e)
		{
			return false;
		}
		
		var isUpgrade = false;
	    try
	    {
			isUpgrade = (RDMC.versionInfo.TRD6.m_displayMode == "upgrade");
		}
		catch(e) {}
		Logger.debug("isUpgrade = " + isUpgrade);
		
		var enumRetCode = 
		{
			PREINSTALL_OK : 1,
			PREINSTALL_ALERT : 2,
			UPDATE_OK : 3,
			UPDATE_ALERT : 4,
			UPDATE_FAIL : 5,
			PREINSTALL_FAIL : 6
		}
		
		value = 0;
		var retValue = 0;
		var diskFreeSpace = -1, diskName;
		var uriRfs = "http://www.reuters.com/RSTM/Metadata/";
		
		// Disk space requirement. Default to fresh install
		// Use in both evaluation and test result messages
		var diskRecommendedSpace = enumRequiredDiskSpace.PREINSTALL_950_750_OK;
		var diskMinimumSpace = enumRequiredDiskSpace.PREINSTALL_950_750_FAIL;
		
		// For overriding display value to use different value from actual criteria (0 = no override)
		var diskRecommendedSpaceDisplayOverride = 0;
		var diskMinimumSpaceDisplayOverride = 0;
		
		if ((!xtra6IsInstalled) && (!isUpgrade))
		{
			var q = services.ExecQuery("SELECT FreeSpace, Name, DriveType FROM Win32_LogicalDisk ");
				
			if (!q) throw new RSTM_ScriptException("error.business.service.unreachable");
	
			for ( var enumItems = new Enumerator(q); !enumItems.atEnd(); enumItems.moveNext() )
			{
				var objItem		= enumItems.item();
				if ((objItem.FreeSpace/1 > diskFreeSpace/1) && (objItem.DriveType == 3)) {
					diskFreeSpace	= objItem.FreeSpace;
					diskName        = objItem.Name;
				}
			}
			
			Logger.info("Condition: Fresh install");
			if (IsInstallingEikonExcel())
			{
				Logger.info("Condition: Target: Excel");
				Logger.debug("Criteria = PREINSTALL_750_350");
				diskRecommendedSpace = enumRequiredDiskSpace.PREINSTALL_750_350_OK;
				diskMinimumSpace = enumRequiredDiskSpace.PREINSTALL_750_350_FAIL;
			}
			else if (IsInstallingVersionOlderThan(PRODUCT_VERSION_EIKON_3_3))
			{
				// Regression
				Logger.info("Condition: Target: Desktop 3.2 or older");
				Logger.debug("Criteria = PREINSTALL_750_350");
				diskRecommendedSpace = enumRequiredDiskSpace.PREINSTALL_750_350_OK;
				diskMinimumSpace = enumRequiredDiskSpace.PREINSTALL_750_350_FAIL;
			}
			else
			{
				Logger.info("Condition: Target: Desktop 3.3+");
				Logger.debug("Criteria = PREINSTALL_950_750");
				diskRecommendedSpace = enumRequiredDiskSpace.PREINSTALL_950_750_OK;
				diskMinimumSpace = enumRequiredDiskSpace.PREINSTALL_950_750_FAIL;
			}

			if ( parseInt(diskFreeSpace) >= parseInt(diskRecommendedSpace) )
				retValue = enumRetCode.PREINSTALL_OK;
			else if ( parseInt(diskFreeSpace) >= parseInt(diskMinimumSpace) )
				retValue = enumRetCode.PREINSTALL_ALERT;
			else
				retValue = enumRetCode.PREINSTALL_FAIL;
		}
		else
		{
			var q = services.ExecQuery("SELECT SystemDrive FROM Win32_OperatingSystem ");
				
			if (!q) throw new RSTM_ScriptException("error.business.service.unreachable");
			
			for ( var enumItems = new Enumerator(q); !enumItems.atEnd(); enumItems.moveNext() )
			{
				var objItem		=  enumItems.item();
				diskName		= objItem.SystemDrive;
			}
	
			q = services.ExecQuery("SELECT FreeSpace, Name, DriveType FROM Win32_LogicalDisk WHERE Name='" + diskName + "'");
			if (!q) throw new RSTM_ScriptException("error.business.service.unreachable");
			
			for ( var enumItems = new Enumerator(q); !enumItems.atEnd(); enumItems.moveNext() )
			{
				var objItem		= enumItems.item();
				diskFreeSpace	= objItem.FreeSpace;
			}
			
			if (!IsPrerequisitesCheck())
			{
				Logger.info("Condition: Non-prerequisites check");
				Logger.debug("Criteria = UPDATE_200_20");
				diskRecommendedSpace = enumRequiredDiskSpace.UPDATE_200_20_OK;
				diskMinimumSpace = enumRequiredDiskSpace.UPDATE_200_20_FAIL;
			}
			else if (IsInstallingEikonExcel())
			{
				Logger.info("Condition: Target: Excel");
				Logger.debug("Criteria = UPDATE_200_20");
				diskRecommendedSpace = enumRequiredDiskSpace.UPDATE_200_20_OK;
				diskMinimumSpace = enumRequiredDiskSpace.UPDATE_200_20_FAIL;
			}
			else
			{
				Logger.info("Condition: Target: Desktop");
				if (IsInstallingVersionOlderThan(PRODUCT_VERSION_EIKON_3_3))
				{
					// Regression
					Logger.info("Condition: Target: Desktop 3.2 or older");
					Logger.debug("Criteria = UPDATE_200_20");
					diskRecommendedSpace = enumRequiredDiskSpace.UPDATE_200_20_OK;
					diskMinimumSpace = enumRequiredDiskSpace.UPDATE_200_20_FAIL;
				}
				else
				{
					Logger.info("Condition: Target: Desktop 3.3+");
					if (IsInstalledVersionOlderThan(PRODUCT_VERSION_EIKON_3_2))
					{
						Logger.info("Condition: Installed: Desktop older than 3.2");
						Logger.debug("Criteria = UPDATE_200_20");
						diskRecommendedSpace = enumRequiredDiskSpace.UPDATE_200_20_OK;
						diskMinimumSpace = enumRequiredDiskSpace.UPDATE_200_20_FAIL;
					}
					else
					{
						Logger.info("Condition: Installed: Desktop 3.2+");
						if (IsRunningUpgradeToolFromRUSS() || PreCopyExists())
						{
							Logger.info("Condition: Installation package already extracted");
							Logger.debug("Criteria = UPDATE_520_520");
							diskRecommendedSpace = enumRequiredDiskSpace.UPDATE_520_520_OK;
							diskMinimumSpace = enumRequiredDiskSpace.UPDATE_520_520_FAIL;
							// Override display values
							diskRecommendedSpaceDisplayOverride = enumRequiredDiskSpace.UPDATE_520_520_DISPLAY_OVERRIDE;
							diskMinimumSpaceDisplayOverride = enumRequiredDiskSpace.UPDATE_520_520_DISPLAY_OVERRIDE;
						}
						else
						{
							Logger.info("Condition: Installation package not extracted");
							Logger.debug("Criteria = UPDATE_450_450");
							diskRecommendedSpace = enumRequiredDiskSpace.UPDATE_450_450_OK;
							diskMinimumSpace = enumRequiredDiskSpace.UPDATE_450_450_FAIL;
							// Override display values
							diskRecommendedSpaceDisplayOverride = enumRequiredDiskSpace.UPDATE_450_450_DISPLAY_OVERRIDE;
							diskMinimumSpaceDisplayOverride = enumRequiredDiskSpace.UPDATE_450_450_DISPLAY_OVERRIDE;

						}
					}
				}
			}
			
			if ( parseInt(diskFreeSpace) >= parseInt(diskRecommendedSpace) )
				retValue = enumRetCode.UPDATE_OK;
			else if ( parseInt(diskFreeSpace) >= parseInt(diskMinimumSpace) )
				retValue = enumRetCode.UPDATE_ALERT;
			else
				retValue = enumRetCode.UPDATE_FAIL;
		}
		
		testResult.setProperty("diskFreeSpace", ConvertDiskFreeSpaceToString(diskFreeSpace), "");
		testResult.setTypedRawResult(retValue, "http://www.w3.org/2001/XMLSchema#decimal");
		testResult.setProperty("diskName", diskName.substring(0, 1), "");
		
		if (diskRecommendedSpaceDisplayOverride > 0) {
			testResult.setProperty("diskRecommendedSpace", ConvertDiskFreeSpaceToString(diskRecommendedSpaceDisplayOverride), "");
			Logger.info("Recommended Disk Space = " + ConvertDiskFreeSpaceToString(diskRecommendedSpaceDisplayOverride));
			Logger.debug("Recommended Disk Space (criteria) = " + ConvertDiskFreeSpaceToString(diskRecommendedSpace));
		} else {
			testResult.setProperty("diskRecommendedSpace", ConvertDiskFreeSpaceToString(diskRecommendedSpace), "");
			Logger.info("Recommended Disk Space = " + ConvertDiskFreeSpaceToString(diskRecommendedSpace));
		}
		
		if (diskMinimumSpaceDisplayOverride > 0) {
			testResult.setProperty("diskMinimumSpace", ConvertDiskFreeSpaceToString(diskMinimumSpaceDisplayOverride), "");
			Logger.info("Minimum Disk Space = " + ConvertDiskFreeSpaceToString(diskMinimumSpaceDisplayOverride));
			Logger.debug("Minimum Disk Space (criteria) = " + ConvertDiskFreeSpaceToString(diskMinimumSpace));
		} else {
			testResult.setProperty("diskMinimumSpace", ConvertDiskFreeSpaceToString(diskMinimumSpace), "");
			Logger.info("Minimum Disk Space = " + ConvertDiskFreeSpaceToString(diskMinimumSpace));
		}
		
		return;
		
		
		// =====================================================================
		
		function ConvertDiskFreeSpaceToString(freespace)
		{
			var retVal = 0;

			if  ( freespace >= 1000000000)
			{
				retVal = parseFloat(freespace / Math.pow(1024,3));
				return retVal.toFixed(2) + " GB";
			}
			else if  ( freespace >= 1000000)
			{
				retVal = parseInt(freespace / Math.pow(1024,2));
				return retVal + " MB";
			}			
			else 
			{
				retVal = parsFloat(freespace / 1024);
				return retVal.toFixed(2) + " KB";
			}
		}
		
		function IsInstallingEikonExcel()
		{
			var configProvider = RDMC.KobraProviderManager.FindProvider("Configuration");
			var isInstallingEikonExcel = false;
			try
			{
				var product = configProvider.GetPropertyValue("RDMC.Product");
				Logger.debug("RDMC.Product = [" + product + "]");
				isInstallingEikonExcel = (product == "excel");
			}
			catch (e) {}
			Logger.debug("IsInstallingEikonExcel() = " + isInstallingEikonExcel);
			return isInstallingEikonExcel;
		}
		
		function IsEikonExcelInstalled()
		{
			var isEikonExcelInstalled = false;
			try
			{
				isEikonExcelInstalled = RDMC.versionInfo.Trd6.IsEikonExcel();
			}
			catch (e) {}
			Logger.debug("IsEikonExcelInstalled() = " + isEikonExcelInstalled);
			return isEikonExcelInstalled;
		}
		
		function IsPrerequisitesCheck()
		{
			var configProvider = RDMC.KobraProviderManager.FindProvider("Configuration");
			var isPrerequisitesCheck = false;
			try
			{
				var isRDMCCheckingPrerequisites = configProvider.GetPropertyValue("RDMC.CheckingPrerequisites");
				Logger.debug("RDMC.CheckingPrerequisites = [" + isRDMCCheckingPrerequisites + "]");
				isPrerequisitesCheck = (isRDMCCheckingPrerequisites == "true");
			}
			catch(e) {}
			Logger.debug("IsPrerequisitesCheck() = " + isPrerequisitesCheck);
			return isPrerequisitesCheck;
		}
		
		function IsInstallingVersionOlderThan(version)
		{
			Logger.debug("IsInstallingVersionOlderThan(" + version + ")");
			var isInstallingVersionOlder = true;
			try
			{
				var installingVersion = RDMC.versionInfo.TRD6.m_targetVersion;
				Logger.debug("Installing version = " + installingVersion);
				isInstallingVersionOlder = (RDMC.utilities.RDMCCompareVersion(version, installingVersion) > 0);
			}
			catch (e) {}
			Logger.debug("IsInstallingVersionOlderThan(" + version + ") = " + isInstallingVersionOlder);
			return isInstallingVersionOlder;
		}
		
		function IsInstalledVersionOlderThan(version)
		{
			Logger.debug("IsInstalledVersionOlderThan(" + version + ")");
			Logger.debug("Version to compare = " + version);
			var isInstalledVersionOlder = true;
			try
			{
				var installedVersion = RDMC.versionInfo.TRD6.m_productVersion;
				Logger.debug("Installed version = " + installedVersion);
				isInstalledVersionOlder = (RDMC.utilities.RDMCCompareVersion(version, installedVersion) > 0);
			}
			catch (e) {}
			Logger.debug("IsInstalledVersionOlderThan(" + version + ") = " + isInstalledVersionOlder);
			return isInstalledVersionOlder;
		}
		
		function IsRunningUpgradeToolFromRUSS()
		{
			var isRunningUpgradeToolFromRUSS = true;
			try
			{
				var upgradeTool = RDMC.commandLine.GetParamWithDefault("_upgradeTool", "")
				Logger.debug("_upgradeTool=[" + upgradeTool + "]");
				isRunningUpgradeToolFromRUSS = (upgradeTool == "russ");
			}
			catch (e) {}
			Logger.debug("IsRunningUpgradeToolFromRUSS() = " + isRunningUpgradeToolFromRUSS);
			return isRunningUpgradeToolFromRUSS;
		}
		
		function PreCopyExists()
		{
			var configProvider = RDMC.KobraProviderManager.FindProvider("Configuration");
			var preCopyExists = false;
			try
			{
				var preCopyTarget = configProvider.GetPropertyValue("RDMC.PreCopyTarget");
				Logger.debug("RDMC.PreCopyTarget = [" + preCopyTarget + "]");
				var codeName = RDMC.xtra.GetCodeName(false);
				Logger.debug("CodeName = [" + codeName + "]");
				
				preCopyExists = RDMC.xtra.PreCopyExists(preCopyTarget, codeName);
			}
			catch (e) {}
			Logger.debug("PreCopyExists() = " + preCopyExists);
			return preCopyExists;
		}
	]]>
    </stdimpl:javascript>
    <!-- Display -->
    <default:description xml:lang="en">Drive %(runPropertyURI='diskName'): has %(runPropertyURI='diskFreeSpace') of free space.</default:description>
    <default:recommendation xml:lang="en">Required free disk space is %(runPropertyURI='diskMinimumSpace').</default:recommendation>
    <!-- Validation logic -->
    <rfs:referenceValue2 rdf:datatype="http://www.w3.org/2001/XMLSchema#decimal">1</rfs:referenceValue2>
    <rfs:referenceValue3 rdf:datatype="http://www.w3.org/2001/XMLSchema#decimal">2</rfs:referenceValue3>
    <rfs:referenceValue4 rdf:datatype="http://www.w3.org/2001/XMLSchema#decimal">3</rfs:referenceValue4>
    <rfs:referenceValue5 rdf:datatype="http://www.w3.org/2001/XMLSchema#decimal">4</rfs:referenceValue5>
    <rfs:referenceValue6 rdf:datatype="http://www.w3.org/2001/XMLSchema#decimal">5</rfs:referenceValue6>
    <testResult>
      <TestResult rdf:about="#tr.39.nolocaldisk">
        <value>-1</value>
        <valid>fail</valid>
        <outcome>
          <TestOutcome rdf:about="#to.39.nolocaldisk">
            <run:description xml:lang="en">No local disks found.</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.39.1">
        <value>=%(rfsPropertyURI='referenceValue2')</value>
        <valid>pass</valid>
        <outcome rdf:resource="#to.39.recommendation.recommendedspace" />
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.39.2">
        <value>=%(rfsPropertyURI='referenceValue3')</value>
        <valid>alert</valid>
        <outcome>
          <TestOutcome rdf:about="#to.39.preinstallalert">
            <run:description xml:lang="en">Drive %(runPropertyURI='diskName'): has %(runPropertyURI='diskFreeSpace') of free space.</run:description>
          </TestOutcome>
        </outcome>
        <outcome rdf:resource="#to.39.recommendation.recommendedspace" />
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.39.3">
        <value>=%(rfsPropertyURI='referenceValue4')</value>
        <valid>pass</valid>
        <outcome rdf:resource="#to.39.recommendation.recommendedspace" />
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.39.4">
        <value>=%(rfsPropertyURI='referenceValue5')</value>
        <valid>alert</valid>
        <outcome>
          <TestOutcome rdf:about="#to.39.postinstallalert">
            <run:description xml:lang="en">Drive %(runPropertyURI='diskName'): has %(runPropertyURI='diskFreeSpace') of free space. The system disk free space must be greater than %(runPropertyURI='diskRecommendedSpace').</run:description>
          </TestOutcome>
        </outcome>
        <outcome rdf:resource="#to.39.recommendation.recommendedspace" />
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.39.5">
        <value>=%(rfsPropertyURI='referenceValue6')</value>
        <valid>fail</valid>
        <outcome>
          <TestOutcome rdf:about="#to.39.postinstallfailure">
            <run:description xml:lang="en">Drive %(runPropertyURI='diskName'): has %(runPropertyURI='diskFreeSpace') of free space. The system disk free space must be greater than %(runPropertyURI='diskMinimumSpace').</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.39.6">
        <value>NOWMI</value>
        <valid>warning</valid>
        <outcome>
          <TestOutcome rdf:about="#to.39.6">
            <run:description xml:lang="en">Unable to evaluate free disk space.</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.36.freediskspace.desktop.too.old">
        <javascript:valid xmlns:javascript="http://www.reuters.com/RSTM/Javascript/">
          var isInstalled = false;
          // Using Try Catch as far as RDMC.isProductInstalled() was implemented in L19 then older version test
          // Suite compatibility is broken.
          try
          {
          isInstalled = RDMC.isProductInstalled();
          return false;
          }
          catch(e)
          {
          return true;
          }
        </javascript:valid>
        <valid>info</valid>
        <outcome rdf:resource="#to.client.older.than.testsuite" />
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.39.7">
        <value>*</value>
        <valid>fail</valid>
      </TestResult>
    </testResult>
  </Test>
  <TestOutcome rdf:about="#to.39.recommendation.recommendedspace">
    <run:recommendation xml:lang="en">Recommended free disk space is %(runPropertyURI='diskRecommendedSpace').</run:recommendation>
  </TestOutcome>
  <Script rdf:about="#script.37.ie.trusted.zone">
    <rdf:value>

      function hasDomainInTrustedZone(regprefix, domainList) {
      try
      {
      var res = "";
      // Split the domainList variable into a string array
      var domains = domainList.toLowerCase().split("|");
      if (domainList.length == 0)
      return false;

      // Get the list of domains into a string array
      var regDomains = "Software\\Microsoft\\Windows\\CurrentVersion\\Internet Settings\\ZoneMap\\Domains";
      var names = RDMC.RdmcLib.Registry.EnumKey(regprefix+regDomains).toArray();


      // Check if the domain is in the trusted zone
      var wsh = new ActiveXObject("WScript.Shell");

      // Enumerate trusted zones and test
      for (var i=0; i&lt;names.length; ++i)  {
      for (var j=0; j&lt;domains.length; ++j) {
      if ( domains[j] != "" &amp;&amp;
      names[i].toLowerCase().lastIndexOf(domains[j]) != -1 ) {
      var urls = RDMC.RdmcLib.Registry.EnumKey(regprefix + regDomains+"\\"+names[i]).toArray();

      if (urls.length == 0)
      {
      if (wsh.RegRead(regprefix + regDomains + "\\" + names[i]+ "\\" + "https") == 0x2)
      return true;

      if (wsh.RegRead(regprefix + regDomains + "\\" + names[i]+ "\\" + "http") == 0x2)
      return true;
      }

      for (var k=0; k&lt;urls.length; ++k) {

      var regRoot = regprefix + regDomains + "\\" + names[i] + "\\" + urls[k] + "\\";
      try
      {
      var value =  wsh.RegRead(regRoot + "https");
      if (value == 0x2)
      return true;
      }
      catch (e) {	}
      try
      {
      var value =  wsh.RegRead(regRoot + "http");
      if (value == 0x2)
      return true;
      }
      catch (e) {	}
      }



      }
      }
      }
      }
      catch (e) {	}
      return false;
      }

      /** This function returns "HKCU\\" unless Security_HKLM_only is set in the internet policies **/
      function getRootKeyForInternetSettings()
      {
      var wsh = new ActiveXObject("WScript.Shell");
      var value;
      try {
      value = wsh.RegRead("HKLM\\Software\\Policies\\Microsoft\\Windows\\CurrentVersion\\Internet Settings\\Security_HKLM_only");
      } catch (e) {
      return "HKCU\\";
      }
      if (value == 1) {
      Logger.info("Computer is using Security_HKLM_only mode");
      return "HKLM\\";
      } else {
      return "HKCU\\";
      }
      }


      function getIESecurityFeatureEnabled(regprefix, zone, feature) {
      var wsh = new ActiveXObject("WScript.Shell");
      var value;
      try {
      value = wsh.RegRead(regprefix + "Software\\Microsoft\\Windows\\CurrentVersion\\Internet Settings\\Zones\\" + zone + "\\" + feature);
      } catch (e) {
      return -1;
      }
      return value;
      }

    </rdf:value>
  </Script>
  <Error rdf:about="#error.business.37.disabled.computer">
    <outcome>
      <TestOutcome rdf:about="#to.error.business.37.disabled.computer">
        <run:description xml:lang="en">Active scripting is disabled for the "My Computer" zone.</run:description>
      </TestOutcome>
    </outcome>
  </Error>
  <Error rdf:about="#error.business.37.disabled.intranet">
    <outcome>
      <TestOutcome rdf:about="#to.error.business.37.disabled.intranet">
        <run:description xml:lang="en">Active scripting is disabled for the "Local intranet" zone.</run:description>
      </TestOutcome>
    </outcome>
  </Error>
  <Error rdf:about="#error.business.37.disabled.trusted">
    <outcome>
      <TestOutcome rdf:about="#to.error.business.37.disabled.trusted">
        <run:description xml:lang="en">Active scripting is disabled for the "Trusted sites" zone.</run:description>
      </TestOutcome>
    </outcome>
  </Error>
  <Error rdf:about="#error.business.37.disabled.internet">
    <outcome>
      <TestOutcome rdf:about="#to.error.business.37.disabled.internet">
        <run:description xml:lang="en">Active scripting is disabled for the "Internet" zone.</run:description>
      </TestOutcome>
    </outcome>
  </Error>
  <Error rdf:about="#error.business">
    <redef:isInheritedBy rdf:resource="#error.business.37.disabled.computer" />
    <redef:isInheritedBy rdf:resource="#error.business.37.disabled.intranet" />
    <redef:isInheritedBy rdf:resource="#error.business.37.disabled.trusted" />
    <redef:isInheritedBy rdf:resource="#error.business.37.disabled.internet" />
  </Error>
  <Test rdf:about="#test.37">
    <!-- Header -->
    <object>Reuters_RstTest.name='BrowserJavascript'.value</object>
    <isContainedBy rdf:resource="#group.prerequisites.software" />
    <priority>0.98</priority>
    <dc:title xml:lang="en">Browser JavaScript:</dc:title>
    <dc:description xml:lang="en">
      Test implemented in JavaScript. Documentation about Internet Explorer security zones can be found on MS web site:
      http://www.microsoft.com/windows/ie/ie6/using/howto/security/setup.mspx
      and http://support.microsoft.com/kb/182569.

      This test generates an error if javascript is disabled on the local machine (to.error.business.37.disabled.computer) or the local intranet (to.error.business.37.disabled.intranet).
      This test also generates an error (to.error.business.37.disabled.trusted) if javascript is disabled for the trusted zone if one of the reference sites is in the trusted zone or otherwise it generates an error (to.error.business.37.disabled.internet) if javascript is disabled for the internet zone.
      The errors and status must be overriden to provide a meaningful status.

      The domains to search for in the Trusted zone are give in the property &lt;domains&gt; The domain is a list of domains seperated by a backslashes. Domains are considered whether they are set in http or https.

      By default the raw status is a set if 3 comma separated integer values among -1, 0, and 1. These values correspond to the actual valus read from the registry in HKCU\Software\Microsoft\Windows\CurrentVersion\Internet Settings\Zones\&lt;zone&gt;\1400.
      These values are givin in order for zone 0, zone 1 and zone 2 or 3 (depending whether one of the domains is in the trusted zone or not).
      -1 is returned for a missing value has not specific handling. If one of the values is equal to 1 then the status is Promp.
      Otherwise in case there is an error, the displayed status is displayed (even if one of the values is -1).

      If the internet policy Security_HKLM_only enabled, the keys are checked in HKLM instead of HKCU.

      If you are using IE ESC on a Windows server, this test will not be able to detect if you have put
      the Reuters domain into one of the trusted domains. As a consequence, it will fail to detect
      if javascript is enabled.

    </dc:description>
    <stdimpl:javascript>
      // Include hasDomainInTrustedZone function test.37
      %(ID='script.37.ie.trusted.zone')

      //debugger;

      // Config variables
      var hasCpURL = true;

      try {
      var cpURL = "";
      var SSO = RDMC.SingleSignOn;
      if (SSO != 0)
      {
      var configProvider=RDMC.KobraProviderManager.FindProvider("Configuration");
      cpURL = configProvider.GetPropertyValue("COMMON/WEBSERVICES/URL/RSTSERVER/TSG");
      }
      else
      {
      var connectionType = RDMC.parameters.Variables("CONNECTION_TYPE")
      if (connectionType == "MPLS")
      {
      cpURL = RDMC.TransformZoneUrl("DT_MPLS_MAIN");
      }
      else
      {
      cpURL = RDMC.TransformZoneUrl("DT_INTERNET_MAIN");
      }
      }
      Logger.info("TSG URL = " + cpURL);
      }
      catch(e)
      {
      hasCpURL = false;
      Logger.info("No CpURL Found");
      }
      if (hasCpURL) {
      try {
      var httpURL = RDMC.cpurlToHttp(cpURL);
      Logger.info("Translated CPURL =  '" + httpURL + "'");
      }
      catch(e)
      {
      throw new RSTM_ScriptException("error.business.cpurl.cannot_translate");
      }

      // extract server name
      var stringStart = httpURL.indexOf("://",0)+3;
      var stringEnd = httpURL.indexOf("/",stringStart);
      if (stringEnd == -1) stringEnd = httpURL.length;
      var serverdomain = httpURL.substring(stringStart,stringEnd);
      var tab = serverdomain.split(".");

      if (tab == 0)
      throw new RSTM_ScriptException("error.business.cpurl.cannot_translate");


      var dom = "." + tab[tab.length-1];
      var domainList = "";
      if (tab.length &gt; 2) {
      for (var i = (tab.length-2); i &gt;= 0; i--) {
      dom = tab[i] + dom;
      if (domainList != "") {
      domainList += "|" + dom;
      } else {
      domainList = dom;
      }
      dom = "." + dom;
      }
      } else {
      domainList += serverdomain;
      }
      } else {
      domainList = "";
      }

      var feature = "1400";
      var root = getRootKeyForInternetSettings(); // If Security_HKLM_only is set =&gt;&gt; HKLM

      // If disabled in computer zone
      var value = getIESecurityFeatureEnabled(root, 0, feature);
      var ret = value.toString();
      if (value == 3)
      throw new RSTM_ScriptException("error.business.37.disabled.computer");

      // If disabled in local zone
      value = getIESecurityFeatureEnabled(root, 1, feature);
      ret += ", " + value.toString();
      if (value == 3)
      throw new RSTM_ScriptException("error.business.37.disabled.intranet");

      // Check Trusted Zone or Internet
      if (hasDomainInTrustedZone(root, domainList)) {
      value = getIESecurityFeatureEnabled(root, 2, feature);
      ret += ", " + value.toString();
      if ( value == 3)
      throw new RSTM_ScriptException("error.business.37.disabled.trusted");
      } else {
      value = getIESecurityFeatureEnabled(root, 3, feature);
      ret += ", " + value.toString();
      if ( value == 3)
      throw new RSTM_ScriptException("error.business.37.disabled.internet");
      }

      testResult.setRawResult(ret);

    </stdimpl:javascript>
    <testResult>
      <TestResult rdf:about="#tr.37.prompt">
        <value>.*1.*</value>
        <outcome>
          <TestOutcome rdf:about="#to.37.prompt">
            <run:description xml:lang="en">Prompt.</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.37.default">
        <value>*</value>
        <outcome>
          <TestOutcome rdf:about="#to.37.default">
            <run:description xml:lang="en">Enabled.</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
  </Test>
  <!-- Javascript disabled errors -->
  <Error rdf:about="#error.business.37.disabled.computer">
    <valid>fail</valid>
  </Error>
  <Error rdf:about="#error.business.37.disabled.intranet">
    <valid>fail</valid>
  </Error>
  <Error rdf:about="#error.business.37.disabled.trusted">
    <valid>fail</valid>
  </Error>
  <Error rdf:about="#error.business.37.disabled.internet">
    <valid>fail</valid>
  </Error>
  <!-- Domains -->
  <Test rdf:about="#test.37">
    <dc:description>In xtra 6 the if javascript is disabled in one of the 3 zones a fail is generated. In case of prompt of pass, the status associated is pass.</dc:description>
  </Test>
  <!-- Normal status -->
  <TestResult rdf:about="#tr.37.prompt">
    <valid>pass</valid>
  </TestResult>
  <TestResult rdf:about="#tr.37.default">
    <valid>pass</valid>
  </TestResult>
  <Test rdf:about="#test.36">
    <!-- Header -->
    <object>Reuters_product.name='Microsoft Excel'.version</object>
    <isContainedBy rdf:resource="#group.prerequisites.software" />
    <priority>0.10002</priority>
    <dc:title xml:lang="en">Microsoft Excel Version:</dc:title>
    <default:recommendation xml:lang="en">Recommended: Excel 2003 SP3 + KB907417, Excel 2007 SP2 + KB968863, or Excel 2010 32-bit + KB2405840</default:recommendation>
    <stdimpl:fileVersionFromProgID>Excel.Application</stdimpl:fileVersionFromProgID>
    <rfs:minXLversion rdf:datatype="http://www.w3.org/2001/XMLSchema#integer">9</rfs:minXLversion>
    <rfs:maxXLversion rdf:datatype="http://www.w3.org/2001/XMLSchema#integer">15</rfs:maxXLversion>
    <rfs:reference2000 rdf:datatype="http://www.w3.org/2001/XMLSchema#integer">9</rfs:reference2000>
    <rfs:referenceXP rdf:datatype="http://www.w3.org/2001/XMLSchema#integer">10</rfs:referenceXP>
    <rfs:reference2003 rdf:datatype="http://www.w3.org/2001/XMLSchema#integer">11</rfs:reference2003>
    <rfs:reference2007 rdf:datatype="http://www.w3.org/2001/XMLSchema#integer">12</rfs:reference2007>
    <rfs:reference2010 rdf:datatype="http://www.w3.org/2001/XMLSchema#integer">14</rfs:reference2010>
    <rfs:reference2013 rdf:datatype="http://www.w3.org/2001/XMLSchema#integer">15</rfs:reference2013>
    <rfs:reference2003SP1 rdf:datatype="http://www.w3.org/2001/XMLSchema#integer">6355</rfs:reference2003SP1>
    <rfs:reference2003SP2 rdf:datatype="http://www.w3.org/2001/XMLSchema#integer">6560</rfs:reference2003SP2>
    <rfs:reference2003SP3 rdf:datatype="http://www.w3.org/2001/XMLSchema#integer">8169</rfs:reference2003SP3>
    <rfs:reference2003KB907417 rdf:datatype="http://www.w3.org/2001/XMLSchema#integer">5077</rfs:reference2003KB907417>
    <rfs:reference2007SP0 rdf:datatype="http://www.w3.org/2001/XMLSchema#integer">4518</rfs:reference2007SP0>
    <rfs:reference2007SP1 rdf:datatype="http://www.w3.org/2001/XMLSchema#integer">6214</rfs:reference2007SP1>
    <rfs:reference2007SP2 rdf:datatype="http://www.w3.org/2001/XMLSchema#integer">6425</rfs:reference2007SP2>
    <rfs:reference2007KB968863 rdf:datatype="http://www.w3.org/2001/XMLSchema#integer">6504</rfs:reference2007KB968863>
    <rfs:reference2007KB2345035 rdf:datatype="http://www.w3.org/2001/XMLSchema#integer">6545</rfs:reference2007KB2345035>
    <rfs:reference2007SP3 rdf:datatype="http://www.w3.org/2001/XMLSchema#integer">6611</rfs:reference2007SP3>
    <rfs:reference2010SP0 rdf:datatype="http://www.w3.org/2001/XMLSchema#integer">4760</rfs:reference2010SP0>
    <rfs:reference2010KB2405840 rdf:datatype="http://www.w3.org/2001/XMLSchema#integer">5128</rfs:reference2010KB2405840>
    <rfs:reference2010SP1 rdf:datatype="http://www.w3.org/2001/XMLSchema#integer">6023</rfs:reference2010SP1>
    <stdimpl:javascript>
      //*******************************************************************************************************

      var rawResult = "Excel";
      var XLMajorVersion = 0;
      var XLBuildVersion = 0;

      //*******************************************************************************************************
      // Create objects

      var wsh = new ActiveXObject( "WScript.Shell" );
      var fso = new ActiveXObject("Scripting.FileSystemObject");

      //*******************************************************************************************************
      // Check side by side installations

      var path = "";
      var sxsInstallationCount = 0;
      var minXLversion = parseInt(testResult.getTest().getProperty("http://www.reuters.com/RSTM/Metadata/minXLversion", ""));
      var maxXLversion = parseInt(testResult.getTest().getProperty("http://www.reuters.com/RSTM/Metadata/maxXLversion", ""));
      Logger.debug("Checking for XL side by side installations from version " + minXLversion + ".0 to " + maxXLversion + ".0");
      for( var xlVersion = minXLversion ; xlVersion &lt;= maxXLversion ; xlVersion++ )
      {
      var is32present = false;
      try
      {
      path = wsh.RegRead("HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Office\\" + xlVersion + ".0\\Excel\\InstallRoot\\Path") + "EXCEL.EXE";
      if( fso.FileExists(path) == true )
      {
      Logger.debug("Found 32-bit XL " + xlVersion + ".0 at " + path);
      sxsInstallationCount++;
      is32present = true;
      }
      }
      catch(e)
      {
      }

      if( is32present == false ) // Check the 64-bit version only if no 32-bit version has been found
      {
      path = "";
      try
      {
      path = RDMC.RDMCLib.Registry.QueryValueEx("HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Office\\" + xlVersion + ".0\\Excel\\InstallRoot\\", "Path", true) + "EXCEL.EXE";
      if( fso.FileExists(path) == true )
      {
      Logger.debug("Found 64-bit XL " + xlVersion + ".0 at " + path);
      sxsInstallationCount++;
      }
      }
      catch(e)
      {
      }
      }
      }
      Logger.debug("Detected side by side XL installations : " + sxsInstallationCount);

      //*******************************************************************************************************
      // Get current Excel version

      if( sxsInstallationCount == 0 )
      {	// Excel is not installed
      rawResult = rawResult + "NotInstalled";
      Logger.debug("Excel is not installed");
      currentProgID = "";
      }
      else if( sxsInstallationCount == 1 )
      {
      // Check Excel installation status
      try
      {
      var foundProgID = wsh.RegRead("HKEY_CLASSES_ROOT\\Excel.Application\\CurVer\\");
      Logger.debug("Found XL ProgID : " + foundProgID);

      var foundCLSID = wsh.RegRead("HKEY_CLASSES_ROOT\\" + foundProgID + "\\CLSID\\");
      Logger.debug("Found XL CLSID : " + foundCLSID);

      var foundPath = wsh.RegRead("HKEY_CLASSES_ROOT\\CLSID\\" + foundCLSID + "\\LocalServer32\\");
      var pathEndPos = foundPath.indexOf(".exe");
      if( pathEndPos == -1 )
      pathEndPos = foundPath.indexOf(".EXE");
      if( foundPath.charAt(0) == "\"" )
      foundPath = foundPath.substring(1,pathEndPos+4);
      else
      foundPath = foundPath.substring(0,pathEndPos+4);
      Logger.debug("Found XL Path : " + foundPath);

      var foundVersion = fso.GetFileVersion(foundPath);
      Logger.debug("Found XL Version : " + foundVersion);
      var sep1 = foundVersion.indexOf(".");
      var sep2 = foundVersion.indexOf(".",sep1+1);
      var sep3 = foundVersion.indexOf(".",sep2+1);
      XLMajorVersion = parseInt(foundVersion.substring(0,sep1));
      Logger.debug("Found XL Major Version : " + XLMajorVersion);
      XLBuildVersion = parseInt(foundVersion.substring(sep2+1,sep3));
      Logger.debug("Found XL Build Version : " + XLBuildVersion);
      }
      catch(e)
      {
      rawResult = rawResult + "Unknown";
      Logger.debug("Unable to determine Excel version");
      }
      } // !ExcelSxS
      else
      {
      rawResult = rawResult + "SxS";
      Logger.debug("Excel side-by-side installations detected");

      var detectedVersions = "";
      var currentVersion = "";

      for( var xlVersion = minXLversion ; xlVersion &lt;= maxXLversion ; xlVersion++ )
      {
      var isXLpresent = false;
      var is32present = false;
      try
      {
      path = wsh.RegRead("HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Office\\" + xlVersion + ".0\\Excel\\InstallRoot\\Path") + "EXCEL.EXE";
      if( fso.FileExists(path) == true )
      {
      Logger.debug("Found 32-bit XL " + xlVersion + ".0 at " + path);
      is32present = true;
      isXLpresent = true;
      }
      }
      catch(e)
      {
      }

      if( is32present == false ) // Check the 64-bit version only if no 32-bit version has been found
      {
      path = "";
      try
      {
      path = RDMC.RDMCLib.Registry.QueryValueEx("HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Office\\" + xlVersion + ".0\\Excel\\InstallRoot\\", "Path", true) + "EXCEL.EXE";
      if( fso.FileExists(path) == true )
      {
      Logger.debug("Found 64-bit XL " + xlVersion + ".0 at " + path);
      isXLpresent = true;
      }
      }
      catch(e)
      {
      }
      }

      if (isXLpresent == true)
      {
      var foundVersion = fso.GetFileVersion(path);
      Logger.debug("Found XL Version : " + foundVersion);
      var sep1 = foundVersion.indexOf(".");
      var sep2 = foundVersion.indexOf(".",sep1+1);
      var sep3 = foundVersion.indexOf(".",sep2+1);
      XLMajorVersion = parseInt(foundVersion.substring(0,sep1));
      Logger.debug("Found XL Major Version : " + XLMajorVersion);
      XLBuildVersion = parseInt(foundVersion.substring(sep2+1,sep3));
      Logger.debug("Found XL Build Version : " + XLBuildVersion);
      }

      if( XLMajorVersion &gt; 0 )
      {
      //*******************************************************************************************************
      // Excel 2003 specific tests

      if( XLMajorVersion == parseInt(testResult.getTest().getProperty("http://www.reuters.com/RSTM/Metadata/reference2003", "")) )
      {
      Logger.debug("Excel 2003 detected");

      var buildSP3 = parseInt(testResult.getTest().getProperty("http://www.reuters.com/RSTM/Metadata/reference2003SP3", ""));
      var buildSP2 = parseInt(testResult.getTest().getProperty("http://www.reuters.com/RSTM/Metadata/reference2003SP2", ""));
      var buildSP1 = parseInt(testResult.getTest().getProperty("http://www.reuters.com/RSTM/Metadata/reference2003SP1", ""));

      // Check SP level
      if( XLBuildVersion &gt;= buildSP3 )
      {
      currentVersion = "Excel 2003 SP3";
      Logger.debug("Excel 2003 SP3 detected");
      }
      else if( XLBuildVersion &gt;= buildSP2 )
      {
      currentVersion = "Excel 2003 SP2";
      Logger.debug("Excel 2003 SP2 detected");
      }
      else if( XLBuildVersion &gt;= buildSP1 )
      {
      currentVersion = "Excel 2003 SP1";
      Logger.debug("Excel 2003 SP1 detected");
      }
      else
      {
      currentVersion = "Excel 2003";
      Logger.debug("Excel 2003 SP0 detected");
      }

      // Check KB907417
      try
      {	// Get file path
      var hfFilePath = wsh.RegRead("HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Office\\11.0\\Common\\InstallRoot\\Path") + "\\ADDINS\\OTKLOADR.DLL";
      if( fso.FileExists(hfFilePath) == true )
      {	// Get its version
      var hfFileVersion = fso.GetFileVersion(hfFilePath);
      var _sep1 = hfFileVersion.indexOf(".");
      var _sep2 = hfFileVersion.indexOf(".",_sep1+1);
      var _sep3 = hfFileVersion.indexOf(".",_sep2+1);
      var hfFileBuild = parseInt(hfFileVersion.substring(_sep2+1,_sep3));

      // Check
      var buildKB907417 = parseInt(testResult.getTest().getProperty("http://www.reuters.com/RSTM/Metadata/reference2003KB907417", ""));
      if( hfFileBuild &gt;= buildKB907417 )
      {
      Logger.debug("Found KB907417 for Office 2003");
      currentVersion = currentVersion + " + KB907417";
      }
      }
      }
      catch(e)
      {
      }
      }

      //*******************************************************************************************************
      // Excel 2007 specific tests

      if( XLMajorVersion == parseInt(testResult.getTest().getProperty("http://www.reuters.com/RSTM/Metadata/reference2007", "")) )
      {
      Logger.debug("Excel 2007 detected");

      var buildSP1 = parseInt(testResult.getTest().getProperty("http://www.reuters.com/RSTM/Metadata/reference2007SP1", ""));
      var buildSP2 = parseInt(testResult.getTest().getProperty("http://www.reuters.com/RSTM/Metadata/reference2007SP2", ""));
      var buildKB968863 = parseInt(testResult.getTest().getProperty("http://www.reuters.com/RSTM/Metadata/reference2007KB968863", ""));
      var buildKB2345035 = parseInt(testResult.getTest().getProperty("http://www.reuters.com/RSTM/Metadata/reference2007KB2345035", ""));
      var buildSP3 = parseInt(testResult.getTest().getProperty("http://www.reuters.com/RSTM/Metadata/reference2007SP3", ""));

      // Get last installed XL version
      var lastInstalledVersion = "";
      try
      {
      lastInstalledVersion = wsh.RegRead("HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Office\\12.0\\Common\\ProductVersion\\LastProduct");
      }
      catch (e)
      {
      }

      Logger.debug("Last installed version : " + lastInstalledVersion);

      // Check SP level
      if( lastInstalledVersion.length &gt; 0 )
      {
      var _sep1 = lastInstalledVersion.indexOf(".");
      var _sep2 = lastInstalledVersion.indexOf(".",_sep1+1);
      var _sep3 = lastInstalledVersion.indexOf(".",_sep2+1);
      LastInstalledBuild = parseInt(foundVersion.substring(_sep2+1,_sep3));

      Logger.debug("Last installed build : " + LastInstalledBuild);

      if( LastInstalledBuild &gt;= buildSP3 )
      {
      currentVersion = "Excel 2007 SP3";
      Logger.debug("Excel 2007 SP3 detected");
      }
      else if( LastInstalledBuild &gt;= buildKB2345035 )
      {
      currentVersion = "Excel 2007 SP2 + KB2345035";
      Logger.debug("Excel 2007 SP2 + KB2345035 detected");
      }
      else if( LastInstalledBuild &gt;= buildKB968863 )
      {
      currentVersion = "Excel 2007 SP2 + KB968863";
      Logger.debug("Excel 2007 SP2 + KB968863 detected");
      }
      else if( LastInstalledBuild &gt;= buildSP2 )
      {
      currentVersion = "Excel 2007 SP2";
      Logger.debug("Excel 2007 SP2 detected");
      }
      else if( LastInstalledBuild &gt;= buildSP1 )
      {
      currentVersion = "Excel 2007 SP1";
      Logger.debug("Excel 2007 SP1 detected");
      }
      else
      {
      currentVersion = "Excel 2007";
      Logger.debug("Excel 2007 SP0 detected");
      }
      }
      }

      //*******************************************************************************************************
      // Excel 2010 specific tests

      if( XLMajorVersion == parseInt(testResult.getTest().getProperty("http://www.reuters.com/RSTM/Metadata/reference2010", "")) )
      {
      Logger.debug("Excel 2010 detected");
      currentVersion = "Excel 2010";

      // Check bitness
      var isExcel2010x64 = false;
      try
      {
      RDMC.RDMCLib.Registry.QueryValueEx("HKEY_CLASSES_ROOT\\OfficeCompatible.Application.x64\\CLSID\\", "", true);
      isExcel2010x64 = true;
      }
      catch(e)
      {
      }

      // Check SP level
      var buildSP1 = parseInt(testResult.getTest().getProperty("http://www.reuters.com/RSTM/Metadata/reference2010SP1", ""));
      if( XLBuildVersion &gt;= buildSP1 )
      {
      Logger.debug("Excel 2010 SP1 detected");
      currentVersion = currentVersion + " SP1";
      }
      else
      {
      // Check KB2405840
      var buildKB2405840 = parseInt(testResult.getTest().getProperty("http://www.reuters.com/RSTM/Metadata/reference2010KB2405840", ""));
      if( XLBuildVersion &gt;= buildKB2405840 )
      {
      Logger.debug("Found KB2405840 for Office 2010");
      currentVersion = currentVersion + " + KB2405840";
      }
      }

      if( isExcel2010x64 )
      currentVersion = currentVersion + " 64-bit";
      else
      currentVersion = currentVersion + " 32-bit";
      }

      //*******************************************************************************************************
      // Excel 2013 specific tests

      if (XLMajorVersion == parseInt(testResult.getTest().getProperty("http://www.reuters.com/RSTM/Metadata/reference2013", "")))
      {
      Logger.debug("Excel 2013 detected");
      currentVersion = "Excel 2013";

      // Check bitness
      var isExcel2013x64 = false;
      try
      {
      RDMC.RDMCLib.Registry.QueryValueEx("HKEY_CLASSES_ROOT\\OfficeCompatible.Application.x64\\CLSID\\", "", true);
      isExcel2013x64 = true;
      }
      catch(e)
      {
      }

      if (isExcel2013x64)
      {
      currentVersion = currentVersion + " 64-bit";
      }
      else
      {
      currentVersion = currentVersion + " 32-bit";
      }
      }

      if (detectedVersions.length == 0)
      {
      detectedVersions = currentVersion;
      }
      else
      {
      detectedVersions = detectedVersions + ", " + currentVersion;
      }
      }

      XLMajorVersion = 0;
      currentVersion = "";
      }

      testResult.setProperty("detectedVersions", detectedVersions, "");
      }

      if( XLMajorVersion &gt; 0 )
      {	// An Excel version could be found, do version specific checks

      //*******************************************************************************************************
      // Add Excel Major Version

      rawResult = rawResult + XLMajorVersion;

      //*******************************************************************************************************
      // Excel 2003 specific tests

      if( XLMajorVersion == parseInt(testResult.getTest().getProperty("http://www.reuters.com/RSTM/Metadata/reference2003", "")) )
      {
      Logger.debug("Excel 2003 detected");

      var buildSP3 = parseInt(testResult.getTest().getProperty("http://www.reuters.com/RSTM/Metadata/reference2003SP3", ""));
      var buildSP2 = parseInt(testResult.getTest().getProperty("http://www.reuters.com/RSTM/Metadata/reference2003SP2", ""));
      var buildSP1 = parseInt(testResult.getTest().getProperty("http://www.reuters.com/RSTM/Metadata/reference2003SP1", ""));

      // Check SP level
      if( XLBuildVersion &gt;= buildSP3 )
      {
      rawResult = rawResult + "_SP3";
      Logger.debug("Excel 2003 SP3 detected");
      }
      else if( XLBuildVersion &gt;= buildSP2 )
      {
      rawResult = rawResult + "_SP2";
      Logger.debug("Excel 2003 SP2 detected");
      }
      else if( XLBuildVersion &gt;= buildSP1 )
      {
      rawResult = rawResult + "_SP1";
      Logger.debug("Excel 2003 SP1 detected");
      }
      else
      {
      rawResult = rawResult + "_SP0";
      Logger.debug("Excel 2003 SP0 detected");
      }

      // Check KB907417
      try
      {	// Get file path
      var hfFilePath = wsh.RegRead("HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Office\\11.0\\Common\\InstallRoot\\Path") + "\\ADDINS\\OTKLOADR.DLL";
      if( fso.FileExists(hfFilePath) == true )
      {	// Get its version
      var hfFileVersion = fso.GetFileVersion(hfFilePath);
      var _sep1 = hfFileVersion.indexOf(".");
      var _sep2 = hfFileVersion.indexOf(".",_sep1+1);
      var _sep3 = hfFileVersion.indexOf(".",_sep2+1);
      var hfFileBuild = parseInt(hfFileVersion.substring(_sep2+1,_sep3));

      // Check
      var buildKB907417 = parseInt(testResult.getTest().getProperty("http://www.reuters.com/RSTM/Metadata/reference2003KB907417", ""));
      if( hfFileBuild &gt;= buildKB907417 )
      {
      Logger.debug("Found KB907417 for Office 2003");
      rawResult = rawResult + "_KB907417";
      }
      }
      }
      catch(e)
      {
      }
      }

      //*******************************************************************************************************
      // Excel 2007 specific tests

      if( XLMajorVersion == parseInt(testResult.getTest().getProperty("http://www.reuters.com/RSTM/Metadata/reference2007", "")) )
      {
      Logger.debug("Excel 2007 detected");

      var buildSP1 = parseInt(testResult.getTest().getProperty("http://www.reuters.com/RSTM/Metadata/reference2007SP1", ""));
      var buildSP2 = parseInt(testResult.getTest().getProperty("http://www.reuters.com/RSTM/Metadata/reference2007SP2", ""));
      var buildKB968863 = parseInt(testResult.getTest().getProperty("http://www.reuters.com/RSTM/Metadata/reference2007KB968863", ""));
      var buildKB2345035 = parseInt(testResult.getTest().getProperty("http://www.reuters.com/RSTM/Metadata/reference2007KB2345035", ""));
      var buildSP3 = parseInt(testResult.getTest().getProperty("http://www.reuters.com/RSTM/Metadata/reference2007SP3", ""));

      // Get last installed XL version
      var lastInstalledVersion = "";
      try
      {
      lastInstalledVersion = wsh.RegRead("HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Office\\12.0\\Common\\ProductVersion\\LastProduct");
      }
      catch (e)
      {
      }

      Logger.debug("Last installed version : " + lastInstalledVersion);

      // Check SP level
      if( lastInstalledVersion.length &gt; 0 )
      {
      var _sep1 = lastInstalledVersion.indexOf(".");
      var _sep2 = lastInstalledVersion.indexOf(".",_sep1+1);
      var _sep3 = lastInstalledVersion.indexOf(".",_sep2+1);
      LastInstalledBuild = parseInt(foundVersion.substring(_sep2+1,_sep3));

      Logger.debug("Last installed build : " + LastInstalledBuild);

      if( LastInstalledBuild &gt;= buildSP3 )
      {
      rawResult = rawResult + "_SP3";
      Logger.debug("Excel 2007 SP3 detected");
      }
      else if( LastInstalledBuild &gt;= buildKB2345035 )
      {
      rawResult = rawResult + "_SP2_KB2345035";
      Logger.debug("Excel 2007 SP2 + KB2345035 detected");
      }
      else if( LastInstalledBuild &gt;= buildKB968863 )
      {
      rawResult = rawResult + "_SP2_KB968863";
      Logger.debug("Excel 2007 SP2 + KB968863 detected");
      }
      else if( LastInstalledBuild &gt;= buildSP2 )
      {
      rawResult = rawResult + "_SP2";
      Logger.debug("Excel 2007 SP2 detected");
      }
      else if( LastInstalledBuild &gt;= buildSP1 )
      {
      rawResult = rawResult + "_SP1";
      Logger.debug("Excel 2007 SP1 detected");
      }
      else
      {
      rawResult = rawResult + "_SP0";
      Logger.debug("Excel 2007 SP0 detected");
      }
      }
      }

      //*******************************************************************************************************
      // Excel 2010 specific tests

      if( XLMajorVersion == parseInt(testResult.getTest().getProperty("http://www.reuters.com/RSTM/Metadata/reference2010", "")) )
      {
      Logger.debug("Excel 2010 detected");

      // Check bitness
      var isExcel2010x64 = false;
      try
      {
      RDMC.RDMCLib.Registry.QueryValueEx("HKEY_CLASSES_ROOT\\OfficeCompatible.Application.x64\\CLSID\\", "", true);
      isExcel2010x64 = true;
      }
      catch(e)
      {
      }
      if( isExcel2010x64 )
      rawResult = rawResult + "_x64";
      else
      rawResult = rawResult + "_x86";

      // Check SP level
      var buildSP1 = parseInt(testResult.getTest().getProperty("http://www.reuters.com/RSTM/Metadata/reference2010SP1", ""));
      if( XLBuildVersion &gt;= buildSP1 )
      {
      Logger.debug("Excel 2010 SP1 detected");
      rawResult = rawResult + "_SP1";
      }
      else
      {
      rawResult = rawResult + "_SP0";

      // Check KB2405840
      var buildKB2405840 = parseInt(testResult.getTest().getProperty("http://www.reuters.com/RSTM/Metadata/reference2010KB2405840", ""));
      if( XLBuildVersion &gt;= buildKB2405840 )
      {
      Logger.debug("Found KB2405840 for Office 2010");
      rawResult = rawResult + "_KB2405840";
      }
      }
      }

      //*******************************************************************************************************
      // Excel 2013 specific tests

      if (XLMajorVersion == parseInt(testResult.getTest().getProperty("http://www.reuters.com/RSTM/Metadata/reference2013", "")))
      {
      Logger.debug("Excel 2013 detected");

      // Check bitness
      var isExcel2013x64 = false;
      try
      {
      RDMC.RDMCLib.Registry.QueryValueEx("HKEY_CLASSES_ROOT\\OfficeCompatible.Application.x64\\CLSID\\", "", true);
      isExcel2013x64 = true;
      }
      catch(e)
      {
      }
      if (isExcel2013x64)
      {
      rawResult = rawResult + "_x64";
      }
      else
      {
      rawResult = rawResult + "_x86";
      }

      // Check SP level
      rawResult = rawResult + "_SP0";
      }
      }

      //*******************************************************************************************************
      // Add Eikon product installation status
      rawResult = rawResult + GetProductInstallationStatus();

      function GetProductInstallationStatus()
      {
      var status = "_TRD";

      if (IsPrerequisitesCheck())
      {
      if (IsInstallingExcelTargetX64())
      {
      status = status + "x64";
      }
      }
      else
      {
      if (IsInstalledExcelTargetX64())
      {
      status = status + "x64";
      }
      }

      if (IsProductInstalled())
      {
      status = status + "Installed";
      }
      else
      {
      status = status + "NotInstalled";
      }
      return status;
      }

      function IsProductInstalled()
      {
      // Return [true] if the product is installed,
      // except in prerequisites check mode will return [false].
      return RDMC.isProductInstalled();
      }

      function IsInstalledExcelTargetX64()
      {
      var isInstalledExcelTargetX64 = false;
      try
      {
      var excelTarget = RDMC.versionInfo.TRD6.m_excelTarget;
      Logger.debug("Current Excel Target = [" + excelTarget + "]");
      isInstalledExcelTargetX64 = (excelTarget == "x64");
      }
      catch (e) {}
      Logger.debug("IsInstalledExcelTargetX64() = " + isInstalledExcelTargetX64);
      return isInstalledExcelTargetX64;
      }

      function IsInstallingExcelTargetX64()
      {
      var configProvider = RDMC.KobraProviderManager.FindProvider("Configuration");
      var isInstallingExcelTargetX64 = false;
      try
      {
      var excelTarget = configProvider.GetPropertyValue("RDMC.ExcelTarget");
      Logger.debug("Installing Excel Target = [" + excelTarget + "]");
      isInstallingExcelTargetX64 = (excelTarget == "x64");
      }
      catch (e) {}
      Logger.debug("IsInstallingExcelTargetX64() = " + isInstallingExcelTargetX64);
      return isInstallingExcelTargetX64;
      }

      function IsPrerequisitesCheck()
      {
      var configProvider = RDMC.KobraProviderManager.FindProvider("Configuration");
      var isPrerequisitesCheck = false;
      try
      {
      var isRDMCCheckingPrerequisites = configProvider.GetPropertyValue("RDMC.CheckingPrerequisites");
      Logger.debug("RDMC.CheckingPrerequisites = [" + isRDMCCheckingPrerequisites + "]");
      isPrerequisitesCheck = (isRDMCCheckingPrerequisites == "true");
      }
      catch(e) {}
      Logger.debug("IsPrerequisitesCheck() = " + isPrerequisitesCheck);
      return isPrerequisitesCheck;
      }

      //*******************************************************************************************************
      // Result
      testResult.setRawResult(rawResult);
    </stdimpl:javascript>
    <!-- ********************************************************************************* -->
    <!-- Excel Not Installed -->
    <!-- ********************************************************************************* -->
    <testResult>
      <TestResult rdf:about="#tr.36.excel.not_installed.no_trd">
        <value>ExcelNotInstalled_TRDNotInstalled</value>
        <valid>alert</valid>
        <outcome rdf:resource="#to.36.excel.notinstalled" />
        <redef:redefinesWith rdf:resource="#redef.excelversion.notinstalled" />
      </TestResult>
    </testResult>
    <!-- ********************************************************************************* -->
    <testResult>
      <TestResult rdf:about="#tr.36.excel.not_installed.trd">
        <value>ExcelNotInstalled_TRDInstalled</value>
        <valid>alert</valid>
        <outcome rdf:resource="#to.36.excel.notinstalled" />
        <redef:redefinesWith rdf:resource="#redef.excelversion.notinstalled" />
      </TestResult>
    </testResult>
    <!-- ********************************************************************************* -->
    <testResult>
      <TestResult rdf:about="#tr.36.excel.not_installed.no_trd_x64">
        <value>ExcelNotInstalled_TRDx64NotInstalled</value>
        <valid>alert</valid>
        <outcome rdf:resource="#to.36.recommendation.x64" />
        <outcome rdf:resource="#to.36.excel.notinstalled" />
        <redef:redefinesWith rdf:resource="#redef.excelversion.notinstalled" />
      </TestResult>
    </testResult>
    <!-- ********************************************************************************* -->
    <testResult>
      <TestResult rdf:about="#tr.36.excel.not_installed.trd_x64">
        <value>ExcelNotInstalled_TRDx64Installed</value>
        <valid>alert</valid>
        <outcome rdf:resource="#to.36.recommendation.x64" />
        <outcome rdf:resource="#to.36.excel.notinstalled" />
        <redef:redefinesWith rdf:resource="#redef.excelversion.notinstalled" />
      </TestResult>
    </testResult>
    <!-- ********************************************************************************* -->
    <!-- Excel Side by Side installations -->
    <!-- ********************************************************************************* -->
    <testResult>
      <TestResult rdf:about="#tr.36.excel.sxs.no_trd">
        <value>ExcelSxS_TRDNotInstalled</value>
        <valid>alert</valid>
        <outcome rdf:resource="#to.36.excel.sxs" />
        <redef:redefinesWith rdf:resource="#redef.excelversion.sxs" />
      </TestResult>
    </testResult>
    <!-- ********************************************************************************* -->
    <testResult>
      <TestResult rdf:about="#tr.36.excel.sxs.trd">
        <value>ExcelSxS_TRDInstalled</value>
        <valid>alert</valid>
        <outcome rdf:resource="#to.36.excel.sxs" />
        <redef:redefinesWith rdf:resource="#redef.excelversion.sxs" />
      </TestResult>
    </testResult>
    <!-- ********************************************************************************* -->
    <testResult>
      <TestResult rdf:about="#tr.36.excel.sxs.no_trd_x64">
        <value>ExcelSxS_TRDx64NotInstalled</value>
        <valid>alert</valid>
        <outcome rdf:resource="#to.36.recommendation.x64" />
        <outcome rdf:resource="#to.36.excel.sxs" />
        <redef:redefinesWith rdf:resource="#redef.excelversion.sxs" />
      </TestResult>
    </testResult>
    <!-- ********************************************************************************* -->
    <testResult>
      <TestResult rdf:about="#tr.36.excel.sxs.trd_x64">
        <value>ExcelSxS_TRDx64Installed</value>
        <valid>alert</valid>
        <outcome rdf:resource="#to.36.recommendation.x64" />
        <outcome rdf:resource="#to.36.excel.sxs" />
        <redef:redefinesWith rdf:resource="#redef.excelversion.sxs" />
      </TestResult>
    </testResult>
    <!-- ********************************************************************************* -->
    <!-- Excel 2000 -->
    <!-- ********************************************************************************* -->
    <testResult>
      <TestResult rdf:about="#tr.36.excel.2000.no_trd">
        <value>Excel9_TRDNotInstalled</value>
        <valid>alert</valid>
        <outcome rdf:resource="#to.36.excel.supported_not_found" />
        <redef:redefinesWith rdf:resource="#redef.excelversion.2000" />
      </TestResult>
    </testResult>
    <!-- ********************************************************************************* -->
    <testResult>
      <TestResult rdf:about="#tr.36.excel.2000.trd">
        <value>Excel9_TRDInstalled</value>
        <valid>fail</valid>
        <outcome rdf:resource="#to.36.excel.supported_not_found" />
        <redef:redefinesWith rdf:resource="#redef.excelversion.2000" />
      </TestResult>
    </testResult>
    <!-- ********************************************************************************* -->
    <testResult>
      <TestResult rdf:about="#tr.36.excel.2000.no_trd_x64">
        <value>Excel9_TRDx64NotInstalled</value>
        <valid>fail</valid>
        <outcome rdf:resource="#to.36.recommendation.x64" />
        <outcome rdf:resource="#to.36.excel.supported_not_found" />
        <redef:redefinesWith rdf:resource="#redef.excelversion.2000" />
      </TestResult>
    </testResult>
    <!-- ********************************************************************************* -->
    <testResult>
      <TestResult rdf:about="#tr.36.excel.2000.trd_x64">
        <value>Excel9_TRDx64Installed</value>
        <valid>fail</valid>
        <outcome rdf:resource="#to.36.recommendation.x64" />
        <outcome rdf:resource="#to.36.excel.supported_not_found" />
        <redef:redefinesWith rdf:resource="#redef.excelversion.2000" />
      </TestResult>
    </testResult>
    <!-- ********************************************************************************* -->
    <!-- Excel XP -->
    <!-- ********************************************************************************* -->
    <testResult>
      <TestResult rdf:about="#tr.36.excel.XP.no_trd">
        <value>Excel10_TRDNotInstalled</value>
        <valid>alert</valid>
        <outcome rdf:resource="#to.36.excel.supported_not_found" />
        <redef:redefinesWith rdf:resource="#redef.excelversion.XP" />
      </TestResult>
    </testResult>
    <!-- ********************************************************************************* -->
    <testResult>
      <TestResult rdf:about="#tr.36.excel.XP.trd">
        <value>Excel10_TRDInstalled</value>
        <valid>alert</valid>
        <outcome rdf:resource="#to.36.excel.supported_not_found" />
        <redef:redefinesWith rdf:resource="#redef.excelversion.XP" />
      </TestResult>
    </testResult>
    <!-- ********************************************************************************* -->
    <testResult>
      <TestResult rdf:about="#tr.36.excel.XP.no_trd_x64">
        <value>Excel10_TRDx64NotInstalled</value>
        <valid>fail</valid>
        <outcome rdf:resource="#to.36.recommendation.x64" />
        <outcome rdf:resource="#to.36.excel.supported_not_found" />
        <redef:redefinesWith rdf:resource="#redef.excelversion.XP" />
      </TestResult>
    </testResult>
    <!-- ********************************************************************************* -->
    <testResult>
      <TestResult rdf:about="#tr.36.excel.XP.trd_x64">
        <value>Excel10_TRDx64Installed</value>
        <valid>fail</valid>
        <outcome rdf:resource="#to.36.recommendation.x64" />
        <outcome rdf:resource="#to.36.excel.supported_not_found" />
        <redef:redefinesWith rdf:resource="#redef.excelversion.XP" />
      </TestResult>
    </testResult>
    <!-- ********************************************************************************* -->
    <!-- Excel 2003 SP0 -->
    <!-- ********************************************************************************* -->
    <testResult>
      <TestResult rdf:about="#tr.36.excel.2003_SP0.no_trd">
        <value>Excel11_SP0_TRDNotInstalled</value>
        <valid>alert</valid>
        <outcome rdf:resource="#to.36.excel.supported_not_found" />
        <redef:redefinesWith rdf:resource="#redef.excelversion.2003" />
      </TestResult>
    </testResult>
    <!-- ********************************************************************************* -->
    <testResult>
      <TestResult rdf:about="#tr.36.excel.2003_SP0.trd">
        <value>Excel11_SP0_TRDInstalled</value>
        <valid>fail</valid>
        <outcome rdf:resource="#to.36.excel.supported_not_found" />
        <redef:redefinesWith rdf:resource="#redef.excelversion.2003" />
      </TestResult>
    </testResult>
    <!-- ********************************************************************************* -->
    <testResult>
      <TestResult rdf:about="#tr.36.excel.2003_SP0.no_trd_x64">
        <value>Excel11_SP0_TRDx64NotInstalled</value>
        <valid>fail</valid>
        <outcome rdf:resource="#to.36.recommendation.x64" />
        <outcome rdf:resource="#to.36.excel.supported_not_found" />
        <redef:redefinesWith rdf:resource="#redef.excelversion.2003" />
      </TestResult>
    </testResult>
    <!-- ********************************************************************************* -->
    <testResult>
      <TestResult rdf:about="#tr.36.excel.2003_SP0.trd_x64">
        <value>Excel11_SP0_TRDx64Installed</value>
        <valid>fail</valid>
        <outcome rdf:resource="#to.36.recommendation.x64" />
        <outcome rdf:resource="#to.36.excel.supported_not_found" />
        <redef:redefinesWith rdf:resource="#redef.excelversion.2003" />
      </TestResult>
    </testResult>
    <!-- ********************************************************************************* -->
    <!-- Excel 2003 SP0 + KB907417 -->
    <!-- ********************************************************************************* -->
    <testResult>
      <TestResult rdf:about="#tr.36.excel.2003_SP0.KB907417.no_trd">
        <value>Excel11_SP0_KB907417_TRDNotInstalled</value>
        <valid>alert</valid>
        <outcome rdf:resource="#to.36.excel.supported_not_found" />
        <redef:redefinesWith rdf:resource="#redef.excelversion.2003" />
      </TestResult>
    </testResult>
    <!-- ********************************************************************************* -->
    <testResult>
      <TestResult rdf:about="#tr.36.excel.2003_SP0.KB907417.trd">
        <value>Excel11_SP0_KB907417_TRDInstalled</value>
        <valid>fail</valid>
        <outcome rdf:resource="#to.36.excel.supported_not_found" />
        <redef:redefinesWith rdf:resource="#redef.excelversion.2003" />
      </TestResult>
    </testResult>
    <!-- ********************************************************************************* -->
    <testResult>
      <TestResult rdf:about="#tr.36.excel.2003_SP0.KB907417.no_trd_x64">
        <value>Excel11_SP0_KB907417_TRDx64NotInstalled</value>
        <valid>fail</valid>
        <outcome rdf:resource="#to.36.recommendation.x64" />
        <outcome rdf:resource="#to.36.excel.supported_not_found" />
        <redef:redefinesWith rdf:resource="#redef.excelversion.2003" />
      </TestResult>
    </testResult>
    <!-- ********************************************************************************* -->
    <testResult>
      <TestResult rdf:about="#tr.36.excel.2003_SP0.KB907417.trd_x64">
        <value>Excel11_SP0_KB907417_TRDx64Installed</value>
        <valid>fail</valid>
        <outcome rdf:resource="#to.36.recommendation.x64" />
        <outcome rdf:resource="#to.36.excel.supported_not_found" />
        <redef:redefinesWith rdf:resource="#redef.excelversion.2003" />
      </TestResult>
    </testResult>
    <!-- ********************************************************************************* -->
    <!-- Excel 2003 SP1 -->
    <!-- ********************************************************************************* -->
    <testResult>
      <TestResult rdf:about="#tr.36.excel.2003_SP1.no_trd">
        <value>Excel11_SP1_TRDNotInstalled</value>
        <valid>alert</valid>
        <outcome rdf:resource="#to.36.excel.supported_not_found" />
        <redef:redefinesWith rdf:resource="#redef.excelversion.2003" />
      </TestResult>
    </testResult>
    <!-- ********************************************************************************* -->
    <testResult>
      <TestResult rdf:about="#tr.36.excel.2003_SP1.trd">
        <value>Excel11_SP1_TRDInstalled</value>
        <valid>fail</valid>
        <outcome rdf:resource="#to.36.excel.supported_not_found" />
        <redef:redefinesWith rdf:resource="#redef.excelversion.2003" />
      </TestResult>
    </testResult>
    <!-- ********************************************************************************* -->
    <testResult>
      <TestResult rdf:about="#tr.36.excel.2003_SP1.no_trd_x64">
        <value>Excel11_SP1_TRDx64NotInstalled</value>
        <valid>fail</valid>
        <outcome rdf:resource="#to.36.recommendation.x64" />
        <outcome rdf:resource="#to.36.excel.supported_not_found" />
        <redef:redefinesWith rdf:resource="#redef.excelversion.2003" />
      </TestResult>
    </testResult>
    <!-- ********************************************************************************* -->
    <testResult>
      <TestResult rdf:about="#tr.36.excel.2003_SP1.trd_x64">
        <value>Excel11_SP1_TRDx64Installed</value>
        <valid>fail</valid>
        <outcome rdf:resource="#to.36.recommendation.x64" />
        <outcome rdf:resource="#to.36.excel.supported_not_found" />
        <redef:redefinesWith rdf:resource="#redef.excelversion.2003" />
      </TestResult>
    </testResult>
    <!-- ********************************************************************************* -->
    <!-- Excel 2003 SP1 + KB907417 -->
    <!-- ********************************************************************************* -->
    <testResult>
      <TestResult rdf:about="#tr.36.excel.2003_SP1.KB907417.no_trd">
        <value>Excel11_SP1_KB907417_TRDNotInstalled</value>
        <valid>alert</valid>
        <outcome rdf:resource="#to.36.excel.supported_not_found" />
        <redef:redefinesWith rdf:resource="#redef.excelversion.2003" />
      </TestResult>
    </testResult>
    <!-- ********************************************************************************* -->
    <testResult>
      <TestResult rdf:about="#tr.36.excel.2003_SP1.KB907417.trd">
        <value>Excel11_SP1_KB907417_TRDInstalled</value>
        <valid>fail</valid>
        <outcome rdf:resource="#to.36.excel.supported_not_found" />
        <redef:redefinesWith rdf:resource="#redef.excelversion.2003" />
      </TestResult>
    </testResult>
    <!-- ********************************************************************************* -->
    <testResult>
      <TestResult rdf:about="#tr.36.excel.2003_SP1.KB907417.no_trd_x64">
        <value>Excel11_SP1_KB907417_TRDx64NotInstalled</value>
        <valid>fail</valid>
        <outcome rdf:resource="#to.36.recommendation.x64" />
        <outcome rdf:resource="#to.36.excel.supported_not_found" />
        <redef:redefinesWith rdf:resource="#redef.excelversion.2003" />
      </TestResult>
    </testResult>
    <!-- ********************************************************************************* -->
    <testResult>
      <TestResult rdf:about="#tr.36.excel.2003_SP1.KB907417.trd_x64">
        <value>Excel11_SP1_KB907417_TRDx64Installed</value>
        <valid>fail</valid>
        <outcome rdf:resource="#to.36.recommendation.x64" />
        <outcome rdf:resource="#to.36.excel.supported_not_found" />
        <redef:redefinesWith rdf:resource="#redef.excelversion.2003" />
      </TestResult>
    </testResult>
    <!-- ********************************************************************************* -->
    <!-- Excel 2003 SP2 -->
    <!-- ********************************************************************************* -->
    <testResult>
      <TestResult rdf:about="#tr.36.excel.2003_SP2.no_trd">
        <value>Excel11_SP2_TRDNotInstalled</value>
        <valid>alert</valid>
        <outcome rdf:resource="#to.36.excel.supported_not_found" />
        <redef:redefinesWith rdf:resource="#redef.excelversion.2003" />
      </TestResult>
    </testResult>
    <!-- ********************************************************************************* -->
    <testResult>
      <TestResult rdf:about="#tr.36.excel.2003_SP2.trd">
        <value>Excel11_SP2_TRDInstalled</value>
        <valid>fail</valid>
        <outcome rdf:resource="#to.36.excel.supported_not_found" />
        <redef:redefinesWith rdf:resource="#redef.excelversion.2003" />
      </TestResult>
    </testResult>
    <!-- ********************************************************************************* -->
    <testResult>
      <TestResult rdf:about="#tr.36.excel.2003_SP2.no_trd_x64">
        <value>Excel11_SP2_TRDx64NotInstalled</value>
        <valid>fail</valid>
        <outcome rdf:resource="#to.36.recommendation.x64" />
        <outcome rdf:resource="#to.36.excel.supported_not_found" />
        <redef:redefinesWith rdf:resource="#redef.excelversion.2003" />
      </TestResult>
    </testResult>
    <!-- ********************************************************************************* -->
    <testResult>
      <TestResult rdf:about="#tr.36.excel.2003_SP2.trd_x64">
        <value>Excel11_SP2_TRDx64Installed</value>
        <valid>fail</valid>
        <outcome rdf:resource="#to.36.recommendation.x64" />
        <outcome rdf:resource="#to.36.excel.supported_not_found" />
        <redef:redefinesWith rdf:resource="#redef.excelversion.2003" />
      </TestResult>
    </testResult>
    <!-- ********************************************************************************* -->
    <!-- Excel 2003 SP2 + KB907417 -->
    <!-- ********************************************************************************* -->
    <testResult>
      <TestResult rdf:about="#tr.36.excel.2003_SP2.KB907417.no_trd">
        <value>Excel11_SP2_KB907417_TRDNotInstalled</value>
        <valid>alert</valid>
        <outcome rdf:resource="#to.36.excel.supported_not_found" />
        <redef:redefinesWith rdf:resource="#redef.excelversion.2003" />
      </TestResult>
    </testResult>
    <!-- ********************************************************************************* -->
    <testResult>
      <TestResult rdf:about="#tr.36.excel.2003_SP2.KB907417.trd">
        <value>Excel11_SP2_KB907417_TRDInstalled</value>
        <valid>fail</valid>
        <outcome rdf:resource="#to.36.excel.supported_not_found" />
        <redef:redefinesWith rdf:resource="#redef.excelversion.2003" />
      </TestResult>
    </testResult>
    <!-- ********************************************************************************* -->
    <testResult>
      <TestResult rdf:about="#tr.36.excel.2003_SP2.KB907417.no_trd_x64">
        <value>Excel11_SP2_KB907417_TRDx64NotInstalled</value>
        <valid>fail</valid>
        <outcome rdf:resource="#to.36.recommendation.x64" />
        <outcome rdf:resource="#to.36.excel.supported_not_found" />
        <redef:redefinesWith rdf:resource="#redef.excelversion.2003" />
      </TestResult>
    </testResult>
    <!-- ********************************************************************************* -->
    <testResult>
      <TestResult rdf:about="#tr.36.excel.2003_SP2.KB907417.trd_x64">
        <value>Excel11_SP2_KB907417_TRDx64Installed</value>
        <valid>fail</valid>
        <outcome rdf:resource="#to.36.recommendation.x64" />
        <outcome rdf:resource="#to.36.excel.supported_not_found" />
        <redef:redefinesWith rdf:resource="#redef.excelversion.2003" />
      </TestResult>
    </testResult>
    <!-- ********************************************************************************* -->
    <!-- Excel 2003 SP3 -->
    <!-- ********************************************************************************* -->
    <testResult>
      <TestResult rdf:about="#tr.36.excel.2003_SP3.no_trd">
        <value>Excel11_SP3_TRDNotInstalled</value>
        <valid>alert</valid>
        <outcome rdf:resource="#to.36.excel.supported_not_found" />
        <redef:redefinesWith rdf:resource="#redef.excelversion.2003" />
      </TestResult>
    </testResult>
    <!-- ********************************************************************************* -->
    <testResult>
      <TestResult rdf:about="#tr.36.excel.2003_SP3.trd">
        <value>Excel11_SP3_TRDInstalled</value>
        <valid>fail</valid>
        <outcome rdf:resource="#to.36.excel.supported_not_found" />
        <redef:redefinesWith rdf:resource="#redef.excelversion.2003" />
      </TestResult>
    </testResult>
    <!-- ********************************************************************************* -->
    <testResult>
      <TestResult rdf:about="#tr.36.excel.2003_SP3.no_trd_x64">
        <value>Excel11_SP3_TRDx64NotInstalled</value>
        <valid>fail</valid>
        <outcome rdf:resource="#to.36.recommendation.x64" />
        <outcome rdf:resource="#to.36.excel.supported_not_found" />
        <redef:redefinesWith rdf:resource="#redef.excelversion.2003" />
      </TestResult>
    </testResult>
    <!-- ********************************************************************************* -->
    <testResult>
      <TestResult rdf:about="#tr.36.excel.2003_SP3.trd_x64">
        <value>Excel11_SP3_TRDx64Installed</value>
        <valid>fail</valid>
        <outcome rdf:resource="#to.36.recommendation.x64" />
        <outcome rdf:resource="#to.36.excel.supported_not_found" />
        <redef:redefinesWith rdf:resource="#redef.excelversion.2003" />
      </TestResult>
    </testResult>
    <!-- ********************************************************************************* -->
    <!-- Excel 2003 SP3 + KB907417 -->
    <!-- ********************************************************************************* -->
    <testResult>
      <TestResult rdf:about="#tr.36.excel.2003_SP3.KB907417.no_trd">
        <value>Excel11_SP3_KB907417_TRDNotInstalled</value>
        <valid>pass</valid>
        <outcome rdf:resource="#to.36.excel.2003_SP3.KB907417" />
        <redef:redefinesWith rdf:resource="#redef.excelversion.2003" />
      </TestResult>
    </testResult>
    <!-- ********************************************************************************* -->
    <testResult>
      <TestResult rdf:about="#tr.36.excel.2003_SP3.KB907417.trd">
        <value>Excel11_SP3_KB907417_TRDInstalled</value>
        <valid>pass</valid>
        <outcome rdf:resource="#to.36.excel.2003_SP3.KB907417" />
        <redef:redefinesWith rdf:resource="#redef.excelversion.2003" />
      </TestResult>
    </testResult>
    <!-- ********************************************************************************* -->
    <testResult>
      <TestResult rdf:about="#tr.36.excel.2003_SP3.KB907417.no_trd_x64">
        <value>Excel11_SP3_KB907417_TRDx64NotInstalled</value>
        <valid>fail</valid>
        <outcome rdf:resource="#to.36.recommendation.x64" />
        <outcome rdf:resource="#to.36.excel.supported_not_found" />
        <redef:redefinesWith rdf:resource="#redef.excelversion.2003" />
      </TestResult>
    </testResult>
    <!-- ********************************************************************************* -->
    <testResult>
      <TestResult rdf:about="#tr.36.excel.2003_SP3.KB907417.trd_x64">
        <value>Excel11_SP3_KB907417_TRDx64Installed</value>
        <valid>fail</valid>
        <outcome rdf:resource="#to.36.recommendation.x64" />
        <outcome rdf:resource="#to.36.excel.supported_not_found" />
        <redef:redefinesWith rdf:resource="#redef.excelversion.2003" />
      </TestResult>
    </testResult>
    <!-- ********************************************************************************* -->
    <!-- Excel 2007 SP0 -->
    <!-- ********************************************************************************* -->
    <testResult>
      <TestResult rdf:about="#tr.36.excel.2007_SP0.no_trd">
        <value>Excel12_SP0_TRDNotInstalled</value>
        <valid>alert</valid>
        <outcome rdf:resource="#to.36.excel.supported_not_found" />
        <redef:redefinesWith rdf:resource="#redef.excelversion.2007" />
      </TestResult>
    </testResult>
    <!-- ********************************************************************************* -->
    <testResult>
      <TestResult rdf:about="#tr.36.excel.2007_SP0.trd">
        <value>Excel12_SP0_TRDInstalled</value>
        <valid>fail</valid>
        <outcome rdf:resource="#to.36.excel.supported_not_found" />
        <redef:redefinesWith rdf:resource="#redef.excelversion.2007" />
      </TestResult>
    </testResult>
    <!-- ********************************************************************************* -->
    <testResult>
      <TestResult rdf:about="#tr.36.excel.2007_SP0.no_trd_x64">
        <value>Excel12_SP0_TRDx64NotInstalled</value>
        <valid>fail</valid>
        <outcome rdf:resource="#to.36.recommendation.x64" />
        <outcome rdf:resource="#to.36.excel.supported_not_found" />
        <redef:redefinesWith rdf:resource="#redef.excelversion.2007" />
      </TestResult>
    </testResult>
    <!-- ********************************************************************************* -->
    <testResult>
      <TestResult rdf:about="#tr.36.excel.2007_SP0.trd_x64">
        <value>Excel12_SP0_TRDx64Installed</value>
        <valid>fail</valid>
        <outcome rdf:resource="#to.36.recommendation.x64" />
        <outcome rdf:resource="#to.36.excel.supported_not_found" />
        <redef:redefinesWith rdf:resource="#redef.excelversion.2007" />
      </TestResult>
    </testResult>
    <!-- ********************************************************************************* -->
    <!-- Excel 2007 SP1 -->
    <!-- ********************************************************************************* -->
    <testResult>
      <TestResult rdf:about="#tr.36.excel.2007_SP1.no_trd">
        <value>Excel12_SP1_TRDNotInstalled</value>
        <valid>alert</valid>
        <outcome rdf:resource="#to.36.excel.supported_not_found" />
        <redef:redefinesWith rdf:resource="#redef.excelversion.2007" />
      </TestResult>
    </testResult>
    <!-- ********************************************************************************* -->
    <testResult>
      <TestResult rdf:about="#tr.36.excel.2007_SP1.trd">
        <value>Excel12_SP1_TRDInstalled</value>
        <valid>fail</valid>
        <outcome rdf:resource="#to.36.excel.supported_not_found" />
        <redef:redefinesWith rdf:resource="#redef.excelversion.2007" />
      </TestResult>
    </testResult>
    <!-- ********************************************************************************* -->
    <testResult>
      <TestResult rdf:about="#tr.36.excel.2007_SP1.no_trd_x64">
        <value>Excel12_SP1_TRDx64NotInstalled</value>
        <valid>fail</valid>
        <outcome rdf:resource="#to.36.recommendation.x64" />
        <outcome rdf:resource="#to.36.excel.supported_not_found" />
        <redef:redefinesWith rdf:resource="#redef.excelversion.2007" />
      </TestResult>
    </testResult>
    <!-- ********************************************************************************* -->
    <testResult>
      <TestResult rdf:about="#tr.36.excel.2007_SP1.trd_x64">
        <value>Excel12_SP1_TRDx64Installed</value>
        <valid>fail</valid>
        <outcome rdf:resource="#to.36.recommendation.x64" />
        <outcome rdf:resource="#to.36.excel.supported_not_found" />
        <redef:redefinesWith rdf:resource="#redef.excelversion.2007" />
      </TestResult>
    </testResult>
    <!-- ********************************************************************************* -->
    <!-- Excel 2007 SP2 -->
    <!-- ********************************************************************************* -->
    <testResult>
      <TestResult rdf:about="#tr.36.excel.2007_SP2.no_trd">
        <value>Excel12_SP2_TRDNotInstalled</value>
        <valid>alert</valid>
        <outcome rdf:resource="#to.36.excel.supported_not_found" />
        <redef:redefinesWith rdf:resource="#redef.excelversion.2007" />
      </TestResult>
    </testResult>
    <!-- ********************************************************************************* -->
    <testResult>
      <TestResult rdf:about="#tr.36.excel.2007_SP2.trd">
        <value>Excel12_SP2_TRDInstalled</value>
        <valid>fail</valid>
        <outcome rdf:resource="#to.36.excel.supported_not_found" />
        <redef:redefinesWith rdf:resource="#redef.excelversion.2007" />
      </TestResult>
    </testResult>
    <!-- ********************************************************************************* -->
    <testResult>
      <TestResult rdf:about="#tr.36.excel.2007_SP2.no_trd_x64">
        <value>Excel12_SP2_TRDx64NotInstalled</value>
        <valid>fail</valid>
        <outcome rdf:resource="#to.36.recommendation.x64" />
        <outcome rdf:resource="#to.36.excel.supported_not_found" />
        <redef:redefinesWith rdf:resource="#redef.excelversion.2007" />
      </TestResult>
    </testResult>
    <!-- ********************************************************************************* -->
    <testResult>
      <TestResult rdf:about="#tr.36.excel.2007_SP2.trd_x64">
        <value>Excel12_SP2_TRDx64Installed</value>
        <valid>fail</valid>
        <outcome rdf:resource="#to.36.recommendation.x64" />
        <outcome rdf:resource="#to.36.excel.supported_not_found" />
        <redef:redefinesWith rdf:resource="#redef.excelversion.2007" />
      </TestResult>
    </testResult>
    <!-- ********************************************************************************* -->
    <!-- Excel 2007 SP2 + KB968863 -->
    <!-- ********************************************************************************* -->
    <testResult>
      <TestResult rdf:about="#tr.36.excel.2007_SP2.KB968863.no_trd">
        <value>Excel12_SP2_KB968863_TRDNotInstalled</value>
        <valid>pass</valid>
        <outcome rdf:resource="#to.36.excel.2007_SP2.KB968863" />
        <redef:redefinesWith rdf:resource="#redef.excelversion.2007" />
      </TestResult>
    </testResult>
    <!-- ********************************************************************************* -->
    <testResult>
      <TestResult rdf:about="#tr.36.excel.2007_SP2.KB968863.trd">
        <value>Excel12_SP2_KB968863_TRDInstalled</value>
        <valid>pass</valid>
        <outcome rdf:resource="#to.36.excel.2007_SP2.KB968863" />
        <redef:redefinesWith rdf:resource="#redef.excelversion.2007" />
      </TestResult>
    </testResult>
    <!-- ********************************************************************************* -->
    <testResult>
      <TestResult rdf:about="#tr.36.excel.2007_SP2.KB968863.no_trd_x64">
        <value>Excel12_SP2_KB968863_TRDx64NotInstalled</value>
        <valid>fail</valid>
        <outcome rdf:resource="#to.36.recommendation.x64" />
        <outcome rdf:resource="#to.36.excel.supported_not_found" />
        <redef:redefinesWith rdf:resource="#redef.excelversion.2007" />
      </TestResult>
    </testResult>
    <!-- ********************************************************************************* -->
    <testResult>
      <TestResult rdf:about="#tr.36.excel.2007_SP2.KB968863.trd_x64">
        <value>Excel12_SP2_KB968863_TRDx64Installed</value>
        <valid>fail</valid>
        <outcome rdf:resource="#to.36.recommendation.x64" />
        <outcome rdf:resource="#to.36.excel.supported_not_found" />
        <redef:redefinesWith rdf:resource="#redef.excelversion.2007" />
      </TestResult>
    </testResult>
    <!-- ********************************************************************************* -->
    <!-- Excel 2007 SP2 + KB2345035 -->
    <!-- ********************************************************************************* -->
    <testResult>
      <TestResult rdf:about="#tr.36.excel.2007_SP2.KB2345035.no_trd">
        <value>Excel12_SP2_KB2345035_TRDNotInstalled</value>
        <valid>pass</valid>
        <outcome rdf:resource="#to.36.excel.2007_SP2.KB2345035" />
        <redef:redefinesWith rdf:resource="#redef.excelversion.2007" />
      </TestResult>
    </testResult>
    <!-- ********************************************************************************* -->
    <testResult>
      <TestResult rdf:about="#tr.36.excel.2007_SP2.KB2345035.trd">
        <value>Excel12_SP2_KB2345035_TRDInstalled</value>
        <valid>pass</valid>
        <outcome rdf:resource="#to.36.excel.2007_SP2.KB2345035" />
        <redef:redefinesWith rdf:resource="#redef.excelversion.2007" />
      </TestResult>
    </testResult>
    <!-- ********************************************************************************* -->
    <testResult>
      <TestResult rdf:about="#tr.36.excel.2007_SP2.KB2345035.no_trd_x64">
        <value>Excel12_SP2_KB2345035_TRDx64NotInstalled</value>
        <valid>fail</valid>
        <outcome rdf:resource="#to.36.recommendation.x64" />
        <outcome rdf:resource="#to.36.excel.supported_not_found" />
        <redef:redefinesWith rdf:resource="#redef.excelversion.2007" />
      </TestResult>
    </testResult>
    <!-- ********************************************************************************* -->
    <testResult>
      <TestResult rdf:about="#tr.36.excel.2007_SP2.KB2345035.trd_x64">
        <value>Excel12_SP2_KB2345035_TRDx64Installed</value>
        <valid>fail</valid>
        <outcome rdf:resource="#to.36.recommendation.x64" />
        <outcome rdf:resource="#to.36.excel.supported_not_found" />
        <redef:redefinesWith rdf:resource="#redef.excelversion.2007" />
      </TestResult>
    </testResult>
    <!-- ********************************************************************************* -->
    <!-- Excel 2007 SP3 -->
    <!-- ********************************************************************************* -->
    <testResult>
      <TestResult rdf:about="#tr.36.excel.2007_SP3.no_trd">
        <value>Excel12_SP3_TRDNotInstalled</value>
        <valid>pass</valid>
        <outcome rdf:resource="#to.36.excel.2007_SP3" />
        <redef:redefinesWith rdf:resource="#redef.excelversion.2007" />
      </TestResult>
    </testResult>
    <!-- ********************************************************************************* -->
    <testResult>
      <TestResult rdf:about="#tr.36.excel.2007_SP3.trd">
        <value>Excel12_SP3_TRDInstalled</value>
        <valid>pass</valid>
        <outcome rdf:resource="#to.36.excel.2007_SP3" />
        <redef:redefinesWith rdf:resource="#redef.excelversion.2007" />
      </TestResult>
    </testResult>
    <!-- ********************************************************************************* -->
    <testResult>
      <TestResult rdf:about="#tr.36.excel.2007_SP3.no_trd_x64">
        <value>Excel12_SP3_TRDx64NotInstalled</value>
        <valid>fail</valid>
        <outcome rdf:resource="#to.36.recommendation.x64" />
        <outcome rdf:resource="#to.36.excel.supported_not_found" />
        <redef:redefinesWith rdf:resource="#redef.excelversion.2007" />
      </TestResult>
    </testResult>
    <!-- ********************************************************************************* -->
    <testResult>
      <TestResult rdf:about="#tr.36.excel.2007_SP3.trd_x64">
        <value>Excel12_SP3_TRDx64Installed</value>
        <valid>fail</valid>
        <outcome rdf:resource="#to.36.recommendation.x64" />
        <outcome rdf:resource="#to.36.excel.supported_not_found" />
        <redef:redefinesWith rdf:resource="#redef.excelversion.2007" />
      </TestResult>
    </testResult>
    <!-- ********************************************************************************* -->
    <!-- 32-bit Excel 2010 SP0 -->
    <!-- ********************************************************************************* -->
    <testResult>
      <TestResult rdf:about="#tr.36.excel.2010_SP0.x86.no_trd">
        <value>Excel14_x86_SP0_TRDNotInstalled</value>
        <valid>alert</valid>
        <outcome rdf:resource="#to.36.excel.2010_SP0.x86" />
        <redef:redefinesWith rdf:resource="#redef.excelversion.2010" />
      </TestResult>
    </testResult>
    <!-- ********************************************************************************* -->
    <testResult>
      <TestResult rdf:about="#tr.36.excel.2010_SP0.x86.trd">
        <value>Excel14_x86_SP0_TRDInstalled</value>
        <valid>fail</valid>
        <outcome rdf:resource="#to.36.excel.2010_SP0.x86" />
        <redef:redefinesWith rdf:resource="#redef.excelversion.2010" />
      </TestResult>
    </testResult>
    <!-- ********************************************************************************* -->
    <testResult>
      <TestResult rdf:about="#tr.36.excel.2010_SP0.x86.no_trd_x64">
        <value>Excel14_x86_SP0_TRDx64NotInstalled</value>
        <valid>fail</valid>
        <outcome rdf:resource="#to.36.recommendation.x64" />
        <outcome rdf:resource="#to.36.excel.supported_not_found" />
        <redef:redefinesWith rdf:resource="#redef.excelversion.2010" />
      </TestResult>
    </testResult>
    <!-- ********************************************************************************* -->
    <testResult>
      <TestResult rdf:about="#tr.36.excel.2010_SP0.x86.trd_x64">
        <value>Excel14_x86_SP0_TRDx64Installed</value>
        <valid>fail</valid>
        <outcome rdf:resource="#to.36.recommendation.x64" />
        <outcome rdf:resource="#to.36.excel.supported_not_found" />
        <redef:redefinesWith rdf:resource="#redef.excelversion.2010" />
      </TestResult>
    </testResult>
    <!-- ********************************************************************************* -->
    <!-- 32-bit Excel 2010 SP0 + KB2405840 -->
    <!-- ********************************************************************************* -->
    <testResult>
      <TestResult rdf:about="#tr.36.excel.2010_SP0.x86.KB2405840.no_trd">
        <value>Excel14_x86_SP0_KB2405840_TRDNotInstalled</value>
        <valid>pass</valid>
        <outcome rdf:resource="#to.36.excel.2010_SP0.x86.KB2405840" />
        <redef:redefinesWith rdf:resource="#redef.excelversion.2010" />
      </TestResult>
    </testResult>
    <!-- ********************************************************************************* -->
    <testResult>
      <TestResult rdf:about="#tr.36.excel.2010_SP0.x86.KB2405840.trd">
        <value>Excel14_x86_SP0_KB2405840_TRDInstalled</value>
        <valid>pass</valid>
        <outcome rdf:resource="#to.36.excel.2010_SP0.x86.KB2405840" />
        <redef:redefinesWith rdf:resource="#redef.excelversion.2010" />
      </TestResult>
    </testResult>
    <!-- ********************************************************************************* -->
    <testResult>
      <TestResult rdf:about="#tr.36.excel.2010_SP0.x86.KB2405840.no_trd_x64">
        <value>Excel14_x86_SP0_KB2405840_TRDx64NotInstalled</value>
        <valid>fail</valid>
        <outcome rdf:resource="#to.36.recommendation.x64" />
        <outcome rdf:resource="#to.36.excel.supported_not_found" />
        <redef:redefinesWith rdf:resource="#redef.excelversion.2010" />
      </TestResult>
    </testResult>
    <!-- ********************************************************************************* -->
    <testResult>
      <TestResult rdf:about="#tr.36.excel.2010_SP0.x86.KB2405840.trd_x64">
        <value>Excel14_x86_SP0_KB2405840_TRDx64Installed</value>
        <valid>fail</valid>
        <outcome rdf:resource="#to.36.recommendation.x64" />
        <outcome rdf:resource="#to.36.excel.supported_not_found" />
        <redef:redefinesWith rdf:resource="#redef.excelversion.2010" />
      </TestResult>
    </testResult>
    <!-- ********************************************************************************* -->
    <!-- 32-bit Excel 2010 SP1 -->
    <!-- ********************************************************************************* -->
    <testResult>
      <TestResult rdf:about="#tr.36.excel.2010_SP1.x86.no_trd">
        <value>Excel14_x86_SP1_TRDNotInstalled</value>
        <valid>pass</valid>
        <outcome rdf:resource="#to.36.excel.2010_SP1.x86" />
        <redef:redefinesWith rdf:resource="#redef.excelversion.2010" />
      </TestResult>
    </testResult>
    <!-- ********************************************************************************* -->
    <testResult>
      <TestResult rdf:about="#tr.36.excel.2010_SP1.x86.trd">
        <value>Excel14_x86_SP1_TRDInstalled</value>
        <valid>pass</valid>
        <outcome rdf:resource="#to.36.excel.2010_SP1.x86" />
        <redef:redefinesWith rdf:resource="#redef.excelversion.2010" />
      </TestResult>
    </testResult>
    <!-- ********************************************************************************* -->
    <testResult>
      <TestResult rdf:about="#tr.36.excel.2010_SP1.x86.no_trd_x64">
        <value>Excel14_x86_SP1_TRDx64NotInstalled</value>
        <valid>fail</valid>
        <outcome rdf:resource="#to.36.recommendation.x64" />
        <outcome rdf:resource="#to.36.excel.supported_not_found" />
        <redef:redefinesWith rdf:resource="#redef.excelversion.2010" />
      </TestResult>
    </testResult>
    <!-- ********************************************************************************* -->
    <testResult>
      <TestResult rdf:about="#tr.36.excel.2010_SP1.x86.trd_x64">
        <value>Excel14_x86_SP1_TRDx64Installed</value>
        <valid>fail</valid>
        <outcome rdf:resource="#to.36.recommendation.x64" />
        <outcome rdf:resource="#to.36.excel.supported_not_found" />
        <redef:redefinesWith rdf:resource="#redef.excelversion.2010" />
      </TestResult>
    </testResult>
    <!-- ********************************************************************************* -->
    <!-- 64-bit Excel 2010 SP0 -->
    <!-- ********************************************************************************* -->
    <testResult>
      <TestResult rdf:about="#tr.36.excel.2010_SP0.x64.no_trd">
        <value>Excel14_x64_SP0_TRDNotInstalled</value>
        <valid>alert</valid>
        <outcome rdf:resource="#to.36.excel.supported_not_found" />
        <redef:redefinesWith rdf:resource="#redef.excelversion.2010" />
      </TestResult>
    </testResult>
    <!-- ********************************************************************************* -->
    <testResult>
      <TestResult rdf:about="#tr.36.excel.2010_SP0.x64.trd">
        <value>Excel14_x64_SP0_TRDInstalled</value>
        <valid>fail</valid>
        <outcome rdf:resource="#to.36.excel.supported_not_found" />
        <redef:redefinesWith rdf:resource="#redef.excelversion.2010" />
      </TestResult>
    </testResult>
    <!-- ********************************************************************************* -->
    <testResult>
      <TestResult rdf:about="#tr.36.excel.2010_SP0.x64.no_trd_x64">
        <value>Excel14_x64_SP0_TRDx64NotInstalled</value>
        <valid>alert</valid>
        <outcome rdf:resource="#to.36.recommendation.x64" />
        <outcome rdf:resource="#to.36.excel.supported_not_found" />
        <redef:redefinesWith rdf:resource="#redef.excelversion.2010" />
      </TestResult>
    </testResult>
    <!-- ********************************************************************************* -->
    <testResult>
      <TestResult rdf:about="#tr.36.excel.2010_SP0.x64.trd_x64">
        <value>Excel14_x64_SP0_TRDx64Installed</value>
        <valid>fail</valid>
        <outcome rdf:resource="#to.36.recommendation.x64" />
        <outcome rdf:resource="#to.36.excel.supported_not_found" />
        <redef:redefinesWith rdf:resource="#redef.excelversion.2010" />
      </TestResult>
    </testResult>
    <!-- ********************************************************************************* -->
    <!-- 64-bit Excel 2010 SP0 + KB2405840 -->
    <!-- ********************************************************************************* -->
    <testResult>
      <TestResult rdf:about="#tr.36.excel.2010_SP0.x64.KB2405840.no_trd">
        <value>Excel14_x64_SP0_KB2405840_TRDNotInstalled</value>
        <valid>alert</valid>
        <outcome rdf:resource="#to.36.excel.supported_not_found" />
        <redef:redefinesWith rdf:resource="#redef.excelversion.2010" />
      </TestResult>
    </testResult>
    <!-- ********************************************************************************* -->
    <testResult>
      <TestResult rdf:about="#tr.36.excel.2010_SP0.x64.KB2405840.trd">
        <value>Excel14_x64_SP0_KB2405840_TRDInstalled</value>
        <valid>fail</valid>
        <outcome rdf:resource="#to.36.excel.supported_not_found" />
        <redef:redefinesWith rdf:resource="#redef.excelversion.2010" />
      </TestResult>
    </testResult>
    <!-- ********************************************************************************* -->
    <testResult>
      <TestResult rdf:about="#tr.36.excel.2010_SP0.x64.KB2405840.no_trd_x64">
        <value>Excel14_x64_SP0_KB2405840_TRDx64NotInstalled</value>
        <valid>alert</valid>
        <outcome rdf:resource="#to.36.recommendation.x64" />
        <outcome rdf:resource="#to.36.excel.supported_not_found" />
        <redef:redefinesWith rdf:resource="#redef.excelversion.2010" />
      </TestResult>
    </testResult>
    <!-- ********************************************************************************* -->
    <testResult>
      <TestResult rdf:about="#tr.36.excel.2010_SP0.x64.KB2405840.trd_x64">
        <value>Excel14_x64_SP0_KB2405840_TRDx64Installed</value>
        <valid>fail</valid>
        <outcome rdf:resource="#to.36.recommendation.x64" />
        <outcome rdf:resource="#to.36.excel.supported_not_found" />
        <redef:redefinesWith rdf:resource="#redef.excelversion.2010" />
      </TestResult>
    </testResult>
    <!-- ********************************************************************************* -->
    <!-- 64-bit Excel 2010 SP1 -->
    <!-- ********************************************************************************* -->
    <testResult>
      <TestResult rdf:about="#tr.36.excel.2010_SP1.x64.no_trd">
        <value>Excel14_x64_SP1_TRDNotInstalled</value>
        <valid>alert</valid>
        <outcome rdf:resource="#to.36.excel.supported_not_found" />
        <redef:redefinesWith rdf:resource="#redef.excelversion.2010" />
      </TestResult>
    </testResult>
    <!-- ********************************************************************************* -->
    <testResult>
      <TestResult rdf:about="#tr.36.excel.2010_SP1.x64.trd">
        <value>Excel14_x64_SP1_TRDInstalled</value>
        <valid>fail</valid>
        <outcome rdf:resource="#to.36.excel.supported_not_found" />
        <redef:redefinesWith rdf:resource="#redef.excelversion.2010" />
      </TestResult>
    </testResult>
    <!-- ********************************************************************************* -->
    <testResult>
      <TestResult rdf:about="#tr.36.excel.2010_SP1.x64.no_trd_x64">
        <value>Excel14_x64_SP1_TRDx64NotInstalled</value>
        <valid>pass</valid>
        <outcome rdf:resource="#to.36.recommendation.x64" />
        <outcome rdf:resource="#to.36.excel.2010_SP1.x64" />
        <redef:redefinesWith rdf:resource="#redef.excelversion.2010" />
      </TestResult>
    </testResult>
    <!-- ********************************************************************************* -->
    <testResult>
      <TestResult rdf:about="#tr.36.excel.2010_SP1.x64.trd_x64">
        <value>Excel14_x64_SP1_TRDx64Installed</value>
        <valid>pass</valid>
        <outcome rdf:resource="#to.36.recommendation.x64" />
        <outcome rdf:resource="#to.36.excel.2010_SP1.x64" />
        <redef:redefinesWith rdf:resource="#redef.excelversion.2010" />
      </TestResult>
    </testResult>
    <!-- ********************************************************************************* -->
    <!-- 32-bit Excel 2013 SP0 -->
    <!-- ********************************************************************************* -->
    <testResult>
      <TestResult rdf:about="#tr.36.excel.2013_SP0.x86.no_trd">
        <value>Excel15_x86_SP0_TRDNotInstalled</value>
        <valid>alert</valid>
        <outcome rdf:resource="#to.36.excel.2013_SP0.x86" />
        <redef:redefinesWith rdf:resource="#redef.excelversion.2013" />
      </TestResult>
    </testResult>
    <!-- ********************************************************************************* -->
    <testResult>
      <TestResult rdf:about="#tr.36.excel.2013_SP0.x86.trd">
        <value>Excel15_x86_SP0_TRDInstalled</value>
        <valid>alert</valid>
        <outcome rdf:resource="#to.36.excel.2013_SP0.x86" />
        <redef:redefinesWith rdf:resource="#redef.excelversion.2013" />
      </TestResult>
    </testResult>
    <!-- ********************************************************************************* -->
    <testResult>
      <TestResult rdf:about="#tr.36.excel.2013_SP0.x86.no_trd_x64">
        <value>Excel15_x86_SP0_TRDx64NotInstalled</value>
        <valid>fail</valid>
        <outcome rdf:resource="#to.36.recommendation.x64" />
        <outcome rdf:resource="#to.36.excel.supported_not_found" />
        <redef:redefinesWith rdf:resource="#redef.excelversion.2013" />
      </TestResult>
    </testResult>
    <!-- ********************************************************************************* -->
    <testResult>
      <TestResult rdf:about="#tr.36.excel.2013_SP0.x86.trd_x64">
        <value>Excel15_x86_SP0_TRDx64Installed</value>
        <valid>fail</valid>
        <outcome rdf:resource="#to.36.recommendation.x64" />
        <outcome rdf:resource="#to.36.excel.supported_not_found" />
        <redef:redefinesWith rdf:resource="#redef.excelversion.2013" />
      </TestResult>
    </testResult>
    <!-- ********************************************************************************* -->
    <!-- 64-bit Excel 2013 SP0 -->
    <!-- ********************************************************************************* -->
    <testResult>
      <TestResult rdf:about="#tr.36.excel.2013_SP0.x64.no_trd">
        <value>Excel15_x64_SP0_TRDNotInstalled</value>
        <valid>alert</valid>
        <outcome rdf:resource="#to.36.excel.supported_not_found" />
        <redef:redefinesWith rdf:resource="#redef.excelversion.2013" />
      </TestResult>
    </testResult>
    <!-- ********************************************************************************* -->
    <testResult>
      <TestResult rdf:about="#tr.36.excel.2013_SP0.x64.trd">
        <value>Excel15_x64_SP0_TRDInstalled</value>
        <valid>fail</valid>
        <outcome rdf:resource="#to.36.excel.supported_not_found" />
        <redef:redefinesWith rdf:resource="#redef.excelversion.2013" />
      </TestResult>
    </testResult>
    <!-- ********************************************************************************* -->
    <testResult>
      <TestResult rdf:about="#tr.36.excel.2013_SP0.x64.no_trd_x64">
        <value>Excel15_x64_SP0_TRDx64NotInstalled</value>
        <valid>alert</valid>
        <outcome rdf:resource="#to.36.recommendation.x64" />
        <outcome rdf:resource="#to.36.excel.2013_SP0.x64" />
        <redef:redefinesWith rdf:resource="#redef.excelversion.2013" />
      </TestResult>
    </testResult>
    <!-- ********************************************************************************* -->
    <testResult>
      <TestResult rdf:about="#tr.36.excel.2013_SP0.x64.trd_x64">
        <value>Excel15_x64_SP0_TRDx64Installed</value>
        <valid>alert</valid>
        <outcome rdf:resource="#to.36.recommendation.x64" />
        <outcome rdf:resource="#to.36.excel.2013_SP0.x64" />
        <redef:redefinesWith rdf:resource="#redef.excelversion.2013" />
      </TestResult>
    </testResult>
    <!-- ********************************************************************************* -->
    <!-- Unknown -->
    <!-- ********************************************************************************* -->
    <testResult>
      <TestResult rdf:about="#tr.36.excel.unknown">
        <value>*</value>
        <valid>warning</valid>
        <outcome>
          <TestOutcome rdf:about="#to.36.excel.unknown">
            <run:description xml:lang="en">Unable to determine Excel version.</run:description>
          </TestOutcome>
        </outcome>
        <redef:redefinesWith rdf:resource="#redef.excelversion.unknown" />
      </TestResult>
    </testResult>
  </Test>
  <!-- ********************************************************************************* -->
  <!-- Outcomes -->
  <!-- ********************************************************************************* -->
  <TestOutcome rdf:about="#to.36.recommendation.x64">
    <run:recommendation xml:lang="en">Recommended: Excel 2010 SP1 64-bit</run:recommendation>
  </TestOutcome>
  <!-- ********************************************************************************* -->
  <TestOutcome rdf:about="#to.36.excel.notinstalled">
    <run:description xml:lang="en">Microsoft Excel is not installed.</run:description>
  </TestOutcome>
  <!-- ********************************************************************************* -->
  <TestOutcome rdf:about="#to.36.excel.supported_not_found">
    <run:description xml:lang="en">Thomson Reuters Eikon Excel may not run properly after installation. A supported version of Microsoft Excel is not found.</run:description>
  </TestOutcome>
  <!-- ********************************************************************************* -->
  <TestOutcome rdf:about="#to.36.excel.sxs">
    <run:description xml:lang="en">%(runPropertyURI='detectedVersions'). Multiple versions of Microsoft Excel are installed. Thomson Reuters does not support multiple versions.</run:description>
  </TestOutcome>
  <!-- ********************************************************************************* -->
  <TestOutcome rdf:about="#to.36.excel.2000">
    <run:description xml:lang="en">Excel 2000</run:description>
  </TestOutcome>
  <!-- ********************************************************************************* -->
  <TestOutcome rdf:about="#to.36.excel.XP">
    <run:description xml:lang="en">Excel XP</run:description>
  </TestOutcome>
  <!-- ********************************************************************************* -->
  <TestOutcome rdf:about="#to.36.excel.2003_SP0">
    <run:description xml:lang="en">Excel 2003 is found, but the required update is not installed. You must install Microsoft Office 2003 SP3 + KB907417</run:description>
  </TestOutcome>
  <!-- ********************************************************************************* -->
  <TestOutcome rdf:about="#to.36.excel.2003_SP0.KB907417">
    <run:description xml:lang="en">Excel 2003 + KB907417 is found, but the required update is not installed. You must install Microsoft Office 2003 SP3</run:description>
  </TestOutcome>
  <!-- ********************************************************************************* -->
  <TestOutcome rdf:about="#to.36.excel.2003_SP1">
    <run:description xml:lang="en">Excel 2003 SP1 is found, but the required update is not installed. You must install Microsoft Office 2003 SP3 + KB907417</run:description>
  </TestOutcome>
  <!-- ********************************************************************************* -->
  <TestOutcome rdf:about="#to.36.excel.2003_SP1.KB907417">
    <run:description xml:lang="en">Excel 2003 SP1 + KB907417 is found, but the required update is not installed. You must install Microsoft Office 2003 SP3</run:description>
  </TestOutcome>
  <!-- ********************************************************************************* -->
  <TestOutcome rdf:about="#to.36.excel.2003_SP2">
    <run:description xml:lang="en">Excel 2003 SP2 is found, but the required update is not installed. You must install Microsoft Office 2003 SP3 + KB907417</run:description>
  </TestOutcome>
  <!-- ********************************************************************************* -->
  <TestOutcome rdf:about="#to.36.excel.2003_SP2.KB907417">
    <run:description xml:lang="en">Excel 2003 SP2 + KB907417 is found, but the required update is not installed. You must install Microsoft Office 2003 SP3</run:description>
  </TestOutcome>
  <!-- ********************************************************************************* -->
  <TestOutcome rdf:about="#to.36.excel.2003_SP3">
    <run:description xml:lang="en">Excel 2003 SP3 is found, but the required update is not installed. You must install Microsoft Office 2003 SP3 + KB907417</run:description>
  </TestOutcome>
  <!-- ********************************************************************************* -->
  <TestOutcome rdf:about="#to.36.excel.2003_SP3.KB907417">
    <run:description xml:lang="en">Excel 2003 SP3 + KB907417</run:description>
  </TestOutcome>
  <!-- ********************************************************************************* -->
  <TestOutcome rdf:about="#to.36.excel.2007_SP0">
    <run:description xml:lang="en">Excel 2007 found, but the required update is not installed. You must install Microsoft Office 2007 SP2 + KB968863</run:description>
  </TestOutcome>
  <!-- ********************************************************************************* -->
  <TestOutcome rdf:about="#to.36.excel.2007_SP0.KB968863">
    <run:description xml:lang="en">Excel 2007 + KB968863 found, but the required update is not installed. You must install Microsoft Office 2007 SP2 + KB968863</run:description>
  </TestOutcome>
  <!-- ********************************************************************************* -->
  <TestOutcome rdf:about="#to.36.excel.2007_SP1">
    <run:description xml:lang="en">Excel 2007 SP1 found, but the required update is not installed. You must install Microsoft Office 2007 SP2 + KB968863</run:description>
  </TestOutcome>
  <!-- ********************************************************************************* -->
  <TestOutcome rdf:about="#to.36.excel.2007_SP1.KB968863">
    <run:description xml:lang="en">Excel 2007 SP1 + KB968863 found, but the required update is not installed. You must install Microsoft Office 2007 SP2 + KB968863</run:description>
  </TestOutcome>
  <!-- ********************************************************************************* -->
  <TestOutcome rdf:about="#to.36.excel.2007_SP2">
    <run:description xml:lang="en">Excel 2007 SP2 found, but the required update is not installed. You must install Microsoft Office 2007 SP2 + KB968863</run:description>
  </TestOutcome>
  <!-- ********************************************************************************* -->
  <TestOutcome rdf:about="#to.36.excel.2007_SP2.KB968863">
    <run:description xml:lang="en">Excel 2007 SP2 + KB968863</run:description>
  </TestOutcome>
  <!-- ********************************************************************************* -->
  <TestOutcome rdf:about="#to.36.excel.2007_SP2.KB2345035">
    <run:description xml:lang="en">Excel 2007 SP2 + KB2345035</run:description>
  </TestOutcome>
  <!-- ********************************************************************************* -->
  <TestOutcome rdf:about="#to.36.excel.2007_SP3">
    <run:description xml:lang="en">Excel 2007 SP3</run:description>
  </TestOutcome>
  <!-- ********************************************************************************* -->
  <TestOutcome rdf:about="#to.36.excel.2010_SP0.x86">
    <run:description xml:lang="en">Excel 2010 32-bit</run:description>
  </TestOutcome>
  <!-- ********************************************************************************* -->
  <TestOutcome rdf:about="#to.36.excel.2010_SP0.x86.KB2405840">
    <run:description xml:lang="en">Excel 2010 32-bit + KB2405840</run:description>
  </TestOutcome>
  <!-- ********************************************************************************* -->
  <TestOutcome rdf:about="#to.36.excel.2010_SP1.x86">
    <run:description xml:lang="en">Excel 2010 SP1 32-bit</run:description>
  </TestOutcome>
  <!-- ********************************************************************************* -->
  <TestOutcome rdf:about="#to.36.excel.2010_SP0.x64">
    <run:description xml:lang="en">Excel 2010 64-bit</run:description>
  </TestOutcome>
  <!-- ********************************************************************************* -->
  <TestOutcome rdf:about="#to.36.excel.2010_SP0.x64.KB2405840">
    <run:description xml:lang="en">Excel 2010 64-bit + KB2405840</run:description>
  </TestOutcome>
  <!-- ********************************************************************************* -->
  <TestOutcome rdf:about="#to.36.excel.2010_SP1.x64">
    <run:description xml:lang="en">Excel 2010 SP1 64-bit</run:description>
  </TestOutcome>
  <!-- ********************************************************************************* -->
  <TestOutcome rdf:about="#to.36.excel.2013_SP0.x86">
    <run:description xml:lang="en">Excel 2013 32-bit. Thomson Reuters is currently validating Thomson Reuters Eikon with Excel 2013.</run:description>
  </TestOutcome>
  <!-- ********************************************************************************* -->
  <TestOutcome rdf:about="#to.36.excel.2013_SP0.x64">
    <run:description xml:lang="en">Excel 2013 64-bit. Thomson Reuters is currently validating Thomson Reuters Eikon with Excel 2013.</run:description>
  </TestOutcome>
  <!-- ### FIXME: global overrides 
	<NaturalRedefinition rdf:ID="redef.39.refvalue">
		<redef:overrides rdf:resource="#test.39"/>
		<rfs:referenceValue>629145600</rfs:referenceValue>
		<rfs:referenceValue>367001600</rfs:referenceValue>
	</NaturalRedefinition>
	
	-->
  <Test rdf:about="#test.39">
    <dc:description>For Xtra6, referenceValue=650MB and referenceValue2=350MB.</dc:description>
  </Test>
  <Plugin rdf:about="#rstplugin.realtime">
    <dc:description>Realtime PIXL plugin</dc:description>
    <conf:dll>RstPluginRealtime.dll</conf:dll>
    <conf:classID>1470DA5D-41BD-4a85-B68B-FB2938150E55</conf:classID>
  </Plugin>
  <Error rdf:about="#error.rstplugin.realtime.init">
    <dc:description xml:lang="en">The PIXL session could not be opened.</dc:description>
    <outcome>
      <TestOutcome rdf:about="#to.error.rstplugin.realtime.init">
        <run:description xml:lang="en">Unable to initialize real-time connection: %(runPropertyURI='errorParameter1')</run:description>
      </TestOutcome>
    </outcome>
  </Error>
  <Error rdf:about="#error.rstplugin.realtime.subscribe">
    <dc:description xml:lang="en">PIXL subscription failed</dc:description>
    <outcome>
      <TestOutcome rdf:about="#to.error.rstplugin.realtime.subscribe">
        <run:description xml:lang="en">Unable to subscribe to real-time item (with RIC %(rfsPropertyURI='RIC')): %(runPropertyURI='errorParameter1')</run:description>
      </TestOutcome>
    </outcome>
  </Error>
  <Error rdf:about="#error.rstplugin.realtime.timeout">
    <dc:description xml:lang="en">Timeout. We did not receive any success feedback from PIXL.</dc:description>
    <outcome>
      <TestOutcome rdf:about="#to.error.rstplugin.realtime.timeout">
        <run:description xml:lang="en">Timeout.</run:description>
      </TestOutcome>
    </outcome>
  </Error>
  <Error rdf:about="#error.rstplugin.realtime.timeout.with.ric">
    <dc:description xml:lang="en">Timeout. We did not receive any success feedback from PIXL.</dc:description>
    <outcome>
      <TestOutcome rdf:about="#to.error.rstplugin.realtime.timeout.with.ric">
        <run:description xml:lang="en">Timeout (with RIC %(rfsPropertyURI='RIC')).</run:description>
      </TestOutcome>
    </outcome>
  </Error>
  <Error rdf:about="#error.rstplugin.realtime.wrongdata">
    <dc:description xml:lang="en">The PIXL session and subscription were successfully created, but the data we received is malformed. Check RDMC logs for further information.</dc:description>
    <outcome>
      <TestOutcome rdf:about="#to.error.rstplugin.realtime.wrongdata">
        <run:description xml:lang="en">Incorrect data received (with RIC %(rfsPropertyURI='RIC')): %(runPropertyURI='errorParameter1')</run:description>
      </TestOutcome>
    </outcome>
  </Error>
  <Error rdf:about="#error.rstplugin.realtime.stale">
    <dc:description xml:lang="en">The PIXL session and subscription were successfully created, but received a Stale status.</dc:description>
    <outcome>
      <TestOutcome rdf:about="#to.error.rstplugin.realtime.stale">
        <run:description xml:lang="en">Stale state (with RIC %(rfsPropertyURI='RIC')): %(runPropertyURI='errorParameter1')</run:description>
      </TestOutcome>
    </outcome>
  </Error>
  <Error rdf:about="#error.business">
    <redef:isInheritedBy rdf:resource="#error.rstplugin.realtime.init" />
    <redef:isInheritedBy rdf:resource="#error.rstplugin.realtime.subscribe" />
    <redef:isInheritedBy rdf:resource="#error.rstplugin.realtime.timeout" />
    <redef:isInheritedBy rdf:resource="#error.rstplugin.realtime.wrongdata" />
    <redef:isInheritedBy rdf:resource="#error.rstplugin.realtime.stale" />
  </Error>
  <Test rdf:about="#test.40">
    <!-- Header -->
    <requiresPlugin rdf:resource="#rstplugin.realtime.6" />
    <object>Reuters_RealtimeNetwork.record.image</object>
    <!--<rfs:isRerunAllowed>true</rfs:isRerunAllowed>-->
    <isContainedBy rdf:resource="#group.realtime" />
    <priority>0.5002</priority>
    <dc:title xml:lang="en">Streaming Availability:</dc:title>
    <dc:description xml:lang="en">Subscribe a pixel to a pixel session and wait for the image() call back. This test only works for RICs of type RECORD.</dc:description>
    <!-- Realtime parameters -->
    <rfs:RIC>%(randomRicListID='ric-list.random-permissioned.EQU')</rfs:RIC>
    <rfs:Alias>Q</rfs:Alias>
    <rfs:AliasPowerLink>IDN</rfs:AliasPowerLink>
    <rfs:RecordType>record</rfs:RecordType>
    <rfs:Config>Kobra</rfs:Config>
    <rfs:Timeout>40</rfs:Timeout>
    <!-- Display -->
    <testResult>
      <TestResult rdf:about="#tr.40.1">
        <value>OK</value>
        <valid>pass</valid>
        <outcome rdf:resource="#to.rst.test.pass.wric" />
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.40.2">
        <value>*</value>
        <valid>fail</valid>
        <outcome rdf:resource="#to.rst.test.fail.wric" />
      </TestResult>
    </testResult>
  </Test>
  <Test rdf:about="#test.93">
    <!-- Header -->
    <requiresPlugin rdf:resource="#rstplugin.realtime.6" />
    <object>Reuters_RealtimeNetwork.record.delivery</object>
    <isContainedBy rdf:resource="#group.realtime" />
    <priority>2</priority>
    <dc:title xml:lang="en">Current Real-time Deployment Model:</dc:title>
    <dc:description xml:lang="en">Subscribe a pixel to a pixel session and wait for the image() call back. This test only works for RICs of type RECORD.</dc:description>
    <testResult>
      <TestResult rdf:about="#tr.93.1">
        <value>*</value>
        <valid>info</valid>
        <outcome>
          <TestOutcome rdf:about="#to.93.0.1">
            <run:description xml:lang="en">%(runPropertyURI='value')</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
  </Test>
  <Test rdf:about="#test.111">
    <!-- Header -->
    <requiresPlugin rdf:resource="#rstplugin.realtime.6" />
    <object>Reuters_RealtimeNetwork.record.pedownload</object>
    <isContainedBy rdf:resource="#group.realtime" />
    <priority>2</priority>
    <dc:title xml:lang="en">IDN Permission Uploader:</dc:title>
    <dc:description xml:lang="en">Check that PEs download/upload is working.</dc:description>
    <!-- Test parameters -->
    <rfs:Timeout>40</rfs:Timeout>
    <!-- Display -->
    <testResult>
      <TestResult rdf:about="#tr.111.0">
        <value>Pass</value>
        <valid>pass</valid>
        <outcome>
          <TestOutcome rdf:about="#to.111.0">
            <run:description xml:lang="en">IDN permissions are synchronized with the Thomson Reuters Platform.</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.111.2">
        <value>Desactivated</value>
        <valid>info</valid>
        <outcome rdf:resource="#to.111.desactivated" />
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.111.3">
        <value>*</value>
        <valid>fail</valid>
        <outcome>
          <TestOutcome rdf:about="#to.111.3">
            <run:description xml:lang="en">IDN permissions cannot be synchronized with the Thomson Reuters Platform.</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
  </Test>
  <TestOutcome rdf:about="#to.111.desactivated">
    <run:description xml:lang="en">IDN permissions uploader is deactivated.</run:description>
  </TestOutcome>
  <Plugin rdf:about="#rstplugin.dex2">
    <dc:description>Test Data Retrieval</dc:description>
    <conf:dll>RstPluginDex2.dll</conf:dll>
    <conf:classID>DD3B66A3-A314-419f-85A1-8B9509A13088</conf:classID>
  </Plugin>
  <TestResult rdf:about="#tr.test.dex2.fail">
    <value>-1</value>
    <valid>fail</valid>
    <outcome rdf:resource="#to.rst.test.fail.wric.wcause" />
  </TestResult>
  <TestResult rdf:about="#tr.test.dex2.pass">
    <value>1</value>
    <valid>pass</valid>
    <outcome rdf:resource="#to.rst.test.pass.wric" />
  </TestResult>
  <Test rdf:about="#test.50">
    <!-- Header -->
    <object>reuters_rsttest.name='testDataRetrieval'.value</object>
    <requiresPlugin rdf:resource="#rstplugin.dex2.6" />
    <!--<rfs:isRerunAllowed>true</rfs:isRerunAllowed>-->
    <isContainedBy rdf:resource="#group.dex2" />
    <priority>1</priority>
    <dc:title xml:lang="en">Data Retrieval:</dc:title>
    <rfs:RIC>%(randomRicListID='ric-list.random-permissioned.EQU')</rfs:RIC>
    <rfs:dex2InstrumentIDList>%(rfsPropertyURI='RIC')</rfs:dex2InstrumentIDList>
    <rfs:dex2FieldList>RI.ID.RIC</rfs:dex2FieldList>
    <rfs:dex2RequestParam />
    <rfs:dex2DisplayParam />
    <testResult rdf:resource="#tr.test.dex2.fail" />
    <testResult rdf:resource="#tr.test.dex2.pass" />
  </Test>
  <Plugin rdf:about="#rstplugin.provider">
    <dc:description>Configuration provider</dc:description>
    <conf:dll>RstPluginProvider.dll</conf:dll>
    <conf:classID>868695AD-4D39-4f69-A3EE-883A1AA81815</conf:classID>
  </Plugin>
  <Error rdf:about="#error.system.propertynotfound">
    <dc:title xml:lang="en">Unable to read property.</dc:title>
    <dc:description xml:lang="en" />
    <valid>alert</valid>
    <outcome>
      <TestOutcome rdf:about="#to.rstplugin.provider.property-not-found">
        <run:description xml:lang="en">Property not found: %(runPropertyURI='errorParameter1')</run:description>
      </TestOutcome>
    </outcome>
  </Error>
  <Test rdf:about="#test.49">
    <!-- Header -->
    <object>ConfigProvider.RDE_INSTALL_PATH</object>
    <requiresPlugin rdf:resource="#rstplugin.provider.6" />
    <isContainedBy rdf:resource="#group.information.rde" />
    <priority>3</priority>
    <dc:title xml:lang="en">Installation Path:</dc:title>
    <!-- Display -->
    <default:description xml:lang="en">%(runPropertyURI='value')</default:description>
  </Test>
  <Test rdf:about="#test.61">
    <!-- Header -->
    <object>Reuters_RstTest.name='AAAUserID'.value</object>
    <isContainedBy rdf:resource="#group.information.rde" />
    <priority>1</priority>
    <dc:title xml:lang="en">User ID:</dc:title>
    <!-- Display -->
    <default:description xml:lang="en">%(runPropertyURI='value')</default:description>
    <!-- Validation Logic -->
    <stdimpl:javascript>

      var configProvider=RDMC.KobraProviderManager.FindProvider("Configuration");
      var installPath = configProvider.GetPropertyValue("USERDETAILS/USERID");
      testResult.setRawResult(installPath);

    </stdimpl:javascript>
    <testResult>
      <TestResult rdf:about="#tr.61.1">
        <value />
        <valid>info</valid>
        <outcome>
          <TestOutcome rdf:about="#to.61.1">
            <run:description xml:lang="en">No user ID present.</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.61.2">
        <value>*</value>
        <valid>info</valid>
        <outcome>
          <TestOutcome rdf:about="#tr.61.2">
            <run:description xml:lang="en">%(runPropertyURI='value')</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
  </Test>
  <Test rdf:about="#test.63">
    <!-- Header -->
    <object>Reuters_RealtimeNetwork.record.omm</object>
    <requiresPlugin rdf:resource="#rstplugin.realtime.6" />
    <isContainedBy rdf:resource="#group.information.rde" />
    <priority>4</priority>
    <dc:title xml:lang="en">OMM Session:</dc:title>
    <!-- Display -->
    <default:description xml:lang="en">%(runPropertyURI='value')</default:description>
  </Test>
  <Test rdf:about="#test.77">
    <!-- Header -->
    <object>Reuters_RealtimeNetwork.record.marketfeed</object>
    <requiresPlugin rdf:resource="#rstplugin.realtime.6" />
    <isContainedBy rdf:resource="#group.information.rde" />
    <priority>4</priority>
    <dc:title xml:lang="en">Market Feed Session:</dc:title>
    <!-- Display -->
    <default:description xml:lang="en">%(runPropertyURI='value')</default:description>
  </Test>
  <Test rdf:about="#test.11">
    <default:recommendation xml:lang="en">TESTMSG_DEFAULT_RECOMMENDATION_TEST_11</default:recommendation>
  </Test>
  <TestResult rdf:about="#tr.11.IE.other">
    <valid>fail</valid>
  </TestResult>
  <TestResult rdf:about="#tr.11.IE.6.0.0">
    <valid>fail</valid>
  </TestResult>
  <TestResult rdf:about="#tr.11.IE.6.XP.SP1">
    <valid>alert</valid>
  </TestResult>
  <TestResult rdf:about="#tr.11.IE.6.XP.SP2">
    <valid>pass</valid>
  </TestResult>
  <TestResult rdf:about="#tr.11.IE.7.0.0">
    <valid>pass</valid>
  </TestResult>
  <TestResult rdf:about="#tr.11.IE.8.0.0">
    <valid>pass</valid>
  </TestResult>
  <TestResult rdf:about="#tr.11.ie8.xp.no_kb978207">
    <valid>alert</valid>
  </TestResult>
  <TestResult rdf:about="#tr.11.ie8.xp.kb978207">
    <valid>pass</valid>
  </TestResult>
  <TestResult rdf:about="#tr.11.ie8.vista.no_kb2183461">
    <valid>alert</valid>
  </TestResult>
  <TestResult rdf:about="#tr.11.ie8.vista.kb2183461">
    <valid>pass</valid>
  </TestResult>
  <TestResult rdf:about="#tr.11.ie8.2003.no_kb2360131">
    <valid>alert</valid>
  </TestResult>
  <TestResult rdf:about="#tr.11.ie8.2003.kb2360131">
    <valid>pass</valid>
  </TestResult>
  <Message rdf:about="#message.ordinal.first">
    <rdf:value xml:lang="en">First</rdf:value>
  </Message>
  <Test rdf:about="#test.11">
    <!-- Header -->
    <object>Reuters_product.name='Microsoft Internet Explorer'.version</object>
    <isContainedBy rdf:resource="#group.prerequisites.software" />
    <priority>0.1013</priority>
    <dc:title xml:lang="en">Browser Version:</dc:title>
    <default:recommendation xml:lang="en">Required: %(runPropertyURI='supportedIEList')</default:recommendation>
    <!-- Overrides-->
    <rfs:OS />
    <stdimpl:javascript>

      //*******************************************************************************************************
      // Get IE version

      var WshShell = new ActiveXObject( "WScript.Shell" );

      // Get IE version and build number
      var IEVersion;
      try
      {
      // IE9+
      IEVersion = WshShell.RegRead("HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Internet Explorer\\svcVersion");
      Logger.debug("Found IE version registry value 'svcVersion'");
      }
      catch (e)
      {
      IEVersion = WshShell.RegRead("HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Internet Explorer\\Version");
      Logger.debug("Found IE version registry value 'Version'");
      }
      var IEMajorVersion = parseInt(IEVersion.substring(0,IEVersion.indexOf(".",0)));
      var IEBuild = parseInt(IEVersion.substring(IEVersion.lastIndexOf(".")+1));

      testResult.setProperty("IEMajorVersion",IEMajorVersion,"");

      Logger.debug("IE version = " + IEVersion);
      Logger.debug("IE major version = " + IEMajorVersion);
      Logger.debug("IE build number = " + IEBuild);

      var rawResult = "IE" + IEMajorVersion;
      var supportedVersion = true;

      //*******************************************************************************************************
      // Get detected OS

      var detectedOS = testResult.getTest().getProperty("http://www.reuters.com/RSTM/Metadata/OS", "");
      Logger.debug("Detected OS : " + detectedOS);

      //*******************************************************************************************************
      // Is it a supported IE version ?

      if( IEMajorVersion == 6 ) // If first version digit is 6, we have a IE 6.x.x.x
      {
      // Get SP level
      var IE6SPLevel = 0;
      if( (detectedOS == "XP") &amp;&amp; (IEBuild &gt;= 5512) )
      {
      IE6SPLevel = 3
      }
      else if(( (detectedOS == "XP") &amp;&amp; (IEBuild &gt;= 2180) ) ||
      ( (detectedOS == "2003") &amp;&amp; (IEBuild &gt;= 3959) ) )
      {
      IE6SPLevel = 2
      }
      else if(( (detectedOS == "XP") &amp;&amp; (IEBuild &gt;= 1106) ) ||
      ( (detectedOS == "2003") &amp;&amp; (IEBuild &gt;= 1830) ) )
      {
      IE6SPLevel = 1
      }

      Logger.debug("IE6 SP" + IE6SPLevel + " detected");
      supportedVersion = (IE6SPLevel &gt;= 2);
      rawResult = rawResult + "SP" + IE6SPLevel;
      }
      else
      {
      supportedVersion = (IEMajorVersion &lt;= 8);
      }

      //*******************************************************************************************************
      if( supportedVersion &amp;&amp;
      (IEMajorVersion &lt; 8) )
      {
      //*******************************************************************************************************
      // Check KB975736 hotfix feature on IE6 and IE7 only

      var HasKB975736 = false;

      try
      {
      // Try to use new API introduced in Eikon 2.0 that checks file's features
      HasKB975736 = 	RDMC.IsFileFeaturePresent("FEATURE_ADDITIONAL_MEMORY_CLEANUP_KB975736","%windir%\\system32\\mshtml.dll") ||
      RDMC.IsFileFeaturePresent("FEATURE_ADDITIONAL_IE8_MEMORY_CLEANUP","%windir%\\system32\\mshtml.dll");
      if( HasKB975736 )
      Logger.debug("Found HotFix : KB975736");
      else
      Logger.debug("HotFix NOT found : KB975736");
      }
      catch( e )
      {	// Begin of pre Eikon V2 code
      try
      {
      Logger.debug("Using pre Eikon V2 code to detect KB975736");
      // Create WMI service object
      var WmiServices = GetObject("winmgmts:{impersonationLevel=impersonate}!\\\\.\\root\\cimv2");

      // Check for KB2416400 (MS Bulletin MS10-090) : http://support.microsoft.com/kb/2416400
      var q = WmiServices.ExecQuery("select HotFixID from Win32_QuickFixEngineering where ServicePackInEffect like '%KB2416400%'" );
      if (!q)
      {
      throw new RSTM_ScriptException("error.business.service.unreachable");
      }
      for ( var enumItems = new Enumerator(q); !enumItems.atEnd(); enumItems.moveNext() )
      {
      var objHF		= enumItems.item();
      HasKB975736 = true;
      Logger.debug("Found HotFix : " + objHF.ServicePackInEffect);
      }

      if( !HasKB975736 )
      {
      // Check for KB2482017 (MS Bulletin MS11-003) : http://support.microsoft.com/kb/2482017
      var q = WmiServices.ExecQuery("select HotFixID from Win32_QuickFixEngineering where ServicePackInEffect like '%KB2482017%'" );
      if (!q)
      {
      throw new RSTM_ScriptException("error.business.service.unreachable");
      }
      for ( var enumItems = new Enumerator(q); !enumItems.atEnd(); enumItems.moveNext() )
      {

      var objHF		= enumItems.item();
      HasKB975736 = true;
      Logger.debug("Found HotFix : " + objHF.ServicePackInEffect);
      }
      }

      if( !HasKB975736 )
      {
      // Check for KB2497640 (MS Bulletin MS11-018) : http://support.microsoft.com/kb/2497640
      var q = WmiServices.ExecQuery("select HotFixID from Win32_QuickFixEngineering where ServicePackInEffect like '%KB2497640%'" );
      if (!q)
      {
      throw new RSTM_ScriptException("error.business.service.unreachable");
      }
      for ( var enumItems = new Enumerator(q); !enumItems.atEnd(); enumItems.moveNext() )
      {
      var objHF		= enumItems.item();
      HasKB975736 = true;
      Logger.debug("Found HotFix : " + objHF.ServicePackInEffect);
      }
      }

      if( !HasKB975736 )
      {
      // Check for KB2530548 (MS Bulletin MS11-050) : http://support.microsoft.com/kb/2530548
      var q = WmiServices.ExecQuery("select HotFixID from Win32_QuickFixEngineering where ServicePackInEffect like '%KB2530548%'" );
      if (!q)
      {
      throw new RSTM_ScriptException("error.business.service.unreachable");
      }
      for ( var enumItems = new Enumerator(q); !enumItems.atEnd(); enumItems.moveNext() )
      {
      var objHF		= enumItems.item();
      HasKB975736 = true;
      Logger.debug("Found HotFix : " + objHF.ServicePackInEffect);
      }
      }
      }
      catch(e)
      {
      Logger.debug("A WMI error occured, the presence of KB975736 could not be determined");
      }
      } // End of pre Eikon V2 code

      // Update raw result
      if( HasKB975736 )
      {
      rawResult = rawResult + "_KB975736";
      }

      } // if( supportedVersion )

      //*******************************************************************************************************
      // Add Eikon product installation status

      if( RDMC.isProductInstalled() )
      {
      rawResult = rawResult + "_TRDInstalled";
      }
      else
      {
      rawResult = rawResult + "_TRDNotInstalled";
      }

      //*******************************************************************************************************
      // IE10 is supported from Eikon 3.3 onwards

      var supportedIEList;
      var PRODUCT_VERSION_EIKON_3_3 = "8.3";
      var isEikon33OrNewer = !(IsProductVersionOlderThan(PRODUCT_VERSION_EIKON_3_3));
      if (isEikon33OrNewer)
      {
      supportedIEList = "Internet Explorer 6 SP2 (or higher SP) + KB975736, Internet Explorer 7 + KB975736, Internet Explorer 8, Internet Explorer 9, or Internet Explorer 10."
      }
      else
      {
      supportedIEList = "Internet Explorer 6 SP2 (or higher SP) + KB975736, Internet Explorer 7 + KB975736, Internet Explorer 8, or Internet Explorer 9"
      }
      testResult.setProperty("supportedIEList", supportedIEList, "");

      if ((IEMajorVersion &gt;= 10) &amp;&amp; (!isEikon33OrNewer))
      {
      Logger.info("Product version is too old. Internet Explorer 10 is supported from Eikon 3.3 onwards.");
      rawResult += "_OldTRD";
      }

      testResult.setRawResult(rawResult);


      // ==================== Functions ====================

      function IsProductVersionOlderThan(version)
      {
      Logger.debug("IsProductVersionOlderThan(" + version + ")");
      var isProductVersionOlderThan = true;
      try
      {
      var productVersion = GetProductVersion();
      Logger.debug("Product version = [" + productVersion + "]");
      if (productVersion != "")
      {
      isProductVersionOlderThan = (RDMC.utilities.RDMCCompareVersion(version, productVersion) &gt; 0);
      }
      }
      catch (e) {}
      Logger.debug("IsProductVersionOlderThan(" + version + ") = " + isProductVersionOlderThan);
      return isProductVersionOlderThan;
      }

      function GetProductVersion()
      {
      var version = "";
      Logger.debug("Getting target product version...");
      version = GetTargetProductVersion();
      if (version == "")
      {
      Logger.debug("Getting installed product version...");
      version = GetInstalledProductVersion();
      }
      Logger.debug("GetProductVersion() = [" + version + "]");
      return version;
      }

      function GetTargetProductVersion()
      {
      var version = "";
      try
      {
      version = RDMC.versionInfo.TRD6.m_targetVersion;
      }
      catch (e) {}
      Logger.debug("GetTargetProductVersion() = [" + version + "]");
      return version;
      }

      function GetInstalledProductVersion()
      {
      var version = "";
      try
      {
      version = RDMC.versionInfo.TRD6.m_productVersion;
      }
      catch (e) {}
      Logger.debug("GetInstalledProductVersion() = [" + version + "]");
      return version;
      }

    </stdimpl:javascript>
    <!-- ********************************************************************************* -->
    <!-- IE6 SP0 -->
    <!-- ********************************************************************************* -->
    <testResult>
      <TestResult rdf:about="#tr.11.IE6SP0.no_trd">
        <value>IE6SP0_TRDNotInstalled</value>
        <valid>fail</valid>
        <outcome rdf:resource="#to.11.IExSP0" />
      </TestResult>
    </testResult>
    <!-- ********************************************************************************* -->
    <testResult>
      <TestResult rdf:about="#tr.11.IE6SP0.trd">
        <value>IE6SP0_TRDInstalled</value>
        <valid>fail</valid>
        <outcome rdf:resource="#to.11.IExSP0" />
      </TestResult>
    </testResult>
    <!-- ********************************************************************************* -->
    <!-- IE6 SP0 + KB975736 -->
    <!-- ********************************************************************************* -->
    <testResult>
      <TestResult rdf:about="#tr.11.IE6SP0.KB975736.no_trd">
        <value>IE6SP0_KB975736_TRDNotInstalled</value>
        <valid>fail</valid>
        <outcome rdf:resource="#to.11.IExSP0.KB975736" />
      </TestResult>
    </testResult>
    <!-- ********************************************************************************* -->
    <testResult>
      <TestResult rdf:about="#tr.11.IE6SP0.KB975736.trd">
        <value>IE6SP0_KB975736_TRDInstalled</value>
        <valid>fail</valid>
        <outcome rdf:resource="#to.11.IExSP0.KB975736" />
      </TestResult>
    </testResult>
    <!-- ********************************************************************************* -->
    <!-- IE6 SP1 -->
    <!-- ********************************************************************************* -->
    <testResult>
      <TestResult rdf:about="#tr.11.IE6SP1.no_trd">
        <value>IE6SP1_TRDNotInstalled</value>
        <valid>alert</valid>
        <outcome rdf:resource="#to.11.IExSP1" />
      </TestResult>
    </testResult>
    <!-- ********************************************************************************* -->
    <testResult>
      <TestResult rdf:about="#tr.11.IE6SP1.trd">
        <value>IE6SP1_TRDInstalled</value>
        <valid>fail</valid>
        <outcome rdf:resource="#to.11.IExSP1" />
      </TestResult>
    </testResult>
    <!-- ********************************************************************************* -->
    <!-- IE6 SP1 + KB975736 -->
    <!-- ********************************************************************************* -->
    <testResult>
      <TestResult rdf:about="#tr.11.IE6SP1.KB975736.no_trd">
        <value>IE6SP1_KB975736_TRDNotInstalled</value>
        <valid>warning</valid>
        <outcome rdf:resource="#to.11.IExSP1.KB975736" />
      </TestResult>
    </testResult>
    <!-- ********************************************************************************* -->
    <testResult>
      <TestResult rdf:about="#tr.11.IE6SP1.KB975736.trd">
        <value>IE6SP1_KB975736_TRDInstalled</value>
        <valid>warning</valid>
        <outcome rdf:resource="#to.11.IExSP1.KB975736" />
      </TestResult>
    </testResult>
    <!-- ********************************************************************************* -->
    <!-- IE6 SP2 -->
    <!-- ********************************************************************************* -->
    <testResult>
      <TestResult rdf:about="#tr.11.IE6SP2.no_trd">
        <value>IE6SP2_TRDNotInstalled</value>
        <valid>alert</valid>
        <outcome rdf:resource="#to.11.IExSP2" />
      </TestResult>
    </testResult>
    <!-- ********************************************************************************* -->
    <testResult>
      <TestResult rdf:about="#tr.11.IE6SP2.trd">
        <value>IE6SP2_TRDInstalled</value>
        <valid>fail</valid>
        <outcome rdf:resource="#to.11.IExSP2" />
      </TestResult>
    </testResult>
    <!-- ********************************************************************************* -->
    <!-- IE6 SP2 + KB975736 -->
    <!-- ********************************************************************************* -->
    <testResult>
      <TestResult rdf:about="#tr.11.IE6SP2.KB975736.no_trd">
        <value>IE6SP2_KB975736_TRDNotInstalled</value>
        <valid>pass</valid>
        <outcome rdf:resource="#to.11.IExSP2.KB975736" />
      </TestResult>
    </testResult>
    <!-- ********************************************************************************* -->
    <testResult>
      <TestResult rdf:about="#tr.11.IE6SP2.KB975736.trd">
        <value>IE6SP2_KB975736_TRDInstalled</value>
        <valid>pass</valid>
        <outcome rdf:resource="#to.11.IExSP2.KB975736" />
      </TestResult>
    </testResult>
    <!-- ********************************************************************************* -->
    <!-- IE6 SP3 -->
    <!-- ********************************************************************************* -->
    <testResult>
      <TestResult rdf:about="#tr.11.IE6SP3.no_trd">
        <value>IE6SP3_TRDNotInstalled</value>
        <valid>alert</valid>
        <outcome rdf:resource="#to.11.IExSP3" />
      </TestResult>
    </testResult>
    <!-- ********************************************************************************* -->
    <testResult>
      <TestResult rdf:about="#tr.11.IE6SP3.trd">
        <value>IE6SP3_TRDInstalled</value>
        <valid>fail</valid>
        <outcome rdf:resource="#to.11.IExSP3" />
      </TestResult>
    </testResult>
    <!-- ********************************************************************************* -->
    <!-- IE6 SP3 + KB975736 -->
    <!-- ********************************************************************************* -->
    <testResult>
      <TestResult rdf:about="#tr.11.IE6SP3.KB975736.no_trd">
        <value>IE6SP3_KB975736_TRDNotInstalled</value>
        <valid>pass</valid>
        <outcome rdf:resource="#to.11.IExSP3.KB975736" />
      </TestResult>
    </testResult>
    <!-- ********************************************************************************* -->
    <testResult>
      <TestResult rdf:about="#tr.11.IE6SP3.KB975736.trd">
        <value>IE6SP3_KB975736_TRDInstalled</value>
        <valid>pass</valid>
        <outcome rdf:resource="#to.11.IExSP3.KB975736" />
      </TestResult>
    </testResult>
    <!-- ********************************************************************************* -->
    <!-- IE7 -->
    <!-- ********************************************************************************* -->
    <testResult>
      <TestResult rdf:about="#tr.11.IE7.no_trd">
        <value>IE7_TRDNotInstalled</value>
        <valid>alert</valid>
        <outcome rdf:resource="#to.11.IExSP0" />
      </TestResult>
    </testResult>
    <!-- ********************************************************************************* -->
    <testResult>
      <TestResult rdf:about="#tr.11.IE7.trd">
        <value>IE7_TRDInstalled</value>
        <valid>fail</valid>
        <outcome rdf:resource="#to.11.IExSP0" />
      </TestResult>
    </testResult>
    <!-- ********************************************************************************* -->
    <!-- IE7 + KB975736 -->
    <!-- ********************************************************************************* -->
    <testResult>
      <TestResult rdf:about="#tr.11.IE7.KB975736.no_trd">
        <value>IE7_KB975736_TRDNotInstalled</value>
        <valid>pass</valid>
        <outcome rdf:resource="#to.11.IExSP0.KB975736" />
      </TestResult>
    </testResult>
    <!-- ********************************************************************************* -->
    <testResult>
      <TestResult rdf:about="#tr.11.IE7.KB975736.trd">
        <value>IE7_KB975736_TRDInstalled</value>
        <valid>pass</valid>
        <outcome rdf:resource="#to.11.IExSP0.KB975736" />
      </TestResult>
    </testResult>
    <!-- ********************************************************************************* -->
    <!-- IE8 -->
    <!-- ********************************************************************************* -->
    <testResult>
      <TestResult rdf:about="#tr.11.IE8.no_trd">
        <value>IE8_TRDNotInstalled</value>
        <valid>pass</valid>
        <outcome rdf:resource="#to.11.IExSP0" />
      </TestResult>
    </testResult>
    <!-- ********************************************************************************* -->
    <testResult>
      <TestResult rdf:about="#tr.11.IE8.trd">
        <value>IE8_TRDInstalled</value>
        <valid>pass</valid>
        <outcome rdf:resource="#to.11.IExSP0" />
      </TestResult>
    </testResult>
    <!-- ********************************************************************************* -->
    <!-- IE9 -->
    <!-- ********************************************************************************* -->
    <testResult>
      <TestResult rdf:about="#tr.11.IE9.no_trd">
        <value>IE9_TRDNotInstalled</value>
        <valid>pass</valid>
        <outcome rdf:resource="#to.11.IExSP0" />
      </TestResult>
    </testResult>
    <!-- ********************************************************************************* -->
    <testResult>
      <TestResult rdf:about="#tr.11.IE9.trd">
        <value>IE9_TRDInstalled</value>
        <valid>pass</valid>
        <outcome rdf:resource="#to.11.IExSP0" />
      </TestResult>
    </testResult>
    <!-- ********************************************************************************* -->
    <!-- IE10 -->
    <!-- ********************************************************************************* -->
    <testResult>
      <TestResult rdf:about="#tr.11.IE10.no_trd">
        <value>IE10_TRDNotInstalled</value>
        <valid>pass</valid>
        <outcome rdf:resource="#to.11.IExSP0" />
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.11.IE10.no_trd.old_trd">
        <value>IE10_TRDNotInstalled_OldTRD</value>
        <valid>alert</valid>
        <outcome rdf:resource="#to.11.IExSP0" />
      </TestResult>
    </testResult>
    <!-- ********************************************************************************* -->
    <testResult>
      <TestResult rdf:about="#tr.11.IE10.trd">
        <value>IE10_TRDInstalled</value>
        <valid>pass</valid>
        <outcome rdf:resource="#to.11.IExSP0" />
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.11.IE10.trd.old_trd">
        <value>IE10_TRDInstalled_OldTRD</value>
        <valid>alert</valid>
        <outcome rdf:resource="#to.11.IExSP0" />
      </TestResult>
    </testResult>
    <!-- ********************************************************************************* -->
    <!-- Others versions are not supported -->
    <!-- ********************************************************************************* -->
    <testResult>
      <TestResult rdf:about="#tr.11.IE.other">
        <value>*</value>
        <valid>alert</valid>
        <outcome rdf:resource="#to.11.IE.other" />
      </TestResult>
    </testResult>
  </Test>
  <!-- ********************************************************************************* -->
  <!-- Outcomes -->
  <!-- ********************************************************************************* -->
  <TestOutcome rdf:about="#to.11.IExSP0">
    <run:description xml:lang="en">Internet Explorer %(runPropertyURI='IEMajorVersion').</run:description>
  </TestOutcome>
  <!-- ********************************************************************************* -->
  <TestOutcome rdf:about="#to.11.IExSP0.KB975736">
    <run:description xml:lang="en">Internet Explorer %(runPropertyURI='IEMajorVersion') with KB975736.</run:description>
  </TestOutcome>
  <!-- ********************************************************************************* -->
  <TestOutcome rdf:about="#to.11.IExSP1">
    <run:description xml:lang="en">Internet Explorer %(runPropertyURI='IEMajorVersion') SP1.</run:description>
  </TestOutcome>
  <!-- ********************************************************************************* -->
  <TestOutcome rdf:about="#to.11.IExSP1.KB975736">
    <run:description xml:lang="en">Internet Explorer %(runPropertyURI='IEMajorVersion') SP1 with KB975736.</run:description>
  </TestOutcome>
  <!-- ********************************************************************************* -->
  <TestOutcome rdf:about="#to.11.IExSP2">
    <run:description xml:lang="en">Internet Explorer %(runPropertyURI='IEMajorVersion') SP2.</run:description>
  </TestOutcome>
  <!-- ********************************************************************************* -->
  <TestOutcome rdf:about="#to.11.IExSP2.KB975736">
    <run:description xml:lang="en">Internet Explorer %(runPropertyURI='IEMajorVersion') SP2 with KB975736.</run:description>
  </TestOutcome>
  <!-- ********************************************************************************* -->
  <TestOutcome rdf:about="#to.11.IExSP3">
    <run:description xml:lang="en">Internet Explorer %(runPropertyURI='IEMajorVersion') SP3.</run:description>
  </TestOutcome>
  <!-- ********************************************************************************* -->
  <TestOutcome rdf:about="#to.11.IExSP3.KB975736">
    <run:description xml:lang="en">Internet Explorer %(runPropertyURI='IEMajorVersion') SP3 with KB975736.</run:description>
  </TestOutcome>
  <!-- ********************************************************************************* -->
  <TestOutcome rdf:about="#to.11.IE.other">
    <run:description xml:lang="en">Internet Explorer %(runPropertyURI='IEMajorVersion'). Thomson Reuters is currently validating Thomson Reuters Eikon with Internet Explorer %(runPropertyURI='IEMajorVersion').</run:description>
  </TestOutcome>
  <!-- ********************************************************************************* -->
  <!-- Redefinitions -->
  <!-- ********************************************************************************* -->
  <NaturalRedefinition rdf:about="#redef.OS.XP">
    <redef:overrides rdf:resource="#test.11" />
    <rfs:OS>XP</rfs:OS>
  </NaturalRedefinition>
  <!-- ********************************************************************************* -->
  <NaturalRedefinition rdf:about="#redef.OS.2003">
    <redef:overrides rdf:resource="#test.11" />
    <rfs:OS>2003</rfs:OS>
  </NaturalRedefinition>
  <!-- ********************************************************************************* -->
  <NaturalRedefinition rdf:about="#redef.OS.VISTA">
    <redef:overrides rdf:resource="#test.11" />
    <rfs:OS>VISTA</rfs:OS>
  </NaturalRedefinition>
  <!-- ********************************************************************************* -->
  <NaturalRedefinition rdf:about="#redef.OS.2008">
    <redef:overrides rdf:resource="#test.11" />
    <rfs:OS>2008</rfs:OS>
  </NaturalRedefinition>
  <!-- ********************************************************************************* -->
  <NaturalRedefinition rdf:about="#redef.OS.SEVEN">
    <redef:overrides rdf:resource="#test.11" />
    <rfs:OS>SEVEN</rfs:OS>
  </NaturalRedefinition>
  <!-- ********************************************************************************* -->
  <NaturalRedefinition rdf:about="#redef.OS.EIGHT">
    <redef:overrides rdf:resource="#test.11" />
    <rfs:OS>EIGHT</rfs:OS>
  </NaturalRedefinition>
  <!-- ********************************************************************************* -->
  <NaturalRedefinition rdf:about="#redef.OS.2012">
    <redef:overrides rdf:resource="#test.11" />
    <rfs:OS>2012</rfs:OS>
  </NaturalRedefinition>
  <Test rdf:about="#test.64">
    <!-- Header -->
    <object>ConfigProvider.common.realtime.displaytemplate.path</object>
    <requiresPlugin rdf:resource="#rstplugin.provider.6" />
    <isContainedBy rdf:resource="#group.information.rde" />
    <priority>5</priority>
    <dc:title xml:lang="en">Display Template Path:</dc:title>
    <!-- Display -->
    <default:description xml:lang="en">%(runPropertyURI='value')</default:description>
  </Test>
  <Test rdf:about="#test.92">
    <object>reuters_mnc.name='ConnexionHeatBeat'.value</object>
    <requiresPlugin rdf:resource="#rstplugin.provider.6" />
    <isContainedBy rdf:resource="#group.serviceAvailability" />
    <priority>7</priority>
    <dc:title xml:lang="en">Platform Connection Check:</dc:title>
    <testResult>
      <TestResult rdf:about="#tr.92.0">
        <value>9</value>
        <valid>fail</valid>
        <outcome>
          <TestOutcome rdf:about="#tr.92.0">
            <run:description>Connection problem.</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.92.1">
        <value>-1</value>
        <valid>fail</valid>
        <outcome>
          <TestOutcome rdf:about="#tr.92.1">
            <run:description>Fail.</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.92.2">
        <value>200</value>
        <valid>pass</valid>
        <outcome>
          <TestOutcome rdf:about="#tr.92.2">
            <run:description>Pass.</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
  </Test>
  <Test rdf:about="#test.94">
    <!-- Header -->
    <!-- Header -->
    <object>reuters_mnc.name='Connexion'.value</object>
    <requiresPlugin rdf:resource="#rstplugin.provider.6" />
    <isContainedBy rdf:resource="#group.realtime" />
    <priority>7</priority>
    <dc:title xml:lang="en">Current Real-time Network:</dc:title>
    <!-- Display -->
    <testResult>
      <TestResult rdf:about="#tr.94.0">
        <value>MPLS</value>
        <valid>info</valid>
        <outcome>
          <TestOutcome rdf:about="#tr.94.0">
            <run:description>Private delivery.</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.94.1">
        <value>Not Available</value>
        <valid>fail</valid>
        <outcome>
          <TestOutcome rdf:about="#tr.94.1">
            <run:description>Not available.</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.94.2">
        <value>*</value>
        <valid>info</valid>
        <outcome>
          <TestOutcome rdf:about="#tr.94.2">
            <run:description>Internet delivery.</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
  </Test>
  <Test rdf:about="#test.120">
    <!-- Header -->
    <object>ConfigProvider.RDE_SSO_DATA_CENTER</object>
    <isContainedBy rdf:resource="#group.networking.connected" />
    <priority>1</priority>
    <dc:title xml:lang="en">Platform Name:</dc:title>
    <!-- Parameters -->
    <rfs:rawResultForError>#ERROR!</rfs:rawResultForError>
    <!-- Display -->
    <default:description xml:lang="en">%(runPropertyURI='value')</default:description>
    <testResult>
      <TestResult rdf:about="#tr.120.novalue">
        <value>#ERROR!</value>
        <valid>warning</valid>
        <outcome>
          <TestOutcome rdf:about="#to.120.novalue">
            <run:description xml:lang="en">Unable to retrieve Home Site</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.120.platformname">
        <value>*</value>
        <valid>info</valid>
        <outcome>
          <TestOutcome rdf:about="#to.120.platformname">
            <run:description xml:lang="en">%(runPropertyURI='value')</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
  </Test>
  <Test rdf:about="#test.122">
    <!-- Header -->
    <object>ConfigProvider.USERDETAILS.COUNTRY</object>
    <isContainedBy rdf:resource="#group.information.rde" />
    <priority>1</priority>
    <dc:title xml:lang="en">User Country:</dc:title>
    <!-- Parameters -->
    <rfs:rawResultForError>#ERROR!</rfs:rawResultForError>
    <!-- Display -->
    <default:description xml:lang="en">%(runPropertyURI='value')</default:description>
    <testResult>
      <TestResult rdf:about="#tr.122.novalue">
        <value>#ERROR!</value>
        <valid>warning</valid>
        <outcome>
          <TestOutcome rdf:about="#to.122.novalue">
            <run:description xml:lang="en">Unable to retrieve user's country</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.122.user_country">
        <value>*</value>
        <valid>info</valid>
        <outcome>
          <TestOutcome rdf:about="#to.122.user_country">
            <run:description xml:lang="en">%(runPropertyURI='value')</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
  </Test>
  <Plugin rdf:about="#rstplugin.time-series">
    <dc:description>Time Series Plugin</dc:description>
    <conf:dll>RstPluginTimeSeries.dll</conf:dll>
    <conf:classID>7BCA5D09-94E1-4a3e-BD20-ACA4B639B8F2</conf:classID>
  </Plugin>
  <TestResult rdf:about="#tr.rstplugin.time-series.fail">
    <value>*</value>
    <valid>fail</valid>
    <outcome rdf:resource="#to.rst.test.fail.wric" />
  </TestResult>
  <!-- ### TODO Display actuall error) -->
  <TestResult rdf:about="#tr.rstplugin.time-series.pass">
    <value>0</value>
    <valid>pass</valid>
    <outcome rdf:resource="#to.rst.test.pass.wric" />
  </TestResult>
  <Error rdf:about="#error.rstplugin.time-series.init">
    <dc:title xml:lang="en">Time Series initialization error.</dc:title>
    <dc:description xml:lang="en">This exception is thrown during the early initialization before the Time Series session is opened successfully.</dc:description>
    <valid>fail</valid>
    <outcome>
      <TestOutcome rdf:about="#to.error.rstplugin.time-series.init">
        <run:description xml:lang="en">Initialization failed: %(runPropertyURI='errorParameter1')</run:description>
      </TestOutcome>
    </outcome>
  </Error>
  <Error rdf:about="#error.rstplugin.time-series.datarequest">
    <dc:title xml:lang="en">Time Series data request error.</dc:title>
    <dc:description xml:lang="en">This exception is thrown after the Time Series session was opened and before a successful GetData().</dc:description>
    <valid>fail</valid>
    <outcome>
      <TestOutcome rdf:about="#to.error.rstplugin.time-series.datarequest">
        <run:description xml:lang="en">Data request failed.</run:description>
      </TestOutcome>
    </outcome>
  </Error>
  <Error rdf:about="#error.rstplugin.time-series.timeout">
    <dc:title xml:lang="en">Time Series timeout error.</dc:title>
    <dc:description xml:lang="en">This exception is after no data is received by Time Series for an extended period of time.</dc:description>
    <valid>fail</valid>
    <outcome>
      <!-- ### TODO factorize TIMEOUT -->
      <TestOutcome rdf:about="#to.error.rstplugin.time-series.timeout">
        <run:description xml:lang="en">Timeout (with RIC %(rfsPropertyURI='RIC')).</run:description>
      </TestOutcome>
    </outcome>
  </Error>
  <Test rdf:about="#test.59">
    <!-- Header -->
    <requiresPlugin rdf:resource="#rstplugin.time-series.6" />
    <!--<rfs:isRerunAllowed>true</rfs:isRerunAllowed>-->
    <object>Reuters_TimeSeriesNetwork.name='TimeAndSalesSnapshot'.value</object>
    <isContainedBy rdf:resource="#group.tsi" />
    <priority>32</priority>
    <dc:title xml:lang="en">Time Series Snapshot Availability:</dc:title>
    <dc:description xml:lang="en">
      Time Series snapshot test. It uses Time Series to fetch data about quotation at the transaction
      level, ie when it actually happens, at the tick level. It actually goes fetch the data for the past 20 years.
    </dc:description>
    <!-- Test parameters -->
    <rfs:RIC>%(randomRicListID='ric-list.random-permissioned.TSI')</rfs:RIC>
    <rfs:Timeout>40</rfs:Timeout>
    <!-- Display -->
    <!--<default:description xml:lang="en">%(runPropertyURI='value')</default:description> -->
    <!-- Validation Logic -->
    <testResult rdf:resource="#tr.rstplugin.time-series.fail" />
    <testResult rdf:resource="#tr.rstplugin.time-series.pass" />
  </Test>
  <Test rdf:about="#test.60">
    <!-- Header -->
    <requiresPlugin rdf:resource="#rstplugin.time-series.6" />
    <!--<rfs:isRerunAllowed>true</rfs:isRerunAllowed>-->
    <object>Reuters_TimeSeriesNetwork.name='TimeAndSalesStreaming'.value</object>
    <isContainedBy rdf:resource="#group.tsi" />
    <priority>32</priority>
    <dc:title xml:lang="en">Time Series Streaming Availability:</dc:title>
    <dc:description xml:lang="en">
      Time Series streaming test. It uses Time Series to fetch data about quotation at the transaction
      level, ie when it actually happens, at the tick level. Since this is streaming/realtime, it does not fetch data
      because markets might be closed at the times the test runs, but just leaves on connection acknowledge.
    </dc:description>
    <!-- Test parameters -->
    <rfs:RIC>%(randomRicListID='ric-list.random-permissioned.TSI')</rfs:RIC>
    <rfs:Timeout>40</rfs:Timeout>
    <!-- Display -->
    <!--<default:description xml:lang="en">%(runPropertyURI='value')</default:description> -->
    <!-- Validation Logic -->
    <testResult rdf:resource="#tr.rstplugin.time-series.fail" />
    <testResult rdf:resource="#tr.rstplugin.time-series.pass" />
  </Test>
  <Test rdf:about="#test.86">
    <!-- Header -->
    <object>Reuters_RstTest.name='donotcachesslpages'.value</object>
    <priority>0.992</priority>
    <isContainedBy rdf:resource="#group.prerequisites.software" />
    <dc:title xml:lang="en">Saving Encrypted Pages to Disk:</dc:title>
    <dc:description xml:lang="en">Tells wether the IE stores SSL secured page in the cache</dc:description>
    <!-- Display -->
    <default:description xml:lang="en">%(runPropertyURI='value')</default:description>
    <!-- Validation Logic -->
    <stdimpl:javascript>

      var WshShell = new ActiveXObject( "WScript.Shell" );
      try{

      var status  = WshShell.RegRead("HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Internet Settings\\DisableCachingOfSSLPages");

      }
      catch (e)
      {
      if (e.number == -2147024894) /* key not found */
      var status = WshShell.RegRead("HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Internet Explorer\\AdvancedOptions\\CRYPTO\\CACHE_PAGES\\DefaultValue");
      }

      testResult.setRawResult(status);

    </stdimpl:javascript>
    <testResult>
      <TestResult rdf:about="#tr.86.1">
        <value>0</value>
        <valid>pass</valid>
        <outcome>
          <TestOutcome rdf:about="#to.86.1">
            <run:description xml:lang="en">SSL pages are cached.</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.86.2">
        <value>1</value>
        <valid>alert</valid>
        <outcome>
          <TestOutcome rdf:about="#to.86.2">
            <run:description xml:lang="en">SSL pages are not cached.</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
  </Test>
  <Test rdf:about="#test.87">
    <!-- Header -->
    <object>Reuters_RstTest.name='enablehttp11'.value</object>
    <priority>0.99</priority>
    <isContainedBy rdf:resource="#group.prerequisites.software" />
    <dc:title xml:lang="en">HTTP 1.1:</dc:title>
    <dc:description xml:lang="en">Tells wether HTTP 1.1 is enabled here on client side</dc:description>
    <!-- Display -->
    <default:description xml:lang="en">%(runPropertyURI='value')</default:description>
    <!-- Validation Logic -->
    <stdimpl:javascript>

      var WshShell = new ActiveXObject( "WScript.Shell" );
      try{

      var status  = WshShell.RegRead("HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Internet Settings\\EnableHttp1_1");

      }
      catch (e)
      {
      if (e.number == -2147024894) /* key not found */
      var status = WshShell.RegRead("HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Internet Explorer\\AdvancedOptions\\HTTP\\GENABLE\\DefaultValue");
      }

      if (status == "0")
      {
      if (RDMC.isProductInstalled())
      {
      testResult.setRawResult("Fail");
      }
      else
      {
      testResult.setRawResult("Disabled");
      }
      }
      else
      {
      testResult.setRawResult("Enabled");
      }
    </stdimpl:javascript>
    <testResult>
      <TestResult rdf:about="#tr.87.1">
        <value>Disabled</value>
        <valid>alert</valid>
        <outcome>
          <TestOutcome rdf:about="#to.87.1">
            <run:description xml:lang="en">Disabled.</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.87.2">
        <value>Enabled</value>
        <valid>pass</valid>
        <outcome>
          <TestOutcome rdf:about="#to.87.2">
            <run:description xml:lang="en">Enabled.</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.87.3">
        <value>Fail</value>
        <valid>fail</valid>
        <outcome>
          <TestOutcome rdf:about="#to.87.3">
            <run:description xml:lang="en">Disabled.</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
  </Test>
  <Test rdf:about="#test.88">
    <!-- Header -->
    <object>Reuters_RstTest.name='enablehttpproxy11'.value</object>
    <isContainedBy rdf:resource="#group.prerequisites.software" />
    <priority>0.991</priority>
    <dc:title xml:lang="en">HTTP 1.1 Through Proxy Connections:</dc:title>
    <dc:description xml:lang="en">Tells wether HTTP 1.1 proxies can be used</dc:description>
    <!-- Validation Logic -->
    <stdimpl:javascript>
      var WshShell = new ActiveXObject( "WScript.Shell" );

      var proxyConfigured = 0;
      try
      {
      // first test if configuration script for proxy is used (proxy pac)
      proxyConfigured = WshShell.RegRead("HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Internet Settings\\AutoConfigURL");
      }
      catch (e)
      {
      // no proxy pac, test the manual proxy key
      if (e.number == -2147024894) /* key not found */
      proxyConfigured = WshShell.RegRead("HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Internet Settings\\ProxyEnable");
      }

      Logger.debug("enablehttpproxy11:: proxyConfigured == " + proxyConfigured);

      try
      {
      var status  = WshShell.RegRead("HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Internet Settings\\ProxyHttp1.1");
      }
      catch (e)
      {
      if (e.number == -2147024894) /* key not found */
      var status = WshShell.RegRead("HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Internet Explorer\\AdvancedOptions\\HTTP\\PROXY\\DefaultValue");
      }

      if (status == "0")
      {
      if (proxyConfigured != "0")
      {
      Logger.debug("enablehttpproxy11:: proxy set but http1.1 through proxy not checked");
      if (!RDMC.isProductInstalled())
      {
      Logger.debug("enablehttpproxy11:: product not installed, test alert");
      testResult.setRawResult("Disabled");
      }
      else
      {
      Logger.debug("enablehttpproxy11:: product installed, test fail");
      testResult.setRawResult("Fail");
      }
      }
      else
      {
      Logger.debug("enablehttpproxy11:: no proxy configured, http1.1 through proxy not checked");
      testResult.setRawResult("Disabled");
      }
      }
      else
      {
      testResult.setRawResult("Enabled");
      }

    </stdimpl:javascript>
    <testResult>
      <TestResult rdf:about="#tr.88.1">
        <value>Disabled</value>
        <valid>alert</valid>
        <outcome>
          <TestOutcome rdf:about="#to.88.1">
            <run:description xml:lang="en">Disabled.</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.88.2">
        <value>Enabled</value>
        <valid>pass</valid>
        <outcome>
          <TestOutcome rdf:about="#to.88.2">
            <run:description xml:lang="en">Enabled.</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.88.3">
        <value>Fail</value>
        <valid>fail</valid>
        <outcome>
          <TestOutcome rdf:about="#to.88.3">
            <run:description xml:lang="en">Disabled.</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
  </Test>
  <Test rdf:about="#test.123">
    <!-- Header -->
    <object>Reuters_RstTest.name='testUpdateProxyConnection'.status</object>
    <isContainedBy rdf:resource="#group.prerequisites.software" />
    <priority>2</priority>
    <dc:title xml:lang="en">Update Proxy Connection Check:</dc:title>
    <!-- Display -->
    <!--<default:description xml:lang="en">TESTMSG_DEFAULT_DESCRIPTION_TEST_123</default:description>-->
    <!-- Variables -->
    <!-- ********************************************************************************* -->
    <!-- Success using command line -->
    <!-- ********************************************************************************* -->
    <testResult>
      <TestResult rdf:about="#tr.123.success.cmdline">
        <value>succeeded_cmdline</value>
        <valid>pass</valid>
        <outcome>
          <TestOutcome rdf:about="#tr.123.success.cmdline">
            <run:description>Successfully connected to %(runPropertyURI='updateProxyAddress') from the command line.</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
    <!-- ********************************************************************************* -->
    <!-- Success using RUSS registry -->
    <!-- ********************************************************************************* -->
    <testResult>
      <TestResult rdf:about="#tr.123.success.registry">
        <value>succeeded_registry</value>
        <valid>pass</valid>
        <outcome>
          <TestOutcome rdf:about="#tr.123.success.registry">
            <run:description>Successfully connected to %(runPropertyURI='updateProxyAddress') from the registry.</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
    <!-- ********************************************************************************* -->
    <!-- Success using configuration -->
    <!-- ********************************************************************************* -->
    <testResult>
      <TestResult rdf:about="#tr.123.success.configuration">
        <value>succeeded_configuration</value>
        <valid>pass</valid>
        <outcome>
          <TestOutcome rdf:about="#tr.123.success.configuration">
            <run:description>Successfully connected to %(runPropertyURI='updateProxyAddress') from the product configuration.</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
    <!-- ********************************************************************************* -->
    <!-- Connection failed using command line (Product not installed) -->
    <!-- ********************************************************************************* -->
    <testResult>
      <TestResult rdf:about="#tr.123.connection_failed.not_installed.cmdline">
        <value>connection_failed_not_installed_cmdline</value>
        <valid>alert</valid>
        <outcome>
          <TestOutcome rdf:about="#tr.123.connection_failed.not_installed.cmdline">
            <run:description>Failed to connect to %(runPropertyURI='updateProxyAddress') from the command line.</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
    <!-- ********************************************************************************* -->
    <!-- Connection failed using registry (Product not installed) -->
    <!-- ********************************************************************************* -->
    <testResult>
      <TestResult rdf:about="#tr.123.connection_failed.not_installed.registry">
        <value>connection_failed_not_installed_registry</value>
        <valid>alert</valid>
        <outcome>
          <TestOutcome rdf:about="#tr.123.connection_failed.not_installed.registry">
            <run:description>Failed to connect to %(runPropertyURI='updateProxyAddress') from the registry.</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
    <!-- ********************************************************************************* -->
    <!-- Connection failed using configuration (Product not installed) -->
    <!-- ********************************************************************************* -->
    <testResult>
      <TestResult rdf:about="#tr.123.connection_failed.not_installed.configuration">
        <value>connection_failed_not_installed_configuration</value>
        <valid>alert</valid>
        <outcome>
          <TestOutcome rdf:about="#tr.123.connection_failed.not_installed.configuration">
            <run:description>Failed to connect to %(runPropertyURI='updateProxyAddress') from the product configuration.</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
    <!-- ********************************************************************************* -->
    <!-- Connection failed using command line (Product installed) -->
    <!-- ********************************************************************************* -->
    <testResult>
      <TestResult rdf:about="#tr.123.connection_failed.installed.cmdline">
        <value>connection_failed_installed_cmdline</value>
        <valid>warning</valid>
        <outcome>
          <TestOutcome rdf:about="#tr.123.connection_failed.installed.cmdline">
            <run:description>Failed to connect to %(runPropertyURI='updateProxyAddress') from the command line.</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
    <!-- ********************************************************************************* -->
    <!-- Connection failed using registry (Product installed) -->
    <!-- ********************************************************************************* -->
    <testResult>
      <TestResult rdf:about="#tr.123.connection_failed.installed.registry">
        <value>connection_failed_installed_registry</value>
        <valid>warning</valid>
        <outcome>
          <TestOutcome rdf:about="#tr.123.connection_failed.installed.registry">
            <run:description>Failed to connect to %(runPropertyURI='updateProxyAddress') from the registry.</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
    <!-- ********************************************************************************* -->
    <!-- Connection failed using configuration(Product installed) -->
    <!-- ********************************************************************************* -->
    <testResult>
      <TestResult rdf:about="#tr.123.connection_failed.installed.configuration">
        <value>connection_failed_installed_configuration</value>
        <valid>warning</valid>
        <outcome>
          <TestOutcome rdf:about="#tr.123.connection_failed.installed.configuration">
            <run:description>Failed to connect to %(runPropertyURI='updateProxyAddress') from the product configuration.</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
    <!-- ********************************************************************************* -->
    <!-- Configuration error  -->
    <!-- ********************************************************************************* -->
    <testResult>
      <TestResult rdf:about="#tr.123.configuration_error">
        <value>configuration_error</value>
        <valid>info</valid>
        <outcome>
          <TestOutcome rdf:about="#to.123.configuration_error">
            <run:description>No Update Proxy address found in the configuration file.</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
    <!-- ********************************************************************************* -->
    <!-- Registry error  -->
    <!-- ********************************************************************************* -->
    <testResult>
      <TestResult rdf:about="#tr.123.registry_error">
        <value>registry_error</value>
        <valid>info</valid>
        <outcome>
          <TestOutcome rdf:about="#to.123.registry_error">
            <run:description>No Update Proxy address found in the registry.</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
    <!-- ********************************************************************************* -->
  </Test>
  <Plugin rdf:about="#rstplugin.networking.connected">
    <dc:description>Networking Tools Plugin</dc:description>
    <conf:dll>RstPluginNetworking.dll</conf:dll>
    <conf:classID>9DEF3EB0-7DA5-4c02-8EEA-ACF25B08BF27</conf:classID>
  </Plugin>
  <Test rdf:about="#test.95">
    <!-- Header -->
    <requiresPlugin rdf:resource="#rstplugin.networking.connected.6" />
    <!--<rfs:isRerunAllowed>true</rfs:isRerunAllowed>-->
    <object>reuters_rsttest.name='testBandwidth_down'.status</object>
    <isContainedBy rdf:resource="#group.networking.connected" />
    <priority>0.2002</priority>
    <dc:title xml:lang="en">Download Bandwidth:</dc:title>
    <dc:description xml:lang="en">Tests the bandwidth for download data between your local computer and the Thomson Reuters server</dc:description>
    <!-- Display -->
    <default:description xml:lang="en">%(runPropertyURI='value', datatypeURI='?units=bps,kbps,Mbps&amp;precision=1')</default:description>
    <rfs:urlType>DT_CONNECTED</rfs:urlType>
    <testResult>
      <TestResult rdf:about="#tr.95.0">
        <value>=0</value>
        <valid>warning</valid>
        <outcome>
          <TestOutcome rdf:about="#tr.95.0">
            <run:description xml:lang="en">%(runPropertyURI='value', datatypeURI='?units=bps,kbps,Mbps&amp;precision=1')</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.95.1">
        <value>*</value>
        <valid>info</valid>
        <outcome>
          <TestOutcome rdf:about="#tr.95.1">
            <run:description xml:lang="en">%(runPropertyURI='value', datatypeURI='?units=bps,kbps,Mbps&amp;precision=1')</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
  </Test>
  <Test rdf:about="#test.96">
    <!-- Header -->
    <requiresPlugin rdf:resource="#rstplugin.networking.connected.6" />
    <!--<rfs:isRerunAllowed>true</rfs:isRerunAllowed>-->
    <object>reuters_rsttest.name='testBandwidth_up'.status</object>
    <isContainedBy rdf:resource="#group.networking.connected" />
    <priority>0.2004</priority>
    <dc:title xml:lang="en">Upload Bandwidth:</dc:title>
    <dc:description xml:lang="en">Tests the bandwidth for download data between your local computer and the Thomson Reuters server</dc:description>
    <!-- Display -->
    <default:description xml:lang="en">%(runPropertyURI='value', datatypeURI='?units=bps,kbps,Mbps&amp;precision=1')</default:description>
    <rfs:urlType>DT_CONNECTED</rfs:urlType>
    <testResult>
      <TestResult rdf:about="#tr.96.0">
        <value>=0</value>
        <valid>warning</valid>
        <outcome>
          <TestOutcome rdf:about="#tr.96.0">
            <run:description xml:lang="en">%(runPropertyURI='value', datatypeURI='?units=bps,kbps,Mbps&amp;precision=1')</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.96.1">
        <value>*</value>
        <valid>info</valid>
        <outcome>
          <TestOutcome rdf:about="#tr.96.1">
            <run:description xml:lang="en">%(runPropertyURI='value', datatypeURI='?units=bps,kbps,Mbps&amp;precision=1')</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
  </Test>
  <Test rdf:about="#test.112">
    <!-- Header -->
    <requiresPlugin rdf:resource="#rstplugin.networking.connected.6" />
    <!--<rfs:isRerunAllowed>true</rfs:isRerunAllowed>-->
    <object>reuters_rsttest.name='testLatency'.status</object>
    <isContainedBy rdf:resource="#group.networking.connected" />
    <priority>0.2006</priority>
    <dc:title xml:lang="en">Average Latency (One Way):</dc:title>
    <dc:description xml:lang="en">Tests the network latency between your local computer and the Thomson Reuters server</dc:description>
    <!-- Display -->
    <default:description xml:lang="en">%(runPropertyURI='value', datatypeURI='?units=ms,s&amp;precision=1')</default:description>
    <rfs:urlType>DT_CONNECTED</rfs:urlType>
    <testResult>
      <TestResult rdf:about="#tr.112.0">
        <value>=0</value>
        <valid>warning</valid>
        <outcome>
          <TestOutcome rdf:about="#tr.112.0">
            <run:description xml:lang="en">%(runPropertyURI='value', datatypeURI='?units=ms,s&amp;precision=1')</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.112.1">
        <value>*</value>
        <valid>info</valid>
        <outcome>
          <TestOutcome rdf:about="#tr.112.1">
            <run:description xml:lang="en">%(runPropertyURI='value', datatypeURI='?units=ms,s&amp;precision=1')</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
  </Test>
  <Plugin rdf:about="#rstplugin.networking.not-connected">
    <dc:description>Migration Readiness Tools Plugin</dc:description>
    <conf:dll>RstPluginNetworking.dll</conf:dll>
    <conf:classID>9DEF3EB0-7DA5-4c02-8EEA-ACF25B08BF27</conf:classID>
  </Plugin>
  <Test rdf:about="#test.100">
    <!-- Header -->
    <requiresPlugin rdf:resource="#rstplugin.networking.not-connected.6" />
    <object>reuters_rsttest.name='testBandwidth_down'.status</object>
    <isContainedBy rdf:resource="#group.networking.not-connected" />
    <priority>0.2004</priority>
    <dc:title xml:lang="en">Download bandwidth for %GEO_ZONE%1 Internet:</dc:title>
    <dc:description xml:lang="en">Tests the bandwidth for download data between your local computer and the Thomson Reuters server</dc:description>
    <!-- Display -->
    <default:description xml:lang="en">%(runPropertyURI='value', datatypeURI='?units=bps,kbps,Mbps&amp;precision=1')</default:description>
    <rfs:urlType>DT_INTERNET_MAIN</rfs:urlType>
    <rfs:dataCenterZone>%GEO_ZONE%</rfs:dataCenterZone>
    <testResult>
      <TestResult rdf:about="#tr.100.0">
        <value>=0</value>
        <valid>warning</valid>
        <outcome>
          <TestOutcome rdf:about="#tr.100.0">
            <run:description xml:lang="en">%(runPropertyURI='value', datatypeURI='?units=bps,kbps,Mbps&amp;precision=1')</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.100.1">
        <value>*</value>
        <valid>info</valid>
        <outcome>
          <TestOutcome rdf:about="#tr.100.1">
            <run:description xml:lang="en">%(runPropertyURI='value', datatypeURI='?units=bps,kbps,Mbps&amp;precision=1')</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
  </Test>
  <Test rdf:about="#test.102">
    <!-- Header -->
    <requiresPlugin rdf:resource="#rstplugin.networking.not-connected.6" />
    <object>reuters_rsttest.name='testBandwidth_up'.status</object>
    <isContainedBy rdf:resource="#group.networking.not-connected" />
    <priority>0.2005</priority>
    <dc:title xml:lang="en">Upload bandwidth for %GEO_ZONE%1 Internet:</dc:title>
    <dc:description xml:lang="en">Tests the upload for download data between your local computer and the Thomson Reuters server</dc:description>
    <!-- Display -->
    <default:description xml:lang="en">%(runPropertyURI='value', datatypeURI='?units=bps,kbps,Mbps&amp;precision=1')</default:description>
    <rfs:urlType>DT_INTERNET_MAIN</rfs:urlType>
    <rfs:dataCenterZone>%GEO_ZONE%</rfs:dataCenterZone>
    <testResult>
      <TestResult rdf:about="#tr.102.0">
        <value>=0</value>
        <valid>warning</valid>
        <outcome>
          <TestOutcome rdf:about="#tr.102.0">
            <run:description xml:lang="en">%(runPropertyURI='value', datatypeURI='?units=bps,kbps,Mbps&amp;precision=1')</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.102.1">
        <value>*</value>
        <valid>info</valid>
        <outcome>
          <TestOutcome rdf:about="#tr.102.1">
            <run:description xml:lang="en">%(runPropertyURI='value', datatypeURI='?units=bps,kbps,Mbps&amp;precision=1')</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
  </Test>
  <Test rdf:about="#test.101">
    <!-- Header -->
    <requiresPlugin rdf:resource="#rstplugin.networking.not-connected.6" />
    <object>reuters_rsttest.name='testBandwidth_down'.status</object>
    <isContainedBy rdf:resource="#group.networking.not-connected" />
    <priority>0.2008</priority>
    <dc:title xml:lang="en">Download bandwidth for %GEO_ZONE%2 Internet:</dc:title>
    <dc:description xml:lang="en">Tests the bandwidth for download data between your local computer and the Thomson Reuters server</dc:description>
    <!-- Display -->
    <default:description xml:lang="en">%(runPropertyURI='value', datatypeURI='?units=bps,kbps,Mbps&amp;precision=1')</default:description>
    <rfs:urlType>DT_INTERNET_FAILOVER</rfs:urlType>
    <rfs:dataCenterZone>%GEO_ZONE%</rfs:dataCenterZone>
    <testResult>
      <TestResult rdf:about="#tr.101.0">
        <value>=0</value>
        <valid>warning</valid>
        <outcome>
          <TestOutcome rdf:about="#tr.101.0">
            <run:description xml:lang="en">%(runPropertyURI='value', datatypeURI='?units=bps,kbps,Mbps&amp;precision=1')</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.101.1">
        <value>*</value>
        <valid>info</valid>
        <outcome>
          <TestOutcome rdf:about="#tr.101.1">
            <run:description xml:lang="en">%(runPropertyURI='value', datatypeURI='?units=bps,kbps,Mbps&amp;precision=1')</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
  </Test>
  <Test rdf:about="#test.103">
    <!-- Header -->
    <requiresPlugin rdf:resource="#rstplugin.networking.not-connected.6" />
    <object>reuters_rsttest.name='testBandwidth_up'.status</object>
    <isContainedBy rdf:resource="#group.networking.not-connected" />
    <priority>0.2009</priority>
    <dc:title xml:lang="en">Upload bandwidth for %GEO_ZONE%2 Internet:</dc:title>
    <dc:description xml:lang="en">Tests the bandwidth for upload data between your local computer and the Thomson Reuters server</dc:description>
    <!-- Display -->
    <default:description xml:lang="en">%(runPropertyURI='value', datatypeURI='?units=bps,kbps,Mbps&amp;precision=1')</default:description>
    <rfs:urlType>DT_INTERNET_FAILOVER</rfs:urlType>
    <rfs:dataCenterZone>%GEO_ZONE%</rfs:dataCenterZone>
    <testResult>
      <TestResult rdf:about="#tr.103.0">
        <value>=0</value>
        <valid>warning</valid>
        <outcome>
          <TestOutcome rdf:about="#tr.103.0">
            <run:description xml:lang="en">%(runPropertyURI='value', datatypeURI='?units=bps,kbps,Mbps&amp;precision=1')</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.103.1">
        <value>*</value>
        <valid>info</valid>
        <outcome>
          <TestOutcome rdf:about="#tr.103.1">
            <run:description xml:lang="en">%(runPropertyURI='value', datatypeURI='?units=bps,kbps,Mbps&amp;precision=1')</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
  </Test>
  <Test rdf:about="#test.104">
    <!-- Header -->
    <requiresPlugin rdf:resource="#rstplugin.networking.not-connected.6" />
    <object>reuters_rsttest.name='testBandwidth_down'.status</object>
    <isContainedBy rdf:resource="#group.networking.not-connected" />
    <priority>0.2002</priority>
    <dc:title xml:lang="en">Download bandwidth for %GEO_ZONE%1 Private Network:</dc:title>
    <dc:description xml:lang="en">Tests the bandwidth for download data between your local computer and the Thomson Reuters server</dc:description>
    <!-- Display -->
    <default:description xml:lang="en">%(runPropertyURI='value', datatypeURI='?units=bps,kbps,Mbps&amp;precision=1')</default:description>
    <rfs:urlType>DT_MPLS_MAIN</rfs:urlType>
    <rfs:dataCenterZone>%GEO_ZONE%</rfs:dataCenterZone>
    <testResult>
      <TestResult rdf:about="#tr.104.0">
        <value>=0</value>
        <valid>warning</valid>
        <outcome>
          <TestOutcome rdf:about="#tr.104.0">
            <run:description xml:lang="en">%(runPropertyURI='value', datatypeURI='?units=bps,kbps,Mbps&amp;precision=1')</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.104.1">
        <value>*</value>
        <valid>info</valid>
        <outcome>
          <TestOutcome rdf:about="#tr.104.1">
            <run:description xml:lang="en">%(runPropertyURI='value', datatypeURI='?units=bps,kbps,Mbps&amp;precision=1')</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
  </Test>
  <Test rdf:about="#test.106">
    <!-- Header -->
    <requiresPlugin rdf:resource="#rstplugin.networking.not-connected.6" />
    <object>reuters_rsttest.name='testBandwidth_up'.status</object>
    <isContainedBy rdf:resource="#group.networking.not-connected" />
    <priority>0.2003</priority>
    <dc:title xml:lang="en">Upload bandwidth for %GEO_ZONE%1 Private Network:</dc:title>
    <dc:description xml:lang="en">Tests the bandwidth for upload data between your local computer and the Thomson Reuters server</dc:description>
    <!-- Display -->
    <default:description xml:lang="en">%(runPropertyURI='value', datatypeURI='?units=bps,kbps,Mbps&amp;precision=1')</default:description>
    <rfs:urlType>DT_MPLS_MAIN</rfs:urlType>
    <rfs:dataCenterZone>%GEO_ZONE%</rfs:dataCenterZone>
    <testResult>
      <TestResult rdf:about="#tr.106.0">
        <value>=0</value>
        <valid>warning</valid>
        <outcome>
          <TestOutcome rdf:about="#tr.106.0">
            <run:description xml:lang="en">%(runPropertyURI='value', datatypeURI='?units=bps,kbps,Mbps&amp;precision=1')</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.106.1">
        <value>*</value>
        <valid>info</valid>
        <outcome>
          <TestOutcome rdf:about="#tr.106.1">
            <run:description xml:lang="en">%(runPropertyURI='value', datatypeURI='?units=bps,kbps,Mbps&amp;precision=1')</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
  </Test>
  <Test rdf:about="#test.105">
    <!-- Header -->
    <requiresPlugin rdf:resource="#rstplugin.networking.not-connected.6" />
    <object>reuters_rsttest.name='testBandwidth_down'.status</object>
    <isContainedBy rdf:resource="#group.networking.not-connected" />
    <priority>0.2006</priority>
    <dc:title xml:lang="en">Download bandwidth for %GEO_ZONE%2 Private Network:</dc:title>
    <dc:description xml:lang="en">Tests the bandwidth for download data between your local computer and the Thomson Reuters server</dc:description>
    <!-- Display -->
    <default:description xml:lang="en">%(runPropertyURI='value', datatypeURI='?units=bps,kbps,Mbps&amp;precision=1')</default:description>
    <rfs:urlType>DT_MPLS_FAILOVER</rfs:urlType>
    <rfs:dataCenterZone>%GEO_ZONE%</rfs:dataCenterZone>
    <testResult>
      <TestResult rdf:about="#tr.105.0">
        <value>=0</value>
        <valid>warning</valid>
        <outcome>
          <TestOutcome rdf:about="#tr.105.0">
            <run:description xml:lang="en">%(runPropertyURI='value', datatypeURI='?units=bps,kbps,Mbps&amp;precision=1')</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.105.1">
        <value>*</value>
        <valid>info</valid>
        <outcome>
          <TestOutcome rdf:about="#tr.105.1">
            <run:description xml:lang="en">%(runPropertyURI='value', datatypeURI='?units=bps,kbps,Mbps&amp;precision=1')</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
  </Test>
  <Test rdf:about="#test.107">
    <!-- Header -->
    <requiresPlugin rdf:resource="#rstplugin.networking.not-connected.6" />
    <object>reuters_rsttest.name='testBandwidth_up'.status</object>
    <isContainedBy rdf:resource="#group.networking.not-connected" />
    <priority>0.2007</priority>
    <dc:title xml:lang="en">Upload bandwidth for %GEO_ZONE%2 Private Network:</dc:title>
    <dc:description xml:lang="en">Tests the bandwidth for download data between your local computer and the Thomson Reuters Xtra server</dc:description>
    <!-- Display -->
    <default:description xml:lang="en">%(runPropertyURI='value', datatypeURI='?units=bps,kbps,Mbps&amp;precision=1')</default:description>
    <rfs:urlType>DT_MPLS_FAILOVER</rfs:urlType>
    <rfs:dataCenterZone>%GEO_ZONE%</rfs:dataCenterZone>
    <testResult>
      <TestResult rdf:about="#tr.107.0">
        <value>=0</value>
        <valid>warning</valid>
        <outcome>
          <TestOutcome rdf:about="#tr.107.0">
            <run:description xml:lang="en">%(runPropertyURI='value', datatypeURI='?units=bps,kbps,Mbps&amp;precision=1')</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.107.1">
        <value>*</value>
        <valid>info</valid>
        <outcome>
          <TestOutcome rdf:about="#tr.107.1">
            <run:description xml:lang="en">%(runPropertyURI='value', datatypeURI='?units=bps,kbps,Mbps&amp;precision=1')</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
  </Test>
  <Test rdf:about="#test.113">
    <!-- Header -->
    <requiresPlugin rdf:resource="#rstplugin.networking.not-connected.6" />
    <object>reuters_rsttest.name='testLatency'.status</object>
    <isContainedBy rdf:resource="#group.networking.not-connected" />
    <priority>0.2011</priority>
    <dc:title xml:lang="en">Average Latency (One Way) for %GEO_ZONE%1 Internet:</dc:title>
    <dc:description xml:lang="en">Tests the network latency between your local computer and the Thomson Reuters server</dc:description>
    <!-- Display -->
    <default:description xml:lang="en">%(runPropertyURI='value', datatypeURI='?units=ms,s&amp;precision=1')</default:description>
    <rfs:urlType>DT_INTERNET_MAIN</rfs:urlType>
    <testResult>
      <TestResult rdf:about="#tr.113.0">
        <value>=0</value>
        <valid>warning</valid>
        <outcome>
          <TestOutcome rdf:about="#tr.113.0">
            <run:description xml:lang="en">%(runPropertyURI='value', datatypeURI='?units=ms,s&amp;precision=1')</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.113.1">
        <value>*</value>
        <valid>info</valid>
        <outcome>
          <TestOutcome rdf:about="#tr.113.1">
            <run:description xml:lang="en">%(runPropertyURI='value', datatypeURI='?units=ms,s&amp;precision=1')</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
  </Test>
  <Test rdf:about="#test.114">
    <!-- Header -->
    <requiresPlugin rdf:resource="#rstplugin.networking.not-connected.6" />
    <object>reuters_rsttest.name='testLatency'.status</object>
    <isContainedBy rdf:resource="#group.networking.not-connected" />
    <priority>0.2013</priority>
    <dc:title xml:lang="en">Average Latency (One Way) for %GEO_ZONE%2 Internet:</dc:title>
    <dc:description xml:lang="en">Tests the network latency between your local computer and the Thomson Reuters server</dc:description>
    <!-- Display -->
    <default:description xml:lang="en">%(runPropertyURI='value', datatypeURI='?units=ms,s&amp;precision=1')</default:description>
    <rfs:urlType>DT_INTERNET_FAILOVER</rfs:urlType>
    <testResult>
      <TestResult rdf:about="#tr.114.0">
        <value>=0</value>
        <valid>warning</valid>
        <outcome>
          <TestOutcome rdf:about="#tr.114.0">
            <run:description xml:lang="en">%(runPropertyURI='value', datatypeURI='?units=ms,s&amp;precision=1')</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.114.1">
        <value>*</value>
        <valid>info</valid>
        <outcome>
          <TestOutcome rdf:about="#tr.114.1">
            <run:description xml:lang="en">%(runPropertyURI='value', datatypeURI='?units=ms,s&amp;precision=1')</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
  </Test>
  <Test rdf:about="#test.115">
    <!-- Header -->
    <requiresPlugin rdf:resource="#rstplugin.networking.not-connected.6" />
    <object>reuters_rsttest.name='testLatency'.status</object>
    <isContainedBy rdf:resource="#group.networking.not-connected" />
    <priority>0.2010</priority>
    <dc:title xml:lang="en">Average Latency (One Way) for %GEO_ZONE%1 Private Network:</dc:title>
    <dc:description xml:lang="en">Tests the network latency between your local computer and the Thomson Reuters server</dc:description>
    <!-- Display -->
    <default:description xml:lang="en">%(runPropertyURI='value', datatypeURI='?units=ms,s&amp;precision=1')</default:description>
    <rfs:urlType>DT_MPLS_MAIN</rfs:urlType>
    <testResult>
      <TestResult rdf:about="#tr.115.0">
        <value>=0</value>
        <valid>warning</valid>
        <outcome>
          <TestOutcome rdf:about="#tr.115.0">
            <run:description xml:lang="en">%(runPropertyURI='value', datatypeURI='?units=ms,s&amp;precision=1')</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.115.1">
        <value>*</value>
        <valid>info</valid>
        <outcome>
          <TestOutcome rdf:about="#tr.115.1">
            <run:description xml:lang="en">%(runPropertyURI='value', datatypeURI='?units=ms,s&amp;precision=1')</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
  </Test>
  <Test rdf:about="#test.116">
    <!-- Header -->
    <requiresPlugin rdf:resource="#rstplugin.networking.not-connected.6" />
    <object>reuters_rsttest.name='testLatency'.status</object>
    <isContainedBy rdf:resource="#group.networking.not-connected" />
    <priority>0.2012</priority>
    <dc:title xml:lang="en">Average Latency (One Way) for %GEO_ZONE%2 Private Network:</dc:title>
    <dc:description xml:lang="en">Tests the network latency between your local computer and the Thomson Reuters server</dc:description>
    <!-- Display -->
    <default:description xml:lang="en">%(runPropertyURI='value', datatypeURI='?units=ms,s&amp;precision=1')</default:description>
    <rfs:urlType>DT_MPLS_FAILOVER</rfs:urlType>
    <testResult>
      <TestResult rdf:about="#tr.116.0">
        <value>=0</value>
        <valid>warning</valid>
        <outcome>
          <TestOutcome rdf:about="#tr.116.0">
            <run:description xml:lang="en">%(runPropertyURI='value', datatypeURI='?units=ms,s&amp;precision=1')</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.116.1">
        <value>*</value>
        <valid>info</valid>
        <outcome>
          <TestOutcome rdf:about="#tr.116.1">
            <run:description xml:lang="en">%(runPropertyURI='value', datatypeURI='?units=ms,s&amp;precision=1')</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
  </Test>
  <Test rdf:about="#test.121">
    <!-- Header -->
    <requiresPlugin rdf:resource="#rstplugin.networking.not-connected.6" />
    <!--<rfs:isRerunAllowed>true</rfs:isRerunAllowed>-->
    <object>reuters_rsttest.name='testHTTPSConnection'.status</object>
    <isContainedBy rdf:resource="#group.prerequisites.software" />
    <priority>0.991</priority>
    <dc:title xml:lang="en">HTTPS Connection Check:</dc:title>
    <dc:description xml:lang="en">Checks connection to an HTTPS server</dc:description>
    <!-- Parameters -->
    <rfs:httpsTestURL>https://heartbeat.cp.thomsonreuters.net/heartbeat.xml</rfs:httpsTestURL>
    <testResult>
      <TestResult rdf:about="#tr.121.success">
        <value>success</value>
        <valid>pass</valid>
        <outcome>
          <TestOutcome rdf:about="#tr.121.success">
            <run:description>Successful</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.121.connection_error">
        <value>connection_error</value>
        <valid>alert</valid>
        <outcome>
          <TestOutcome rdf:about="#tr.121.connection_error">
            <run:description>Connection error</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.121.certificate_error">
        <value>certificate_error</value>
        <valid>fail</valid>
        <outcome>
          <TestOutcome rdf:about="#tr.121.certificate_error">
            <run:description>Certificate error</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.121.failed">
        <value>failed</value>
        <valid>warning</valid>
        <outcome>
          <TestOutcome rdf:about="#tr.121.failed">
            <run:description>Failure</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
  </Test>
  <Test rdf:about="#test.124">
    <!-- Header -->
    <object>Reuters_product.name='Microsoft Internet Explorer'.tempFolderSize</object>
    <isContainedBy rdf:resource="#group.prerequisites.software" />
    <priority>0.1013</priority>
    <dc:title xml:lang="en">Temporary Internet Files folder size:</dc:title>
    <rfs:OS />
    <rfs:minimumFolderSize rdf:datatype="http://www.w3.org/2001/XMLSchema#decimal">51200</rfs:minimumFolderSize>
    <default:recommendation xml:lang="en">Required: Temporary Internet Files folder size must be at least %(rfsPropertyURI='minimumFolderSize', datatypeURI='?units=KB,MB,GB&amp;precision=1&amp;unitFactor=1024')</default:recommendation>
    <!--<stdimpl:registryKey>HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Internet Settings\5.0\Cache\Content\CacheLimit</stdimpl:registryKey>-->
    <stdimpl:javascript>
      var CacheSize;
      var isError = false;

      try
      {
      var WshShell = new ActiveXObject( "WScript.Shell" );
      CacheSize = WshShell.RegRead("HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Internet Settings\\5.0\\Cache\\Content\\CacheLimit");
      }
      catch(e)
      {
      // try 64-bit key, in case the 32-bit key is failed
      try
      {
      CacheSize = RDMC.RDMCLib.Registry.QueryValueEx("HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Internet Settings\\5.0\\Cache\\Content", "CacheLimit", true);
      }
      catch(e)
      {
      isError = true;
      }
      }

      if(isError == true)
      {
      testResult.setRawResult("error");
      }
      else
      {
      testResult.setTypedRawResult(CacheSize, "http://www.w3.org/2001/XMLSchema#decimal" );
      }
    </stdimpl:javascript>
    <!-- Display -->
    <default:description xml:lang="en">%(runPropertyURI='status')</default:description>
    <!-- Validation -->
    <testResult>
      <TestResult rdf:about="#tr.124.IETempPass">
        <value>&gt;=%(rfsPropertyURI='minimumFolderSize')</value>
        <valid>pass</valid>
        <outcome>
          <TestOutcome rdf:about="#tr.124.IETempPass.MSG">
            <run:description xml:lang="en">%(runPropertyURI='value', datatypeURI='?units=KB,MB,GB&amp;precision=1&amp;unitFactor=1024')</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.124.IETempWarning">
        <value>&lt;%(rfsPropertyURI='minimumFolderSize')</value>
        <valid>warning</valid>
        <outcome>
          <TestOutcome rdf:about="#tr.124.IETempWarning.MSG">
            <run:description xml:lang="en">%(runPropertyURI='value', datatypeURI='?units=KB,MB,GB&amp;precision=1&amp;unitFactor=1024'). It does not meet Thomson Reuters Eikon Desktop system requirements.</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.124.IETempError">
        <value>error</value>
        <valid>warning</valid>
        <outcome>
          <TestOutcome rdf:about="#tr.124.IETempError.MSG">
            <run:description xml:lang="en">Unable to determine the size of Temporary Internet Files folder.</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
  </Test>
  <Test rdf:about="#test.125">
    <!-- Header -->
    <object>Reuters_RstTest.name='InternetAvailability'.value</object>
    <isContainedBy rdf:resource="#group.prerequisites.software" />
    <priority>0.10131</priority>
    <dc:title xml:lang="en">Internet Availability Test:</dc:title>
    <dc:description xml:lang="en">Tests the availability of an Internet connection.</dc:description>
    <!--<rfs:cpURL>http://graphics.thomsonreuters.com</rfs:cpURL>-->
    <!-- Validation Logic -->
    <stdimpl:javascript>
      var status = RDMC.FDMHttpGet2("http://eikontest.thomsonreuters.com/Eikon/EIKONTEST.TXT");
      testResult.setRawResult(status);
    </stdimpl:javascript>
    <testResult>
      <TestResult rdf:about="#tr.125.not_available">
        <value>0</value>
        <valid>info</valid>
        <outcome>
          <TestOutcome rdf:about="#tr.125.not_available">
            <run:description>Internet not accessible</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.125.available">
        <value>*</value>
        <valid>info</valid>
        <outcome>
          <TestOutcome rdf:about="#tr.125.available">
            <run:description>Internet accessible</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
  </Test>
  <Test rdf:about="#test.62">
    <!-- Header -->
    <object>Reuters_RstTest.name='ProductName'.value</object>
    <isContainedBy rdf:resource="#group.product-information" />
    <priority>2</priority>
    <dc:title xml:lang="en">Product Name:</dc:title>
    <!-- Display -->
    <default:description xml:lang="en">%(runPropertyURI='value')</default:description>
    <stdimpl:javascript>

      var productName = RDMC.ProductName;
      var eewmProduct = productName.search(/excel/i); // powerlink version
      var configProvider = RDMC.KobraProviderManager.FindProvider("Configuration");

      var variant = configProvider.GetPropertyValue("COMMON/RDE_PRODUCT/VARIANT");

      var rdeProductName;
      if (eewmProduct != -1)
      {
      rdeProductName = configProvider.GetPropertyValue("COMMON/RDE_PRODUCT/NAME_EXCEL");
      }
      else
      {
      rdeProductName = configProvider.GetPropertyValue("COMMON/RDE_PRODUCT/NAME");
      }

      if (variant != "")
      {
      testResult.setRawResult(rdeProductName + " (" + variant + ")");
      }
      else
      {
      testResult.setRawResult(rdeProductName);
      }

    </stdimpl:javascript>
    <testResult>
      <TestResult rdf:about="#tr.62">
        <value>*</value>
        <valid>info</valid>
        <outcome>
          <TestOutcome rdf:about="#tr.62">
            <run:description xml:lang="en">%(runPropertyURI='value')</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
  </Test>
  <Test rdf:about="#test.127">
    <!-- Header -->
    <object>Reuters_RstTest.name='ProductIdString'.value</object>
    <isContainedBy rdf:resource="#group.product-information" />
    <priority>7</priority>
    <dc:title xml:lang="en">Product ID String:</dc:title>
    <dc:description xml:lang="en">Show the product identification string</dc:description>
    <stdimpl:javascript>
      <![CDATA[
				var configProvider=RDMC.KobraProviderManager.FindProvider("Configuration");
				var StringID = configProvider.GetPropertyValue("RDE_PRODUCT_STRINGID");
				testResult.setRawResult(StringID);
 		]]>
    </stdimpl:javascript>
    <testResult>
      <TestResult rdf:about="#tr.127.default">
        <value>*</value>
        <valid>info</valid>
        <outcome>
          <TestOutcome rdf:about="#tr.127.0">
            <run:description xml:lang="en">%(runPropertyURI='value')</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
  </Test>
  <Test rdf:about="#test.128">
    <!-- Header -->
    <object>Reuters_RstTest.name='ProductVersion'.value</object>
    <isContainedBy rdf:resource="#group.product-information" />
    <priority>7</priority>
    <dc:title xml:lang="en">Product Version:</dc:title>
    <dc:description xml:lang="en">Show the product version</dc:description>
    <!-- Display -->
    <stdimpl:javascript>
      <![CDATA[
        var configProvider=RDMC.KobraProviderManager.FindProvider("Configuration");
        var prodVersion = configProvider.GetPropertyValue("RDE_PRODUCT_VERSION_INFO");
		if (prodVersion.length <= 0)
			prodVersion = "Not found";
		testResult.setRawResult(prodVersion);
		]]>
    </stdimpl:javascript>
    <testResult>
      <TestResult rdf:about="#tr.128.default">
        <value>*</value>
        <valid>info</valid>
        <outcome>
          <TestOutcome rdf:about="#tr.128.0">
            <run:description xml:lang="en">%(runPropertyURI='value')</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
  </Test>
  <Test rdf:about="#test.129">
    <!-- Header -->
    <object>Reuters_RstTest.name='MachineId'.value</object>
    <isContainedBy rdf:resource="#group.product-information" />
    <priority>8</priority>
    <dc:title xml:lang="en">Machine ID:</dc:title>
    <dc:description xml:lang="en">Show the machine identification string</dc:description>
    <stdimpl:javascript>
      <![CDATA[
			machineId = RDMC.RDMCLib.Tools.MachineId;
			testResult.setRawResult(machineId);
 		]]>
    </stdimpl:javascript>
    <testResult>
      <TestResult rdf:about="#tr.129.default">
        <value>*</value>
        <valid>info</valid>
        <outcome>
          <TestOutcome rdf:about="#tr.129.0">
            <run:description xml:lang="en">%(runPropertyURI='value')</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
  </Test>
  <Test rdf:about="#test.130">
    <!-- Header -->
    <object>Reuters_RstTest.name='MSIProductVersion'.value</object>
    <isContainedBy rdf:resource="#group.product-information" />
    <priority>7</priority>
    <dc:title xml:lang="en">Product MSI Version:</dc:title>
    <dc:description xml:lang="en">Show the MSI Product Version</dc:description>
    <stdimpl:javascript>
      <![CDATA[			
			var configProvider=RDMC.KobraProviderManager.FindProvider("Configuration");
			var MSIProdVer = configProvider.GetPropertyValue("RDE_PRODUCT_MSIPRODUCTVERSION");			
			testResult.setRawResult(MSIProdVer);			
 		]]>
    </stdimpl:javascript>
    <testResult>
      <TestResult rdf:about="#tr.130.default">
        <value>*</value>
        <valid>info</valid>
        <outcome>
          <TestOutcome rdf:about="#tr.130.1">
            <run:description xml:lang="en">%(runPropertyURI='value')</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
  </Test>
  <Test rdf:about="#test.133">
    <!-- Header -->
    <!--
	Got information from http://www.visualbasicscript.com/m30518-print.aspx
	...
	1) Byte number zero always has a 3C or 46 - I couldnt find more information about this byte.The next three bytes are zeros. 
	2) Byte number 4 is a counter used by the 'Internet Options' property sheet (Internet explorer->Tools->Internet Options...). 
	As you manually change the internet setting (such as LAN settings in the Connections tab), this counter increments.Its not very useful byte.But it MUST have a value.I keep it zero always.The next three bytes are zeros (Bytes 5 to 7). 
  
	3) Byte number 8 can take different values as per your settings. 
	The value is : 
	09 (00001001) when only 'Automatically detect settings' is enabled 
	03 (00000011) when only 'Use a proxy server for your LAN' is enabled 
	0B (00001011) when both are enabled 
	05 (00000101) when only 'Use automatic configuration script' is enabled 
	0D (00001101) when 'Automatically detect settings' and 'Use automatic configuration script' are enabled 
	07 (00000101) when 'Use a proxy server for your LAN' and 'Use automatic configuration script' are enabled 
	0F (00001111) when all the three are enabled. 
	01 (00000001) when none of them are enabled. 
	The next three bytes are zeros (Bytes 9 to B). 
	...
	-->
    <object>Reuters_RstTest.name='IELanSettings'.value</object>
    <isContainedBy rdf:resource="#group.prerequisites.software" />
    <priority>0.10131</priority>
    <dc:title xml:lang="en">IE LAN Settings:</dc:title>
    <default:recommendation xml:lang="en">Web Proxy Auto-Discovery must be disabled to allow end-user machines to download updates. Auto configuration script and proxy server setting should not be enabled simultaneously.</default:recommendation>
    <dc:description xml:lang="en">Checks how Internet Explorer proxy settings are configured.</dc:description>
    <stdimpl:javascript>
      try
      {
      var WshShell = new ActiveXObject( "WScript.Shell" );
      var configBytes = WshShell.RegRead("HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Internet Settings\\Connections\\DefaultConnectionSettings");
      var configByteArray = configBytes.toArray();
      Logger.debug("Byte 8 = " + configByteArray[8].toString());

      var result;

      if (configByteArray[8] &amp; 8)
      {
      Logger.info("WPAD enabled.");
      result = "yes";
      }
      else
      {
      Logger.info("WPAD disabled.");
      result = "no";
      }

      if (configByteArray[8] &amp; 4)
      {
      Logger.info("Automatic configuration script enabled.");
      result += "_yes";
      }
      else
      {
      Logger.info("Automatic configuration script disabled.");
      result += "_no";
      }

      if (configByteArray[8] &amp; 2)
      {
      Logger.info("Proxy server setting enabled.");
      result += "_yes";
      }
      else
      {
      Logger.info("Proxy server setting disabled.");
      result += "_no";
      }

      testResult.setRawResult(result);
      }
      catch(e)
      {
      Logger.debug(e);
      testResult.setRawResult("error");
      }
    </stdimpl:javascript>
    <testResult>
      <TestResult rdf:about="#tr.133.error">
        <value>error</value>
        <valid>warning</valid>
        <outcome>
          <TestOutcome rdf:about="#to.133.error">
            <run:description>Unable to determine status</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.133.none">
        <value>no_no_no</value>
        <valid>pass</valid>
        <outcome>
          <TestOutcome rdf:about="#to.133.none">
            <run:description>All proxy settings are disabled.</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.133.proxyserver">
        <value>no_no_yes</value>
        <valid>pass</valid>
        <outcome>
          <TestOutcome rdf:about="#to.133.proxyserver">
            <run:description>Proxy server setting is enabled.</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.133.autoconfigscript">
        <value>no_yes_no</value>
        <valid>pass</valid>
        <outcome>
          <TestOutcome rdf:about="#to.133.autoconfigscript">
            <run:description>Automatic configuration script is enabled.</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.133.autoconfigscript_proxyserver">
        <value>no_yes_yes</value>
        <valid>warning</valid>
        <outcome>
          <TestOutcome rdf:about="#to.133.autoconfigscript_proxyserver">
            <run:description>Automatic configuration script and proxy server setting are enabled.</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.133.wpad">
        <value>yes_no_no</value>
        <valid>warning</valid>
        <outcome>
          <TestOutcome rdf:about="#to.133.wpad">
            <run:description>Web Proxy Auto-Discovery is enabled.</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.133.wpad_proxyserver">
        <value>yes_no_yes</value>
        <valid>warning</valid>
        <outcome>
          <TestOutcome rdf:about="#to.133.wpad_proxyserver">
            <run:description>Web Proxy Auto-Discovery and proxy server setting are enabled.</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.133.wpad_autoconfigscript">
        <value>yes_yes_no</value>
        <valid>warning</valid>
        <outcome>
          <TestOutcome rdf:about="#to.133.wpad_autoconfigscript">
            <run:description>Web Proxy Auto-Discovery and automatic configuration script are enabled.</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.133.wpad_autoconfigscript_proxyserver">
        <value>yes_yes_yes</value>
        <valid>warning</valid>
        <outcome>
          <TestOutcome rdf:about="#to.133.wpad_autoconfigscript_proxyserver">
            <run:description>All proxy settings are enabled.</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
    <!-- #tr.133.enabled and #tr.133.disabled were made obsolete by DCD-1363 -->
    <testResult>
      <TestResult rdf:about="#tr.133.enabled">
        <value>enabled</value>
        <valid>warning</valid>
        <outcome>
          <TestOutcome rdf:about="#to.133.enabled">
            <run:description>Enabled</run:description>
            <run:recommendation xml:lang="en">You must disable the Web Proxy Auto-Discovery protocol to allow end-user machines to download updates.</run:recommendation>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.133.disabled">
        <value>disabled</value>
        <valid>pass</valid>
        <outcome>
          <TestOutcome rdf:about="#to.133.disabled">
            <run:description>Disabled</run:description>
            <run:recommendation xml:lang="en">When the Web Proxy Auto-Discovery protocol is disabled end-user machines can download updates.</run:recommendation>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
  </Test>
  <Test rdf:about="#test.134">
    <object>Reuters_RstTest.name='WMIService'.value</object>
    <isContainedBy rdf:resource="#group.prerequisites.software" />
    <priority>0.10</priority>
    <dc:title xml:lang="en">WMI Service:</dc:title>
    <default:description xml:lang="en">%(runPropertyURI='value')</default:description>
    <stdimpl:javascript>
      var service;
      try
      {
      Logger.debug("Getting WMI service object...");
      service = GetObject("winmgmts:{impersonationLevel=impersonate}!\\\\.\\root\\cimv2");
      Logger.info("Get WMI service object success.");
      }
      catch (e)
      {
      Logger.info("Get WMI service object failed.");
      testResult.setRawResult("error");
      return;
      }

      var isQuerySuccess = true;
      try
      {
      Logger.debug("Testing query for Win32_OperatingSystem from WMI service object...");
      var queryResultSet = service.ExecQuery("SELECT * FROM Win32_OperatingSystem");
      if (queryResultSet.Count == 0)
      {
      Logger.info("Querying WMI for Win32_OperatingSystem returns empty result.");
      isQuerySuccess = false;
      }
      }
      catch (e)
      {
      Logger.info("Exception occurred while performing query.");
      isQuerySuccess = false;
      }

      if (isQuerySuccess)
      {
      Logger.info("Test query from WMI service object success.");
      testResult.setRawResult("ok");
      }
      else
      {
      Logger.info("Test query from WMI service object failed.");
      testResult.setRawResult("error");
      }
    </stdimpl:javascript>
    <testResult>
      <TestResult rdf:about="#tr.134.ok">
        <value>ok</value>
        <valid>pass</valid>
        <outcome>
          <TestOutcome rdf:about="#to.134.ok">
            <run:description xml:lang="en">Available</run:description>
            <run:recommendation xml:lang="en">System test can perform checks properly.</run:recommendation>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.134.error">
        <value>*</value>
        <valid>alert</valid>
        <outcome>
          <TestOutcome rdf:about="#to.134.error">
            <run:description xml:lang="en">Could not collect information from WMI service.</run:description>
            <run:recommendation xml:lang="en">WMI service must be available. Please contact your administrator.</run:recommendation>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
  </Test>
  <Test rdf:about="#test.135">
    <object>Reuters_RstTest.name='DeleteBrowsingHistoryOnExit'.value</object>
    <isContainedBy rdf:resource="#group.prerequisites.software" />
    <priority>0.10135</priority>
    <dc:title xml:lang="en">Delete Browsing History on Exit:</dc:title>
    <default:recommendation xml:lang="en">Internet Explorer setting: Delete Browsing History on Exit must be disabled.</default:recommendation>
    <stdimpl:javascript>
      var isEnabled;
      var isFound = false;
      try
      {
      Logger.debug("Reading value from registry...");
      var shell = new ActiveXObject("WScript.Shell");
      isEnabled = shell.RegRead("HKEY_CURRENT_USER\\Software\\Microsoft\\Internet Explorer\\Privacy\\ClearBrowsingHistoryOnExit");
      Logger.info("Registry value 'ClearBrowsingHistoryOnExit' = [" + isEnabled + "]");
      isFound = true;
      }
      catch (e)
      {
      // try 64-bit key, in case the 32-bit key is failed
      try
      {
      Logger.debug("Reading value from 64-bit registry...");
      isEnabled = RDMC.RDMCLib.Registry.QueryValueEx("HKEY_CURRENT_USER\\Software\\Microsoft\\Internet Explorer\\Privacy", "ClearBrowsingHistoryOnExit", true);
      Logger.info("Registry value 'ClearBrowsingHistoryOnExit' (x64) = [" + isEnabled + "]");
      isFound = true;
      }
      catch(e)
      {
      Logger.info("Registry value 'ClearBrowsingHistoryOnExit' not found.");
      }
      }

      var rawResult;
      if (isFound)
      {
      if (isEnabled == 0)
      {
      rawResult = "disabled";
      }
      else
      {
      rawResult = "enabled";
      }
      }
      else
      {
      Logger.info("IE version may be older than 8 (does not support the option) or the option has never been set. Safely assume the option is disabled.");
      rawResult = "disabled";
      }
      Logger.info("The 'delete browsing history on exit' setting is [" + rawResult + "]");
      testResult.setRawResult(rawResult);
    </stdimpl:javascript>
    <testResult>
      <TestResult rdf:about="#tr.135.disabled">
        <value>disabled</value>
        <valid>pass</valid>
        <outcome>
          <TestOutcome rdf:about="#to.135.disabled">
            <run:description xml:lang="en">Disabled</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.135.not_found">
        <value>not_found</value>
        <valid>pass</valid>
        <outcome>
          <TestOutcome rdf:about="#to.135.not_found">
            <run:description xml:lang="en">Unable to determine status.</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.135.enabled">
        <value>enabled</value>
        <valid>alert</valid>
        <outcome>
          <TestOutcome rdf:about="#to.135.enabled">
            <run:description xml:lang="en">Enabled</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
  </Test>
  <Test rdf:about="#test.145">
    <!-- Header -->
    <object>Reuters_RstTest.name='IeSecureProtocols'.value</object>
    <priority>10</priority>
    <isContainedBy rdf:resource="#group.information.system" />
    <dc:title xml:lang="en">Internet Explorer Secure Protocols:</dc:title>
    <dc:description xml:lang="en">Tells what is the secure protocols IE used</dc:description>
    <!-- Display -->
    <default:description xml:lang="en">Internet Explorer setting: secure protocols</default:description>
    <!-- Validation Logic -->
    <stdimpl:javascript>

      var WshShell = new ActiveXObject( "WScript.Shell" );
      var status;
      var value;

      var SSL2 = 0x8;
      var SSL3 = 0x20;
      var TLS10 = 0x80;
      var TLS11 = 0x200;
      var TLS12 = 0x800;
      var protocolNames = "";
      try{
      try{
      Logger.debug("Reading value from GPO registry...");
      value  = WshShell.RegRead("HKEY_LOCAL_MACHINE\\Software\\Policies\\Microsoft\\Windows\\CurrentVersion\\Internet Settings\\SecureProtocols");
      }catch (e)
      {
      Logger.info("Registry value GPO 'SecureProtocols' not found.");
      if (e.number == -2147024894) /* key not found */
      {
      value = "";
      }
      }
      if(value == "")
      {
      Logger.debug("Reading value from user registry...");
      value  = WshShell.RegRead("HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Internet Settings\\SecureProtocols");
      }

      Logger.info("Registry value 'SecureProtocols' = [" + value + "]");


      if ((value &amp; SSL2) == SSL2)
      {
      protocolNames += " SSL 2.0";
      }
      if ((value &amp; SSL3) == SSL3)
      {
      if(protocolNames != ""){protocolNames+=",";}
      protocolNames += " SSL 3.0";
      }
      if ((value &amp; TLS10) == TLS10)
      {
      if(protocolNames != ""){protocolNames+=",";}
      protocolNames += " TLS 1.0";
      }
      if ((value &amp; TLS11) == TLS11)
      {
      if(protocolNames != ""){protocolNames+=",";}
      protocolNames +=  " TLS 1.1";
      }
      if ((value &amp; TLS12) == TLS12)
      {
      if(protocolNames != ""){protocolNames+=",";}
      protocolNames += " TLS 1.2";
      }
      }
      catch (e)
      {
      Logger.info("Registry value 'SecureProtocols' not found.");
      if (e.number == -2147024894) /* key not found */
      protocolNames = -1;
      }

      testResult.setRawResult(protocolNames);

    </stdimpl:javascript>
    <testResult>
      <TestResult rdf:about="#tr.145.info">
        <value>*</value>
        <valid>info</valid>
        <outcome>
          <TestOutcome rdf:about="#to.145.info">
            <run:description xml:lang="en">%(runPropertyURI='value')</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
  </Test>
  <Group core:priority="0" rdf:about="#group.prerequisites">
    <dc:title xml:lang="en">Prerequisites</dc:title>
  </Group>
  <!--
	<Group rdf:ID="group.diagnostics" core:priority="0.1">
	<dc:title xml:lang="en">Diagnostics</dc:title>
	</Group>-->
  <Group core:priority="0.1" rdf:about="#group.prerequisites.software">
    <isContainedBy rdf:resource="#group.prerequisites" />
    <dc:title xml:lang="en">Software</dc:title>
  </Group>
  <Group core:priority="0.2" rdf:about="#group.prerequisites.hardware">
    <isContainedBy rdf:resource="#group.prerequisites" />
    <dc:title xml:lang="en">Hardware</dc:title>
  </Group>
  <Group core:priority="0.2" rdf:about="#group.information">
    <dc:title xml:lang="en">Information</dc:title>
  </Group>
  <Group core:priority="0.1" rdf:about="#group.information.system">
    <isContainedBy rdf:resource="#group.information" />
    <dc:title xml:lang="en">Computer Information</dc:title>
  </Group>
  <Group core:priority="0.2" rdf:about="#group.information.rde">
    <isContainedBy rdf:resource="#group.information" />
    <dc:title xml:lang="en">Thomson Reuters Settings</dc:title>
  </Group>
  <Group core:priority="0.2" rdf:about="#group.product-information">
    <isContainedBy rdf:resource="#group.information" />
    <dc:title xml:lang="en">Product Information</dc:title>
  </Group>
  <Group core:priority="0.3" rdf:about="#group.network">
    <dc:title xml:lang="en">Network</dc:title>
  </Group>
  <Group core:priority="0.1" rdf:about="#group.network.news">
    <isContainedBy rdf:resource="#group.network" />
    <dc:title xml:lang="en">News</dc:title>
  </Group>
  <!-- BE CAREFUL, The text contains a space charactere at his end.
If you remove it, the script processing the testsuite could create
two group entry with the same name (Network Tools. here) because 
the GROUP_NETWORKING_CONNECTED title is "Networking Tools." too.
To hack this behavior the space was add to the end. -->
  <Group core:priority="0.4" rdf:about="#group.networking.not-connected">
    <isContainedBy rdf:resource="#group.network" />
    <dc:title xml:lang="en">Network Tools </dc:title>
  </Group>
  <Group core:priority="0.4" rdf:about="#group.networking.connected">
    <isContainedBy rdf:resource="#group.network" />
    <dc:title xml:lang="en">Network Tools</dc:title>
  </Group>
  <!-- <Group rdf:ID="group.network.debug" core:priority="0.2">
		<isContainedBy rdf:resource="#group.network"/>
		<dc:title xml:lang="en">Network Debugging</dc:title>
	</Group>	 -->
  <!-- Fix for bug R101749
	<Group rdf:ID="group.ngtx" core:priority="0.4">
		<isContainedBy rdf:resource="#group.information"/>
		<dc:title xml:lang="en">NGTX</dc:title>
	</Group> -->
  <Group core:priority="0.5" rdf:about="#group.dex2">
    <isContainedBy rdf:resource="#group.network" />
    <dc:title xml:lang="en">Data Retrieval Engine (DEX2)</dc:title>
  </Group>
  <Group core:priority="0.6" rdf:about="#group.tsi">
    <isContainedBy rdf:resource="#group.network" />
    <dc:title xml:lang="en">Time Series</dc:title>
  </Group>
  <Group core:priority="0.10" rdf:about="#group.serviceAvailability">
    <isContainedBy rdf:resource="#group.network" />
    <dc:title xml:lang="en">Services Availability</dc:title>
  </Group>
  <Group core:priority="0.11" rdf:about="#group.realtime">
    <isContainedBy rdf:resource="#group.network" />
    <dc:title xml:lang="en">Real Time</dc:title>
  </Group>
  <Group core:priority="0.10" rdf:about="#group.webservices">
    <isContainedBy rdf:resource="#group.network" />
    <dc:title xml:lang="en">Network Capabilities</dc:title>
  </Group>
  <Group core:priority="0.3" rdf:about="#group.updates">
    <isContainedBy rdf:resource="#group.information" />
    <dc:title xml:lang="en">Update Agent</dc:title>
  </Group>
  <!-- deprecated
    <Group rdf:ID="group.component-version" core:priority="0.4">
    <isContainedBy rdf:resource="#group.information" />
    <dc:title xml:lang="en">TESTMSG_DC_TITLE_GROUP_COMPONENT-VERSION</dc:title>
  </Group>
  <Group rdf:ID="group.addons" core:priority="0.5">
    <isContainedBy rdf:resource="#group.information" />
    <dc:title xml:lang="en">TESTMSG_DC_TITLE_GROUP_ADDONS</dc:title>
  </Group>
  <Group rdf:ID="group.installation-history" core:priority="0.6">
    <isContainedBy rdf:resource="#group.information" />
    <dc:title xml:lang="en">TESTMSG_DC_TITLE_GROUP_INSTALLATION-HISTORY</dc:title>
  </Group>-->
  <Group core:priority="0.95" rdf:about="#group.network.transactions">
    <isContainedBy rdf:resource="#group.network" />
    <dc:title xml:lang="en">Transaction</dc:title>
  </Group>
  <!--
				deprecated
	<Group rdf:ID="group.information.product-configuration">
		<isContainedBy rdf:resource="#group.information"/>
		<dc:title xml:lang="en">Product configuration</dc:title>
	</Group>
	<Group rdf:ID="group.information.kobra-func">
		<isContainedBy rdf:resource="#group.information"/>
		<dc:title xml:lang="en">Kobra Functionalities</dc:title>
	</Group>
	<Group rdf:ID="group.information.kobra-func">
		<isContainedBy rdf:resource="#group.information"/>
		<dc:title xml:lang="en">Kobra Functionalities</dc:title>
	</Group>
	<Group rdf:ID="group.information">
		<isContainedBy rdf:resource="#group.information.kobra-func"/>
		<dc:title xml:lang="en">RUS/Flexnet</dc:title>
	</Group>
			-->
  <!--
	<Group rdf:ID="group.diagnostics.desktop-component">
		<isContainedBy rdf:resource="#group.diagnostics"/>
	</Group>
	<Group rdf:ID="group.diagnostics.network">
		<isContainedBy rdf:resource="#group.diagnostics"/>
	</Group>
	<Group rdf:ID="group.diagnostics.network.connectivity">
		<isContainedBy rdf:resource="#group.diagnostics.network"/>
	</Group>
	<Group rdf:ID="group.diagnostics.network.performance">
		<isContainedBy rdf:resource="#group.diagnostics.network"/>
	</Group>
	<Group rdf:ID="group.information.component-system">
		<isContainedBy rdf:resource="#group.information"/>
	</Group>
	<Group rdf:ID="group.information.component-version">
		<isContainedBy rdf:resource="#group.information"/>
	</Group>
	<Group rdf:ID="group.information.product-configuration">
		<isContainedBy rdf:resource="#group.information"/>
		<isContainedBy rdf:resource="#group.information.troubleshooting.network"/>
	</Group>
	-->
  <Test rdf:about="#test.42">
    <!-- Header -->
    <requiresPlugin rdf:resource="#rstplugin.realtime.6" />
    <object>reuters_realtimeNetwork.record.update</object>
    <!--<rfs:isRerunAllowed>true</rfs:isRerunAllowed>-->
    <isContainedBy rdf:resource="#group.network.news" />
    <priority>3</priority>
    <dc:title xml:lang="en">News Headlines Streaming:</dc:title>
    <dc:description xml:lang="en">Subscribe a pixel to a pixel session and wait for the update() call back. This test only works for RICs of type RECORD.</dc:description>
    <!-- Realtime parameters -->
    <rfs:RIC>GetTheRealNewsRICFromTheConfiguration</rfs:RIC>
    <rfs:Alias>Q</rfs:Alias>
    <rfs:RecordType>record</rfs:RecordType>
    <rfs:Config>Kobra</rfs:Config>
    <rfs:Timeout>40</rfs:Timeout>
    <!-- Display -->
    <testResult>
      <TestResult rdf:about="#tr.42.0">
        <value>NFCP_UBMS</value>
        <valid>fail</valid>
        <outcome>
          <TestOutcome rdf:about="#to.42.0">
            <run:description xml:lang="en">Timeout (with RIC NFCP_UBMS).</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.42.1">
        <value>N2_UBMS</value>
        <valid>fail</valid>
        <outcome>
          <TestOutcome rdf:about="#to.42.1">
            <run:description xml:lang="en">Timeout (with RIC N2_UBMS).</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.42.2">
        <value>OK</value>
        <valid>pass</valid>
        <outcome>
          <TestOutcome rdf:about="#to.42.2">
            <run:description xml:lang="en">Pass</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
  </Test>
  <Test rdf:about="#test.79">
    <!-- Header -->
    <object>Reuters_RstTest.name='PublicAPI'.value</object>
    <isContainedBy rdf:resource="#group.information.rde" />
    <priority>8</priority>
    <dc:title xml:lang="en">Public API Installation Status:</dc:title>
    <dc:description xml:lang="en">Tells wether the PublicAPI feature is installed, querying the MSI database.</dc:description>
    <!-- Display -->
    <default:description xml:lang="en">%(runPropertyURI='value')</default:description>
    <!-- Validation Logic -->
    <stdimpl:javascript>

      var msiReturnStatus = { "-6":"msiInstallStateBadConfig",
      "-2":"msiInstallStateInvalidArg",
      "-1":"msiInstallStateUnknown",
      "1":"msiInstallStateAdvertised",
      "2":"msiInstallStateAbsent",
      "3":"msiInstallStateLocal",
      "4":"msiInstallStateSource"
      };

      var featureState = "msiInstallStateUnknown";

      var isEnabled = RDMC.versionInfo.Trd6.IsPublicAPIEnabled;

      if(isEnabled == true)
      {
      featureState = "msiInstallStateLocal";
      }
      else
      {
      featureState = "msiInstallStateAbsent";
      }

      <!--testResult.setRawResult(msiReturnStatus[featureState+'']);-->

      testResult.setRawResult(featureState);

    </stdimpl:javascript>
    <testResult>
      <TestResult rdf:about="#tr.79.1">
        <value>msiInstallStateBadConfig</value>
        <valid>fail</valid>
        <outcome>
          <TestOutcome rdf:about="#to.79.1">
            <run:description xml:lang="en">The configuration data is corrupt.</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.79.2">
        <value>msiInstallStateInvalidArg</value>
        <valid>fail</valid>
        <outcome>
          <TestOutcome rdf:about="#to.79.2">
            <run:description xml:lang="en">The function received an invalid parameter.</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.79.3">
        <value>msiInstallStateUnknown</value>
        <valid>fail</valid>
        <outcome>
          <TestOutcome rdf:about="#to.79.3">
            <run:description xml:lang="en">Unknown product code or feature ID.</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.79.4">
        <value>msiInstallStateAdvertised</value>
        <valid>info</valid>
        <outcome>
          <TestOutcome rdf:about="#to.79.4">
            <run:description xml:lang="en">The feature is advertised.</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.79.5">
        <value>msiInstallStateAbsent</value>
        <valid>info</valid>
        <outcome>
          <TestOutcome rdf:about="#to.79.5">
            <run:description xml:lang="en">The feature is not installed.</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.79.6">
        <value>msiInstallStateLocal</value>
        <valid>info</valid>
        <outcome>
          <TestOutcome rdf:about="#to.79.6">
            <run:description xml:lang="en">The feature is installed to run locally.</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.79.7">
        <value>msiInstallStateSource</value>
        <valid>info</valid>
        <outcome>
          <TestOutcome rdf:about="#to.79.7">
            <run:description xml:lang="en">The feature is installed to run from source.</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
  </Test>
  <Test rdf:about="#test.65">
    <!-- Header -->
    <object>Reuters_product.name='DACS Username'.value</object>
    <isContainedBy rdf:resource="#group.information.rde" />
    <priority>6</priority>
    <dc:title xml:lang="en">DACS User Name:</dc:title>
    <!-- Parameters -->
    <rfs:rawResultForError>NA</rfs:rawResultForError>
    <!-- Code -->
    <stdimpl:javascript>
      <![CDATA[
		// Init
		var configProvider=RDMC.KobraProviderManager.FindProvider("Configuration");
		var settingValue = "NA";
			
		// Read new setting
		try
		{
			settingValue = configProvider.GetPropertyValue("RDE_REALTIME_DACSUSERNAME");
			if( settingValue.length == 0 )
				settingValue = "NA";
		}
		catch(e)
		{
			settingValue = "NA";
		}
		if( settingValue == "NA" )
		{
			Logger.debug("Could not get a valid value for RDE_REALTIME_DACSUSERNAME");
				
			// Read old setting
			try
			{
				settingValue = configProvider.GetPropertyValue("common/PIXL/CustomerManaged/Default/Authentication/Standard/UserName");
				if( settingValue.length == 0 )
					settingValue = "NA";
			}
			catch(e)
			{
				settingValue = "NA";
			}
			if( settingValue == "NA" )
			{
				Logger.debug("Could not get a valid value for common/PIXL/CustomerManaged/Default/Authentication/Standard/UserName");
			}
			else
			{
				Logger.debug("Got value from common/PIXL/CustomerManaged/Default/Authentication/Standard/UserName = '" + settingValue + "'");
			}
		}
		else
		{
			Logger.debug("Got value from RDE_REALTIME_DACSUSERNAME = '" + settingValue + "'");
        }

        testResult.setRawResult(settingValue);
		]]>
    </stdimpl:javascript>
    <!-- Display -->
    <testResult>
      <TestResult rdf:about="#tr.65.0">
        <value />
        <valid>info</valid>
        <outcome rdf:resource="#to.65.0.0" />
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.65.1">
        <value>NA</value>
        <valid>info</valid>
        <outcome rdf:resource="#to.65.0.0" />
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.65.2">
        <value>*</value>
        <valid>info</valid>
        <outcome>
          <TestOutcome rdf:about="#to.65.0.1">
            <run:description xml:lang="en">%(runPropertyURI='value')</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
  </Test>
  <TestOutcome rdf:about="#to.65.0.0">
    <run:description>DACS user name does not exist.</run:description>
  </TestOutcome>
  <Test rdf:about="#test.66">
    <!-- Header -->
    <object>Reuters_product.name='DACS Position'.value</object>
    <isContainedBy rdf:resource="#group.information.rde" />
    <priority>7</priority>
    <dc:title xml:lang="en">DACS Position:</dc:title>
    <!-- Parameters -->
    <rfs:rawResultForError>NA</rfs:rawResultForError>
    <!-- Code -->
    <stdimpl:javascript>
      <![CDATA[
		// Init
		var configProvider=RDMC.KobraProviderManager.FindProvider("Configuration");
		var settingValue = "NA";
			
		// Read new setting
		try
		{
			settingValue = configProvider.GetPropertyValue("RDE_REALTIME_DACSPOSITION");
			if( settingValue.length == 0 )
				settingValue = "NA";
		}
		catch(e)
		{
			settingValue = "NA";
		}
		if( settingValue == "NA" )
		{
			Logger.debug("Could not get a valid value for RDE_REALTIME_DACSPOSITION");
				
			// Read old setting
			try
			{
				settingValue = configProvider.GetPropertyValue("common/PIXL/CustomerManaged/Default/Authentication/Standard/Position");
				if( settingValue.length == 0 )
					settingValue = "NA";
			}
			catch(e)
			{
				settingValue = "NA";
			}
			if( settingValue == "NA" )
			{
				Logger.debug("Could not get a valid value for common/PIXL/CustomerManaged/Default/Authentication/Standard/Position");
			}
			else
			{
				Logger.debug("Got value from common/PIXL/CustomerManaged/Default/Authentication/Standard/Position = '" + settingValue + "'");
			}
		}
		else
		{
			Logger.debug("Got value from RDE_REALTIME_DACSPOSITION = '" + settingValue + "'");
        }

        testResult.setRawResult(settingValue);
		]]>
    </stdimpl:javascript>
    <!-- Display -->
    <testResult>
      <TestResult rdf:about="#tr.66.0">
        <value />
        <valid>info</valid>
        <outcome rdf:resource="#to.66.0.0" />
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.66.1">
        <value>NA</value>
        <valid>info</valid>
        <outcome rdf:resource="#to.66.0.0" />
      </TestResult>
    </testResult>
    <testResult>
      <TestResult rdf:about="#tr.66.2">
        <value>*</value>
        <valid>info</valid>
        <outcome>
          <TestOutcome rdf:about="#to.66.0.1">
            <run:description xml:lang="en">%(runPropertyURI='value')</run:description>
          </TestOutcome>
        </outcome>
      </TestResult>
    </testResult>
  </Test>
  <TestOutcome rdf:about="#to.66.0.0">
    <run:description>DACS position does not exist.</run:description>
  </TestOutcome>
  <rfs:RicList rdf:ID="ric-list.random-permissioned.EQU">
    <rdf:value>KO.N, JNJ.N, BT.L, CAT.N, 3110.T</rdf:value>
  </rfs:RicList>
  <rfs:RicList rdf:ID="ric-list.random-permissioned.TSI">
    <rdf:value>CLM.A, EUR=, HEB</rdf:value>
  </rfs:RicList>
</rdf:RDF>